{"version":3,"sources":["components/Users/User/userStyles.tsx","components/Users/User/User.tsx","components/Users/Pagination/paginationStyles.ts","components/Users/Pagination/Pagination.tsx","components/Users/Search/searchFormStyles.ts","components/Users/Search/SearchForm.tsx","components/Users/Search/searchStyles.ts","components/Users/Search/Search.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Forms/components/FormControl.tsx","utils/validate.ts","components/Redirects/AuthRedirect.tsx","redux/reducers/users-selectors.ts","components/Buttons/followMessageStyles.ts","components/Buttons/FollowMessageBtns.tsx"],"names":["styles","createStyles","theme","root","background","palette","common","white","paddingTop","borderRadius","textAlign","display","height","flexDirection","avatarImg","width","margin","content","padding","flexGrow","buttons","justifyContent","maxWidth","btnLabel","fontSize","bottom","marginTop","borderTop","grey","btn","bottomLink","color","secondary","light","autoMargin","noHover","pointerEvents","withUserStyles","withStyles","withTheme","user","isLoading","classes","id","photos","name","status","followed","userAvatar","small","userPlaceholder","Card","className","Link","component","NavLink","to","RM","profile","getPath","underline","Skeleton","animation","variant","Avatar","src","alt","CardContent","classNames","Typography","gutterBottom","noWrap","CardActions","FollowMessageBtns","userId","customClasses","label","CardActionArea","compose","withWidth","withPaginationStyles","totalPages","currentPage","onSetCurrentPage","size","count","page","onChange","alignItems","backgroundColor","position","minHeight","breakpoints","up","marginBottom","input","marginLeft","spacing","flex","primary","main","iconButton","marginRight","minLength3","minLength","SearchReduxForm","reduxForm","form","withSearchFormStyles","handleSubmit","submitting","Paper","onSubmit","IconButton","type","aria-label","disabled","Field","RenderField","autoComplete","placeholder","validate","required","searchTxt","search","withSearchStyles","onChangeSearchText","searchRequest","onResetSearch","Chip","onDelete","Users","users","style","Grid","container","map","item","xs","sm","md","lg","key","length","Number","connect","state","getUsers","pageSize","getPageSize","totalUsersCount","getTotalUsersCount","getCurrentPage","getIsLoading","followInProgress","getFollowInProgress","searchQuery","getSearchQuery","requestUsers","withRouter","withAuthRedirect","useState","setSearchRequest","Math","ceil","location","useLocation","history","useHistory","useEffect","request","queryString","parse","updateUsers","getQueryParams","String","stringifyParams","stringify","undefined","e","value","replace","searchText","inputTypes","useStyles","makeStyles","textInput","transform","meta","touched","error","rest","includes","Boolean","helperText","fullWidth","control","checked","email","test","mapStateToProps","isAuth","getIsAuth","WrappedComponent","RedirectComponent","this","props","login","path","Component","usersReducer","btnFollow","success","dark","unfollow","follow","startChat","withFollowMessageStyles","updateProfileFollowed","labelClasses","textClasses","text","btnClasses","Button","startIcon","onClick"],"mappings":"iTAEMA,EAASC,aAAa,SAACC,GAAD,MAAmB,CAC3CC,KAAM,CACFC,WAAYF,EAAMG,QAAQC,OAAOC,MACjCC,WAAY,GACZC,aAAc,EACdC,UAAW,SACXC,QAAS,OACTC,OAAQ,OACRC,cAAe,UAEnBC,UAAW,CACPF,OAAQ,IACRG,MAAO,IACPC,OAAQ,UAEZC,QAAS,CACLC,QAAS,YACTC,SAAU,GAGdC,QAAS,CACLF,QAAS,cACTP,QAAS,OACTU,eAAgB,gBAChBN,MAAO,OACPO,SAAU,IACVN,OAAQ,UAEZO,SAAU,CACNC,SAAU,IAEdC,OAAQ,CACJC,UAAW,OACXC,UAAW,aAAezB,EAAMG,QAAQuB,KAAK,MAEjDC,IAAK,CACDd,MAAO,MACPO,SAAU,OAEdQ,WAAY,CACRnB,QAAS,QACTI,MAAO,OACPG,QAAS,SACTa,MAAO7B,EAAMG,QAAQ2B,UAAUC,OAEnCC,WAAY,CACRlB,OAAQ,UAEZmB,QAAS,CACLC,cAAe,YCsCRC,EDlCAC,YAAWtC,EAAQ,CAACuC,WAAW,GCkC/BF,EAhE0B,SAAC,GAAgC,IAA/BG,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QACjDC,EAAsCH,EAAtCG,GAAIC,EAAkCJ,EAAlCI,OAAQC,EAA0BL,EAA1BK,KAAMC,EAAoBN,EAApBM,OAAQC,EAAYP,EAAZO,SAC3BC,EAA8B,OAAjBJ,EAAOK,MAAiBL,EAAOK,MAAQC,IAC1D,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAWV,EAAQvC,MACrB,kBAACkD,EAAA,EAAD,CAAMC,UAAWC,IAASC,GAAIC,IAAGC,QAAQC,QAAQhB,GAAKiB,UAAU,QAExDnB,EACI,kBAACoB,EAAA,EAAD,CAAUC,UAAU,OAAOC,QAAQ,SAAShD,MAAO,IAAKH,OAAQ,IACtDwC,UAAWV,EAAQ5B,YAC7B,kBAACkD,EAAA,EAAD,CAAQC,IAAKjB,EAAYkB,IAAKrB,GAAc,SAAUO,UAAWV,EAAQ5B,UACjEwC,UAAU,UAG9B,kBAACa,EAAA,EAAD,CAAaf,UAAWV,EAAQzB,SAC3BwB,EACG,oCACI,kBAACoB,EAAA,EAAD,CAAUC,UAAU,OAAO/C,MAAM,MAAMqC,UAAWgB,IAAW1B,EAAQR,WAAY,sBACjF,kBAAC2B,EAAA,EAAD,CAAUC,UAAU,OAAO/C,MAAM,MAAMqC,UAAWgB,IAAW1B,EAAQR,WAAY,0BAIjF,oCACI,kBAACmC,EAAA,EAAD,CAAYC,cAAY,EAACP,QAAQ,KAAKT,UAAU,MAAMiB,QAAM,GACvD1B,GAEL,kBAACwB,EAAA,EAAD,CAAYN,QAAQ,QAAQhC,MAAM,gBAAgBuB,UAAU,IAAIiB,QAAM,GACjEzB,KAOrB,kBAAC0B,EAAA,EAAD,CAAapB,UAAWV,EAAQtB,SAC5B,kBAACqD,EAAA,EAAD,CACIhC,UAAWA,EACXM,SAAUA,EACV2B,OAAQ/B,EACRgC,cAAe,CACXC,MAAOlC,EAAQnB,SACfM,IAAKa,EAAQb,QAIzB,kBAACgD,EAAA,EAAD,CAAgBzB,UAAWgB,IAAW1B,EAAQjB,OAAT,eAAmBiB,EAAQP,QAAUM,KACrEA,EACO,yBAAKW,UAAWV,EAAQZ,YACpB,kBAAC+B,EAAA,EAAD,CAAUC,UAAU,OAAO/C,MAAM,MAAMqC,UAAWgB,IAAW1B,EAAQR,WAAY,0BAIrF,kBAACmB,EAAA,EAAD,CAAMC,UAAWC,IAASC,GAAIC,IAAGC,QAAQC,QAAQhB,GAAKS,UAAWV,EAAQZ,WAAY8B,UAAU,QAC3F,kBAACS,EAAA,EAAD,CAAYN,QAAQ,QAAQT,UAAU,QAAtC,sB,0BC5EtBtD,EAASC,aAAa,SAACC,GAAD,MAAmB,CAC3CC,KAAM,CACFa,OAAQ,SACR,kBAAmB,CACfoB,cAAe,QAEnB,sBAAuB,CACnBf,eAAgB,eAKbiB,cAAWtC,EAAQ,CAACuC,WAAW,ICI/BuC,cACXC,cACAC,EAFWF,EAN4C,SAAC,GAAiE,IAAhEpC,EAA+D,EAA/DA,QAASuC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,iBAAkBpE,EAAW,EAAXA,MAC7G,OACI,kBAAC,IAAD,CAAqBqE,KAAgB,OAAVrE,EAAiB,QAAS,SAAUsE,MAAOJ,EAAYK,KAAMJ,EAAaK,SAAUJ,EAAkBpD,MAAM,UAAUqB,UAAWV,EAAQvC,U,+DCZtKH,EAASC,aAAa,SAACC,GAAD,MAAmB,CAC3CC,KAAK,aACDa,OAAQ,cACRE,QAAS,WACTP,QAAS,OACT6E,WAAY,SACZzE,MAAO,OACP0E,gBAAiB,2BACjBC,SAAU,WACVC,UAAW,IACVzF,EAAM0F,YAAYC,GAAG,MAAQ,CAC1BC,aAAc,KAGtBC,MAAO,CACHC,WAAY9F,EAAM+F,QAAQ,GAC1BC,KAAM,EACNnE,MAAO7B,EAAMG,QAAQ8F,QAAQC,MAEjCC,WAAY,CACRC,YAAa,GACbpF,QAAS,GACTa,MAAO7B,EAAMG,QAAQ8F,QAAQC,UAItB9D,cAAWtC,EAAQ,CAACuC,WAAW,I,QCnBxCgE,EAAaC,YAAU,GAuCdC,EAJSC,YAAsC,CAC1DC,KAAM,UADcD,CAErBE,GA1B+B,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAYrE,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QACrE,OACI,kBAACqE,EAAA,EAAD,CAAOzD,UAAU,OAAOF,UAAWV,EAAQvC,KAAM6G,SAAUH,GACtDpE,EACG,kBAACoB,EAAA,EAAD,CAAUC,UAAU,OAAOlD,OAAQ,GAAIG,MAAM,SAC3C,oCACE,kBAACkG,EAAA,EAAD,CAAYC,KAAK,SAAS9D,UAAWV,EAAQ2D,WAAYc,aAAW,SAASC,SAAUN,GACnF,kBAAC,IAAD,OAEJ,kBAACO,EAAA,EAAD,CACIxE,KAAK,aACLqE,KAAK,SACLtC,MAAM,SACNtB,UAAWgE,IACXC,aAAa,MACbC,YAAY,yBACZC,SAAU,CAACC,IAAUnB,W,SClCvCvG,EAASC,aAAa,iBAAO,CAC/B0H,UAAW,CACP3B,WAAY,IAEhB4B,OAAQ,CACJ7G,MAAO,YCoBA8G,EDhBAvF,YAAWtC,ECgBX6H,EAf4B,SAAC,GAA4E,IAA3EC,EAA0E,EAA1EA,mBAAoBC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,cAAevF,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QACtG,OACI,yBAAKU,UAAWV,EAAQkF,QACnBG,GACD,kBAAC1D,EAAA,EAAD,CAAYN,QAAQ,SAApB,kBAEI,kBAACkE,EAAA,EAAD,CAAMrD,MAAOmD,EAAeG,SAAUF,EAAejG,MAAM,YAAYqB,UAAWV,EAAQiF,aAG9F,kBAAC,EAAD,CAAiBX,SAAUc,EAAoBE,cAAeA,EAAevF,UAAWA,QC+BrF0F,EAlCc,SAAC,GASO,IARHC,EAQE,EARFA,MACAlD,EAOE,EAPFA,YACA8C,EAME,EANFA,cACA7C,EAKE,EALFA,iBACA2C,EAIE,EAJFA,mBACArF,EAGE,EAHFA,UACAsF,EAEE,EAFFA,cACA9C,EACE,EADFA,WAG9B,OACI,6BACI,kBAACZ,EAAA,EAAD,CAAYC,cAAY,EAACP,QAAQ,KAAKsE,MAAO,CAAC7H,WAAY,GAAIE,UAAW,WAAzE,SAGA,kBAAC,EAAD,CAAQoH,mBAAoBA,EAAoBC,cAAeA,EAAeC,cAAeA,EAAevF,UAAWA,IACvH,kBAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACtC,QAAS,GACpBmC,EAAMI,KAAI,SAAChG,GAAD,OACP,kBAAC8F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAKtG,EAAKG,IAC9C,kBAAC,EAAD,CACIH,KAAMA,EACNC,UAAWA,SAK1B2F,EAAMW,OAAS,GAChB,kBAAC,EAAD,CAAY9D,WAAYA,EAAYC,YAAa8D,OAAO9D,GAAcC,iBAAkBA,M,qDCgErFL,sBACXmE,aAbkB,SAACC,GACnB,MAAO,CACHd,MAAOe,YAASD,GAChBE,SAAUC,YAAYH,GACtBI,gBAAiBC,YAAmBL,GACpChE,YAAasE,YAAeN,GAC5BzG,UAAWgH,YAAaP,GACxBQ,iBAAkBC,YAAoBT,GACtCU,YAAaC,YAAeX,MAKoD,CAChFY,mBAEJC,IACAC,KALWlF,EA3EuB,SAAC,GAQO,IAPHsE,EAOE,EAPFA,SACAQ,EAME,EANFA,YACAnH,EAKE,EALFA,UACA2F,EAIE,EAJFA,MACAkB,EAGE,EAHFA,gBACApE,EAEE,EAFFA,YACA4E,EACE,EADFA,aACE,EAECG,mBAAc,MAFf,mBAElClC,EAFkC,KAEnBmC,EAFmB,KAGnCjF,EAAakF,KAAKC,KAAKd,EAAkBF,GAC3CiB,EAAWC,cACXC,EAAUC,cAEdC,qBAAU,WACN,IAAMC,EAAUC,IAAYC,MAAMP,EAASzC,QAC3CsC,EAAiBQ,EAAQ9C,OAAS8C,EAAQ9C,OAAS,MACnDiD,MACD,CAACR,IAEJ,IAAMQ,EAAc,WAAO,IAAD,EACUC,IADV,IACflD,cADe,MACN,GADM,MACFtC,KACpBwE,EAAad,YAFS,MACK,EADL,GAEKI,EAAU2B,OAAOnD,KAG1CkD,EAAiB,WACnB,OAAOH,IAAYC,MAAMP,EAASzC,SAGhCoD,EAAqE,SAAC1F,EAAMsC,GAC9E,MAAO,IAAM+C,IAAYM,UAAU,CAC/BrD,OAAQA,QAAUsD,EAClB5F,KAAMA,QAAQ4F,KAgBtB,OACI,kBAAC,EAAD,CACI/F,iBANiB,SAACgG,EAA+BC,GACrDb,EAAQc,QAAQL,EAAgBI,EAAOxB,KAMnCxB,MAAOA,EACPlD,YAAaA,EACb4C,mBAjBmB,SAAC,GAAiD,IAAhDwD,EAA+C,EAA/CA,WACzBf,EAAQc,QAAQL,OAAgBE,EAAWI,KAiBvCtD,cAdc,WAClBuC,EAAQc,QAAQL,OAAgBE,EAAW,MAcvCzI,UAAWA,EACXsF,cAAeA,EACf9C,WAAYA,Q,mJCzFlBsG,EAAa,CACf,OACA,QACA,SACA,WACA,YAGEC,EAAYC,aAAW,SAAAvL,GAAK,MAAK,CACnCwL,UAAW,CACP5F,aAAc,GACd,4BAA4B,aACxBtE,SAAU,GACVkE,SAAU,WACVjE,OAAQ,EACRkK,UAAW,oBACVzL,EAAM0F,YAAYC,GAAG,MAAQ,CAC1BrE,SAAU,UAcb8F,EAA6B,SAAC,GAA2D,IAA1DvB,EAAyD,EAAzDA,MAAOnB,EAAkD,EAAlDA,MAAOsC,EAA2C,EAA3CA,KAA2C,IAArC0E,KAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAWC,EAAU,+CAC3FrJ,EAAU8I,IAChB,OACI,oCACKD,EAAWS,SAAS9E,IACrB,kBAAC,IAAD,eACI4E,MAAOD,GAAWI,QAAQH,GAC1BI,WAAYL,GAAWC,EAAQA,EAAQ,GACvClH,MAAOA,EACPsC,KAAMA,EACNiF,WAAW,EACX/I,UAAWV,EAAQgJ,WACf3F,EACAgG,IAGE,aAAT7E,GACD,kBAAC,IAAD,CACI9D,UAAWV,EAAQgJ,UACnBU,QACI,kBAAC,IAAD,CACIC,UAAWtG,EAAMqF,MACjB7F,SAAUQ,EAAMR,WAGxBX,MAAOA,IAGD,WAATsC,GACD,kBAAC,IAAD,CACI9D,UAAWV,EAAQgJ,UACnBU,QACI,kBAAC,IAAD,CACIC,UAAWtG,EAAMqF,MACjB7F,SAAUQ,EAAMR,WAGxBX,MAAOA,O,iCCtEvB,sGAAO,IAAM8C,EAA0B,SAAC0D,GAAD,OAAYA,OAAQF,EAAY,YAE1D1E,EAAY,SAACuC,GAAD,OAAmC,SAACqC,GACzD,GAAGA,EAAMrC,OAASA,EACd,MAAM,kBAAN,OAAyBA,EAAzB,cAKKuD,EAAwB,SAAClB,GAAD,OACjCA,IAAU,4CAA4CmB,KAAKnB,GACrD,6BACAF,I,kKCHJsB,EAAkB,SAACtD,GACrB,MAAO,CACHuD,OAAQC,YAAUxD,KAIbc,EAAmB,SAAC2C,GAAgD,IACvEC,EADsE,iLAGpE,OAAKC,KAAKC,MAAML,OACT,kBAACE,EAAqBE,KAAKC,OADH,kBAAC,IAAD,CAAUtJ,GAAIC,IAAGsJ,MAAMC,WAHc,GAC5CC,aAOhC,OAAOhE,YAAiDuD,EAAjDvD,CAAkE2D,K,iCCzB7E,8OAGO,IAAMzD,EAAW,SAACD,GACrB,OAAOA,EAAMgE,aAAa9E,OAcjBiB,EAAc,SAACH,GACxB,OAAOA,EAAMgE,aAAa9D,UAGjBG,EAAqB,SAACL,GAC/B,OAAOA,EAAMgE,aAAa5D,iBAGjBE,EAAiB,SAACN,GAC3B,OAAOA,EAAMgE,aAAahI,aAGjBuE,EAAe,SAACP,GACzB,OAAOA,EAAMgE,aAAazK,WAGjBkH,EAAsB,SAACT,GAChC,OAAOA,EAAMgE,aAAaxD,kBAGjBG,EAAiB,SAACX,GAC3B,OAAOA,EAAMgE,aAAatD,c,kJCrCxB5J,EAASC,aAAa,SAACC,GAAD,MAAmB,CAC3CiN,UAAW,CACP/M,WAAYF,EAAMG,QAAQ+M,QAAQhH,KAClC,UAAW,CACPhG,WAAYF,EAAMG,QAAQ+M,QAAQC,MAEtC,WAAY,CACRjN,WAAYF,EAAMG,QAAQ2B,UAAUoE,WAKjC9D,cAAWtC,EAAQ,CAACuC,WAAW,I,QC8E/B0G,iBAPO,SAACC,GACnB,MAAO,CACHQ,iBAAkBC,YAAoBT,MAK+D,CACzGoE,aACAC,WACAC,eAHWvE,CAIZwE,GA/DmD,SAAC,GAAyI,IAAxI/K,EAAuI,EAAvIA,QAASgC,EAA8H,EAA9HA,OAAQ3B,EAAsH,EAAtHA,SAAU2G,EAA4G,EAA5GA,iBAAkB4D,EAA0F,EAA1FA,SAAUC,EAAgF,EAAhFA,OAAQC,EAAwE,EAAxEA,UAAW/K,EAA6D,EAA7DA,UAA6D,IAAlDiL,6BAAkD,SAAnB/I,EAAmB,EAAnBA,cACpK4F,EAAUC,cACRmD,EAAehJ,GAAiBA,EAAcC,MAAQD,EAAcC,WAAQsG,EAC5E0C,EAAcjJ,GAAiBA,EAAckJ,KAAOlJ,EAAckJ,UAAO3C,EACzE4C,EAAanJ,GAAiBA,EAAc9C,IAAM8C,EAAc9C,SAAMqJ,EAE5E,OAAIzI,EAEI,oCACI,kBAACoB,EAAA,EAAD,CAAUC,UAAU,OAAOlD,OAAQ,GAAIwC,UAAW0K,IAClD,kBAACjK,EAAA,EAAD,CAAUC,UAAU,OAAOlD,OAAQ,GAAIwC,UAAW0K,KAK1D,oCACI,kBAACC,EAAA,EAAD,CACI3G,SAAUsC,EAAiBsC,SAAStH,GACpCX,QAAQ,YACRhC,MAAM,UACNW,QAAS,CACLkC,MAAO+I,EACPxN,KAAMiE,IAAW1B,EAAQyK,UAAW,CAAC,OAAUpK,GAAW+K,GAC1DD,KAAMD,GAEVI,UAAWjL,EAAW,kBAAC,IAAD,MAAkC,kBAAC,IAAD,MACxDkL,QAASlL,EACL,kBAAMuK,EAAS5I,EAAQgJ,IACvB,kBAAMH,EAAO7I,EAAQgJ,KACzB,0BAAMtK,UAAWwK,GACX7K,EAAW,WAAa,WAGlC,kBAACgL,EAAA,EAAD,CACIhK,QAAQ,YACRhC,MAAM,UACNW,QAAS,CACLkC,MAAO+I,EACPxN,KAAM2N,EACND,KAAMD,GAEVI,UAAW,kBAAC,IAAD,MACX5G,SAAUsC,EAAiBsC,SAAStH,GACpCuJ,QAAS,kBAAMT,EAAU9I,EAAQ6F,KAC7B,0BAAMnH,UAAWwK,GAAjB","file":"static/js/UsersContainer.277feb69.chunk.js","sourcesContent":["import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        background: theme.palette.common.white,\n        paddingTop: 20,\n        borderRadius: 0,\n        textAlign: 'center',\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'column'\n    },\n    avatarImg: {\n        height: 100,\n        width: 100,\n        margin: '0 auto'\n    },\n    content: {\n        padding: '15px 20px',\n        flexGrow: 1\n    },\n\n    buttons: {\n        padding: '0 20px 25px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n        maxWidth: 320,\n        margin: '0 auto'\n    },\n    btnLabel: {\n        fontSize: 14,\n    },\n    bottom: {\n        marginTop: 'auto',\n        borderTop: '1px solid ' + theme.palette.grey[200],\n    },\n    btn: {\n        width: '48%',\n        maxWidth: '48%'\n    },\n    bottomLink: {\n        display: 'block',\n        width: '100%',\n        padding: '1rem 0',\n        color: theme.palette.secondary.light\n    },\n    autoMargin: {\n        margin: '0 auto'\n    },\n    noHover: {\n        pointerEvents: 'none'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport userPlaceholder from '../../../assets/images/user-placeholder.png';\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../redux/reducers/types\";\nimport classNames from 'classnames';\nimport {\n    Avatar,\n    Card,\n    CardActionArea,\n    CardContent,\n    Link,\n    Typography,\n    CardActions,\n    WithStyles\n} from '@material-ui/core';\nimport RM from \"../../../RouterManager\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport FollowMessageBtns from \"../../Buttons/FollowMessageBtns\";\nimport withUserStyles from \"./userStyles\";\n\ntype PropsType = {\n    user: UserType,\n    isLoading: boolean\n};\n\nconst User: FC<PropsType & WithStyles> = ({user, isLoading, classes}) => {\n    const {id, photos, name, status, followed} = user;\n    const userAvatar = photos.small !== null ? photos.small : userPlaceholder;\n    return (\n        <Card className={classes.root}>\n            <Link component={NavLink} to={RM.profile.getPath(id)} underline=\"none\">\n                {\n                    isLoading ?\n                        <Skeleton animation=\"wave\" variant=\"circle\" width={100} height={100}\n                                  className={classes.avatarImg}/> :\n                        <Avatar src={userAvatar} alt={name ? name : 'avatar'} className={classes.avatarImg}\n                                component=\"span\"/>\n                }\n            </Link>\n            <CardContent className={classes.content}>\n                {isLoading ? (\n                    <>\n                        <Skeleton animation=\"wave\" width=\"85%\" className={classNames(classes.autoMargin, \"MuiTypography-h5\")}/>\n                        <Skeleton animation=\"wave\" width=\"60%\" className={classNames(classes.autoMargin, \"MuiTypography-body2\")}/>\n                    </>\n                    )\n                   : (\n                        <>\n                            <Typography gutterBottom variant=\"h5\" component=\"div\" noWrap>\n                                {name}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" noWrap>\n                                {status}\n                            </Typography>\n                        </>\n                    )\n                }\n            </CardContent>\n\n            <CardActions className={classes.buttons}>\n                <FollowMessageBtns\n                    isLoading={isLoading}\n                    followed={followed}\n                    userId={id}\n                    customClasses={{\n                        label: classes.btnLabel,\n                        btn: classes.btn\n                    }}\n                />\n            </CardActions>\n            <CardActionArea className={classNames(classes.bottom, {[classes.noHover]: isLoading})}>\n                {isLoading ? (\n                        <div className={classes.bottomLink}>\n                            <Skeleton animation=\"wave\" width='50%' className={classNames(classes.autoMargin, \"MuiTypography-body2\")}/>\n                        </div>\n                    )\n                    : (\n                        <Link component={NavLink} to={RM.profile.getPath(id)} className={classes.bottomLink} underline=\"none\">\n                            <Typography variant=\"body1\" component=\"span\">\n                                View Profile\n                            </Typography>\n                        </Link>\n                    )\n                }\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default withUserStyles(User);\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        margin: '40px 0',\n        \"& .Mui-selected\": {\n            pointerEvents: 'none'\n        },\n        \"& .MuiPagination-ul\": {\n            justifyContent: 'center'\n        }\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {compose} from \"redux\";\nimport PaginationComponent from '@material-ui/lab/Pagination';\nimport {WithStyles, WithWidth, withWidth} from \"@material-ui/core\";\nimport withPaginationStyles from \"./paginationStyles\";\n\ntype PropsType = {\n    totalPages: number,\n    currentPage: number,\n    onSetCurrentPage: (event: React.ChangeEvent<unknown>, page: number) => void,\n}\n\nconst Pagination: FC<PropsType & WithWidth & WithStyles> = ({classes, totalPages, currentPage, onSetCurrentPage, width}) => {\n    return (\n        <PaginationComponent size={width === 'xs' ? 'small': 'medium'} count={totalPages} page={currentPage} onChange={onSetCurrentPage} color=\"primary\" className={classes.root}/>\n    )\n};\n\nexport default compose(\n    withWidth(),\n    withPaginationStyles\n)(Pagination) as FC<PropsType>;\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        margin: '15px 0 25px',\n        padding: '2px 20px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.7)',\n        position: 'relative',\n        minHeight: 80,\n        [theme.breakpoints.up('sm')]: {\n            marginBottom: 40,\n        }\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        color: theme.palette.primary.main\n    },\n    iconButton: {\n        marginRight: 10,\n        padding: 10,\n        color: theme.palette.primary.main\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\nimport {RenderField} from \"../../Forms/components/FormControl\";\nimport {minLength, required} from \"../../../utils/validate\";\nimport {IconButton, Paper, WithStyles} from '@material-ui/core';\nimport {Skeleton} from '@material-ui/lab';\nimport withSearchFormStyles from \"./searchFormStyles\";\nimport {SearchIcon} from \"../../Icons/MeterialIcons\";\n\nconst minLength3 = minLength(3);\n\ntype FormDataType = {\n    searchText: string,\n}\ntype OwnPropsType = {\n    onResetSearch: () => void,\n    isLoading: boolean\n}\ntype PropsType = InjectedFormProps<FormDataType> & OwnPropsType & WithStyles;\n\nconst SearchForm: FC<PropsType> = ({handleSubmit, submitting, isLoading, classes}) => {\n    return (\n        <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n            {isLoading ?\n                <Skeleton animation=\"wave\" height={40} width='100%'/>\n                : <>\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" disabled={submitting}>\n                        <SearchIcon/>\n                    </IconButton>\n                    <Field\n                        name=\"searchText\"\n                        type=\"search\"\n                        label=\"Search\"\n                        component={RenderField}\n                        autoComplete=\"off\"\n                        placeholder=\"Type search request...\"\n                        validate={[required, minLength3]}\n                    />\n                </>\n            }\n        </Paper>\n    )\n};\n\nconst SearchReduxForm = reduxForm<FormDataType, OwnPropsType>({\n    form: 'search'\n})(withSearchFormStyles(SearchForm));\n\nexport default SearchReduxForm;","import {withStyles, createStyles} from '@material-ui/core/styles';\n\nconst styles = createStyles(() => ({\n    searchTxt: {\n        marginLeft: 10\n    },\n    search: {\n        width: '100%'\n    },\n}));\n\nexport default withStyles(styles)\n","import React, {FC} from 'react';\nimport SearchReduxForm from \"./SearchForm\";\nimport {Typography, Chip, WithStyles} from \"@material-ui/core\";\nimport withSearchStyles from \"./searchStyles\";\n\ntype PropsType = {\n    onChangeSearchText: ({searchText}: {searchText: string}) => void\n    searchRequest: string | string[] | null | undefined,\n    onResetSearch: () => void,\n    isLoading: boolean\n}\n\nconst Search: FC<PropsType & WithStyles> = ({onChangeSearchText, searchRequest, onResetSearch, isLoading, classes}) => {\n    return (\n        <div className={classes.search}>\n            {searchRequest &&\n            <Typography variant=\"body2\">\n                Found on query:\n                <Chip label={searchRequest} onDelete={onResetSearch} color=\"secondary\" className={classes.searchTxt} />\n            </Typography>\n            }\n            <SearchReduxForm onSubmit={onChangeSearchText} onResetSearch={onResetSearch} isLoading={isLoading}/>\n        </div>\n    )\n};\n\n\nexport default withSearchStyles(Search);\n","import React, {FC} from 'react';\nimport User from \"./User/User\";\nimport Pagination from \"./Pagination/Pagination\";\nimport {UserType} from \"../../redux/reducers/types\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport Search from \"./Search/Search\";\n\ntype PropsType = {\n    users: Array<UserType>,\n    currentPage: number,\n    onSetCurrentPage: (event: React.ChangeEvent<unknown>, page: number) => void\n    onChangeSearchText: ({searchText}: { searchText: string }) => void,\n    onResetSearch: () => void,\n    isLoading: boolean,\n    searchRequest: string | null,\n    totalPages: number\n}\n\nconst Users: FC<PropsType> = ({\n                                  users,\n                                  currentPage,\n                                  onResetSearch,\n                                  onSetCurrentPage,\n                                  onChangeSearchText,\n                                  isLoading,\n                                  searchRequest,\n                                  totalPages\n                              }) => {\n\n    return (\n        <div>\n            <Typography gutterBottom variant=\"h3\" style={{paddingTop: 30, textAlign: 'center'}}>\n                Users\n            </Typography>\n            <Search onChangeSearchText={onChangeSearchText} searchRequest={searchRequest} onResetSearch={onResetSearch} isLoading={isLoading}/>\n            <Grid container spacing={3}>\n                {users.map((user: UserType) =>\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={user.id}>\n                        <User\n                            user={user}\n                            isLoading={isLoading}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            {users.length > 0 &&\n            <Pagination totalPages={totalPages} currentPage={Number(currentPage)} onSetCurrentPage={onSetCurrentPage}/>\n            }\n        </div>\n    )\n};\n\nexport default Users;","import React, {FC, useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n    getCurrentPage,\n    getFollowInProgress,\n    getIsLoading,\n    getPageSize,\n    getSearchQuery,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/reducers/users-selectors\";\nimport {requestUsers} from \"../../redux/reducers/users-reducer\";\nimport {withRouter, useLocation, useHistory} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport queryString from 'query-string';\nimport {UserType} from \"../../redux/reducers/types\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {withAuthRedirect} from '../Redirects/AuthRedirect';\n\ntype MapStatePropsType = {\n    pageSize: number\n    searchQuery: string | null\n    isLoading: boolean\n    users: Array<UserType>\n    totalUsersCount: number\n    currentPage: number\n}\n\ntype MapDispatchPropsType = {\n    requestUsers: (currentPage: number, pageSize: number, searchText: string) => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nconst UsersContainer: FC<PropsType> = ({\n                                           pageSize,\n                                           searchQuery,\n                                           isLoading,\n                                           users,\n                                           totalUsersCount,\n                                           currentPage,\n                                           requestUsers,\n                                       }) => {\n\n    const [searchRequest, setSearchRequest] = useState<any>(null);\n    const totalPages = Math.ceil(totalUsersCount / pageSize);\n    let location = useLocation();\n    let history = useHistory();\n\n    useEffect(() => {\n        const request = queryString.parse(location.search);\n        setSearchRequest(request.search ? request.search : null);\n        updateUsers()\n    }, [location]);\n\n    const updateUsers = () => {\n        const {search = '', page = 1} = getQueryParams();\n        requestUsers(Number(page), pageSize, String(search));\n    };\n\n    const getQueryParams = () => {\n        return queryString.parse(location.search);\n    };\n\n    const stringifyParams: (page?: number, search?: string | null) => string = (page, search) => {\n        return '?' + queryString.stringify({\n            search: search || undefined,\n            page: page || undefined\n        });\n    };\n\n    const onChangeSearchText = ({searchText}: { searchText: string | null }) => {\n        history.replace(stringifyParams(undefined, searchText));\n    };\n\n    const onResetSearch = () => {\n        history.replace(stringifyParams(undefined, ''));\n    };\n\n    const onSetCurrentPage = (e: React.ChangeEvent<unknown>, value: number) => {\n        history.replace(stringifyParams(value, searchQuery));\n    };\n\n    return (\n        <Users\n            onSetCurrentPage={onSetCurrentPage}\n            users={users}\n            currentPage={currentPage}\n            onChangeSearchText={onChangeSearchText}\n            onResetSearch={onResetSearch}\n            isLoading={isLoading}\n            searchRequest={searchRequest}\n            totalPages={totalPages}\n        />\n    )\n};\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isLoading: getIsLoading(state),\n        followInProgress: getFollowInProgress(state),\n        searchQuery: getSearchQuery(state),\n    }\n};\n\nexport default compose(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n        requestUsers,\n    }),\n    withRouter,\n    withAuthRedirect,\n)(UsersContainer) as FC;\n\n","import React, {FC} from \"react\";\nimport {WrappedFieldProps} from \"redux-form/lib/Field\";\nimport {TextField, TextFieldProps, makeStyles, Checkbox, FormControlLabel, Switch} from \"@material-ui/core\";\n\nconst inputTypes = [\n    'text',\n    'email',\n    'search',\n    'password',\n    'textarea'\n];\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        marginBottom: 25,\n        '& .MuiFormHelperText-root': {\n            fontSize: 10,\n            position: 'absolute',\n            bottom: 0,\n            transform: 'translateY(100%)',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: 12,\n            }\n        }\n    }\n}));\n\ntype OwnPropsType = {\n    label?: string,\n    type: string,\n    rest?: any,\n};\n\ntype PropsType = WrappedFieldProps & OwnPropsType & TextFieldProps;\n\nexport const RenderField: FC<PropsType> = ({input, label, type, meta: {touched, error}, ...rest}) => {\n    const classes = useStyles();\n    return (\n        <>\n            {inputTypes.includes(type) &&\n            <TextField\n                error={touched && Boolean(error)}\n                helperText={touched && error ? error : ''}\n                label={label}\n                type={type}\n                fullWidth={true}\n                className={classes.textInput}\n                {...input}\n                {...rest}\n            />\n            }\n            {type === 'checkbox' &&\n            <FormControlLabel\n                className={classes.textInput}\n                control={\n                    <Checkbox\n                        checked={!!input.value}\n                        onChange={input.onChange}\n                    />\n                }\n                label={label}\n            />\n            }\n            {type === 'switch' &&\n            <FormControlLabel\n                className={classes.textInput}\n                control={\n                    <Switch\n                        checked={!!input.value}\n                        onChange={input.onChange}\n                    />\n                }\n                label={label}\n            />\n            }\n        </>\n    )\n};\n","type ValidatorType = (value: string) =>  string | undefined\r\n\r\nexport const required: ValidatorType = (value) => (value ? undefined : 'Required');\r\n\r\nexport const minLength = (length: number): ValidatorType => (value) => {\r\n    if(value.length < length) {\r\n        return `Minimum length ${length} symbols`\r\n    }\r\n    return undefined\r\n};\r\n\r\nexport const email : ValidatorType = (value) =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined;","import React, {Component, ComponentType, ReactNode} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getIsAuth} from \"../../redux/reducers/auth-selectors\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport RM from \"../../RouterManager\";\n\ntype MapStatePropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: getIsAuth(state)\n    }\n};\n\nexport const withAuthRedirect = (WrappedComponent: ComponentType<ReactNode>) => {\n    class RedirectComponent extends Component<MapStatePropsType> {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={RM.login.path}/>;\n            return <WrappedComponent {...this.props}/>\n        }\n    }\n\n    return connect<MapStatePropsType, {}, {}, AppStateType>(mapStateToProps)(RedirectComponent);\n};","// import { createSelector } from 'reselect'\nimport {AppStateType} from \"../redux-store\";\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersReducer.users\n};\n\n\n//todo example reselect\n\n// export const getUsersSelector = createSelector(\n//     getUsers,\n//     (users) => {\n//         return  users.filter(u => true)\n//     }\n// );\n//\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersReducer.pageSize\n};\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersReducer.totalUsersCount\n};\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersReducer.currentPage\n};\n\nexport const getIsLoading = (state: AppStateType) => {\n    return state.usersReducer.isLoading\n};\n\nexport const getFollowInProgress = (state: AppStateType) => {\n    return state.usersReducer.followInProgress\n};\n\nexport const getSearchQuery = (state: AppStateType) => {\n    return state.usersReducer.searchQuery\n};","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    btnFollow: {\n        background: theme.palette.success.main,\n        '&:hover': {\n            background: theme.palette.success.dark,\n        },\n        '&.active': {\n            background: theme.palette.secondary.main,\n        }\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true});","import React, {FC} from 'react';\nimport {Button, WithStyles} from \"@material-ui/core\";\nimport classNames from \"classnames\";\n\nimport {useHistory} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getFollowInProgress} from \"../../redux/reducers/users-selectors\";\nimport {connect} from \"react-redux\";\nimport {follow, unfollow} from \"../../redux/reducers/users-reducer\";\nimport {startChat} from \"../../redux/reducers/dialogs-reducer\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport withFollowMessageStyles from \"./followMessageStyles\";\nimport {PersonAddDisabledRoundedIcon, PersonAddRoundedIcon, EmailRoundedIcon} from \"../Icons/MeterialIcons\";\n\ntype OwnPropsType = {\n    userId: number,\n    isLoading: boolean,\n    followed: boolean,\n    updateProfileFollowed?: boolean,\n    customClasses?: {\n        btn?: string,\n        label?: string,\n        text?: string\n    }\n};\ntype MapStatePropsType = {followInProgress: Array<number>}\ntype MapDispatchPropsType = {\n    startChat: (userId: number, history: any) => void\n    follow: (id: number, updateProfileFollow: boolean) => void\n    unfollow: (id: number, updateProfileFollow: boolean) => void\n}\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType;\n\nconst FollowMessageBtns: FC<PropsType & WithStyles> = ({classes, userId, followed, followInProgress, unfollow, follow, startChat, isLoading, updateProfileFollowed = false, customClasses}) => {\n    let history = useHistory();\n    const labelClasses = customClasses && customClasses.label ? customClasses.label : undefined;\n    const textClasses = customClasses && customClasses.text ? customClasses.text : undefined;\n    const btnClasses = customClasses && customClasses.btn ? customClasses.btn : undefined;\n\n    if (isLoading) {\n        return (\n            <>\n                <Skeleton animation=\"wave\" height={36} className={btnClasses}/>\n                <Skeleton animation=\"wave\" height={36} className={btnClasses}/>\n            </>\n        )\n    }\n    return (\n        <>\n            <Button\n                disabled={followInProgress.includes(userId)}\n                variant=\"contained\"\n                color=\"primary\"\n                classes={{\n                    label: labelClasses,\n                    root: classNames(classes.btnFollow, {'active': followed}, btnClasses),\n                    text: textClasses,\n                }}\n                startIcon={followed ? <PersonAddDisabledRoundedIcon/> : <PersonAddRoundedIcon/>}\n                onClick={followed ?\n                    () => unfollow(userId, updateProfileFollowed) :\n                    () => follow(userId, updateProfileFollowed)}>\n                <span className={textClasses}>\n                     {followed ? \"Unfollow\" : \"Follow\"}\n                </span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                classes={{\n                    label: labelClasses,\n                    root: btnClasses,\n                    text: textClasses,\n                }}\n                startIcon={<EmailRoundedIcon/>}\n                disabled={followInProgress.includes(userId)}\n                onClick={() => startChat(userId, history)}>\n                    <span className={textClasses}>\n                        Message\n                    </span>\n            </Button>\n        </>\n    )\n};\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        followInProgress: getFollowInProgress(state),\n    }\n};\n\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\n    unfollow,\n    follow,\n    startChat,\n})(withFollowMessageStyles(FollowMessageBtns));\n"],"sourceRoot":""}