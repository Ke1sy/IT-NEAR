{"version":3,"sources":["components/Forms/components/FormControl.tsx","utils/validate.ts","components/Redirects/AuthRedirect.tsx","redux/reducers/users-selectors.ts","components/Buttons/followMessageStyles.ts","components/Buttons/FollowMessageBtns.tsx","assets/images/profile_cover.jpg","assets/images/job-image.png","assets/images/profileNotFound.jpg","components/Profile/Cover/coverStyles.ts","components/Profile/Cover/ProfileCover.tsx","components/Profile/Sidebar/sidebarStyles.ts","components/Profile/Dialogs/StatusDialog.tsx","components/Profile/Status/profileStatusStyles.ts","components/Profile/Status/ProfileStatus.tsx","utils/crop.ts","components/Profile/Dialogs/loadPhotoDialogStyles.ts","components/Profile/Dialogs/LoadPhotoDialog.tsx","components/Profile/Sidebar/profileActionsStyles.ts","components/Profile/Sidebar/ProfileActions.tsx","components/Profile/Sidebar/Sidebar.tsx","components/Icons/VkIcon.tsx","components/Profile/Layout/profileLayoutStyles.ts","components/Profile/Layout/ProfileLayout.tsx","components/Profile/Posts/StyledDivider.tsx","components/Profile/ProfileSettings/settingsFormStyles.ts","components/Profile/ProfileSettings/SettingsForm.tsx","components/Profile/Tabs/TabPanel.tsx","components/Profile/ProfileInfo/staticProfileInfoStyles.ts","components/Profile/ProfileInfo/StaticProfileInfo.tsx","components/Profile/Posts/postSubmenuStyles.ts","components/Profile/Posts/PostSubmenu.tsx","components/Profile/Posts/postStyles.ts","components/Profile/Posts/Post.tsx","components/Profile/Posts/postFormStyles.ts","components/Profile/Posts/PostsForm.tsx","components/Profile/Dialogs/EditDialog.tsx","components/Profile/Posts/postsEmptyStyles.ts","components/Profile/Posts/PostsEmpty.tsx","components/Profile/Posts/Posts.tsx","server/queries.ts","server/mutations.ts","components/Profile/Posts/PostsContainer.tsx","components/Profile/Tabs/profileInfoTabsStyles.ts","components/Profile/Tabs/ProfileInfoTabs.tsx","components/Profile/Profile.tsx","components/Profile/ProfileError/profileErrorStyles.ts","components/Profile/ProfileError/ProfileError.tsx","components/Profile/ProfileContainer.tsx"],"names":["inputTypes","useStyles","makeStyles","theme","textInput","marginBottom","fontSize","position","bottom","transform","breakpoints","up","RenderField","input","label","type","meta","touched","error","rest","classes","includes","Boolean","helperText","fullWidth","className","control","checked","value","onChange","required","undefined","minLength","length","email","test","mapStateToProps","state","isAuth","getIsAuth","withAuthRedirect","WrappedComponent","RedirectComponent","this","props","to","RM","login","path","Component","connect","getUsers","usersReducer","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsLoading","isLoading","getFollowInProgress","followInProgress","getSearchQuery","searchQuery","styles","createStyles","btnFollow","background","palette","success","main","dark","secondary","withStyles","withTheme","unfollow","follow","startChat","withFollowMessageStyles","userId","followed","updateProfileFollowed","customClasses","history","useHistory","labelClasses","textClasses","text","btnClasses","btn","Skeleton","animation","height","Button","disabled","variant","color","root","classNames","startIcon","onClick","module","exports","cover","lineHeight","paddingTop","backgroundSize","backgroundPosition","minHeight","withProfileCoverStyles","style","backgroundImage","profileCover","paper","borderRadius","backgroundColor","common","white","body","textAlign","paddingBottom","avatar","top","width","border","margin","down","avatarBtn","right","primary","zIndex","padding","transition","borderColor","removeBtn","avatarImg","socials","display","flexWrap","justifyContent","socialsItem","socialsIcon","marginRight","socialsText","autoMargin","StatusDialog","status","open","handleClose","setUserStatus","useState","newStatus","setNewStatus","useEffect","SimpleDialogTemplate","resetAction","submitAction","aria-labelledby","title","TextField","autoFocus","multiline","rowsMax","target","statusTxt","icon","cursor","marginLeft","opacity","tooltip","light","withProfileStatusStyles","isOwner","setOpen","toggleOpen","Typography","component","Tooltip","aria-label","getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","toBlob","blob","fileUrl","window","URL","createObjectURL","console","photo","maxHeight","load","loadContent","alignItems","loadInput","loadIcon","message","marginTop","withLoadPhotoStyles","profile","loadPhoto","imgSrc","setImgSrc","imgRef","setImgRef","croppedImageUrl","setCroppedImageUrl","fileLoaded","setFileLoaded","aspect","setCrop","inputFile","useRef","toDefaultState","current","revokeObjectURL","makeClientCrop","a","updateAvatar","fetch","mode","then","res","file","File","files","submitName","submitDisabled","name","ref","e","selectedFile","reader","FileReader","addEventListener","result","readAsDataURL","accept","src","ruleOfThirds","onImageLoaded","onComplete","Alert","severity","actions","flexDirection","maxWidth","actionsTxt","actionsBtn","withProfileActionsStyles","profileIsLoading","pathname","useLocation","FollowMessageBtns","Hidden","mdDown","size","NavLink","getPath","settings","icons","facebook","FacebookIcon","website","LanguageIcon","vk","enableBackground","viewBox","xmlns","d","fill","twitter","TwitterIcon","instagram","InstagramIcon","youtube","YouTubeIcon","github","GitHubIcon","SocialIcon","other","TagName","compose","withSidebarStyles","photos","fullName","contacts","userAvatar","large","userPlaceholder","contactsArr","setContactsArr","photoDialogOpen","setPhotoDialogOpen","deleteDialogIsOpen","setDeleteDialogIsOpen","newArr","Object","entries","forEach","key","url","openDialog","ConfirmDialog","isOpen","confirmAction","Paper","IconButton","avatarIcon","Avatar","alt","lgUp","List","disablePadding","map","Divider","orientation","minWidth","ListItem","button","Link","href","rel","noWrap","profileLeft","profileRight","flexGrow","spacing","grid","withProfileLayoutStyles","children","Grid","container","item","sm","lg","divider","borderBottomRightRadius","borderBottomLeftRadius","StyledDivider","fontWeight","buttons","socialsFields","SettingsReduxForm","reduxForm","form","withSettingsFormStyles","handleSubmit","pristine","submitting","reset","initialize","initForm","aboutMe","lookingForAJob","lookingForAJobDescription","onSubmit","Field","validate","slice","toUpperCase","id","Preloader","showPreloader","TabPanel","selectedTab","index","role","hidden","borderTopRightRadius","borderTopLeftRadius","withBg","content","jobImage","edit","block","jobIcon","withStaticProfileStyles","blocks","menuItemText","paddingLeft","grey","menuItemIcon","withPostSubmenuStyles","post","anchorEl","Menu","keepMounted","onClose","PaperProps","MenuItem","wordBreak","footer","likeBtn","isLiked","likeIcon","date","head","more","moreIcon","withPostStyles","author","onLikePost","ownerId","likedBy","setAnchorEl","likedByCurrentUser","String","postDate","formattedDate","Date","toLocaleDateString","toLocaleTimeString","split","join","getDate","sizes","aria-controls","aria-haspopup","currentTarget","buttonIcon","PostsReduxForm","withPostsFormStyles","addPostLoading","square","placeholder","EditDialog","itemToEdit","onEditPost","newText","setNewText","emptyText","withPostsEmptyStyles","Posts","posts","onAddPost","onDeletePost","selectedPost","editDialogIsOpen","itemToConfirm","GET_POSTS","gql","ADD_POST","DELETE_POST","UPDATE_POST","PostsContainer","authorId","currentUserInfo","useQuery","variables","data","dataLoading","loading","useMutation","addPost","deletePost","updatePost","setEditDialogIsOpen","setSelectedPost","dispatch","useDispatch","postText","toString","refetchQueries","query","filter","selectedItem","tab","textTransform","selected","indicator","withWidth","withProfileInfoTabsStyles","React","setSelectedTab","widthUpMd","isWidthUp","direction","xs","md","axis","onChangeIndex","Tabs","event","newValue","indicatorColor","textColor","centered","TabIndicatorProps","Tab","disableRipple","withRouter","updateInfo","exact","img","withProfileErrorStyles","profileError","profileMissed","getProfile","getStatus","getCurrentUserId","getProfileError","getProfileIsLoading","getCurrentUserInfo","isFollowed","getIsFollowed","getUserProfile","getUserStatus","setUserProfile","updateProfileInfo","getIsUserFollowed","useParams","Number","newId","push","info","updatedProfile"],"mappings":"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","file":"static/js/ProfileContainer.84200e0c.chunk.js","sourcesContent":["import React, {FC} from \"react\";\nimport {WrappedFieldProps} from \"redux-form/lib/Field\";\nimport {TextField, TextFieldProps, makeStyles, Checkbox, FormControlLabel, Switch} from \"@material-ui/core\";\n\nconst inputTypes = [\n    'text',\n    'email',\n    'search',\n    'password',\n    'textarea'\n];\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        marginBottom: 25,\n        '& .MuiFormHelperText-root': {\n            fontSize: 10,\n            position: 'absolute',\n            bottom: 0,\n            transform: 'translateY(100%)',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: 12,\n            }\n        }\n    }\n}));\n\ntype OwnPropsType = {\n    label?: string,\n    type: string,\n    rest?: any,\n};\n\ntype PropsType = WrappedFieldProps & OwnPropsType & TextFieldProps;\n\nexport const RenderField: FC<PropsType> = ({input, label, type, meta: {touched, error}, ...rest}) => {\n    const classes = useStyles();\n    return (\n        <>\n            {inputTypes.includes(type) &&\n            <TextField\n                error={touched && Boolean(error)}\n                helperText={touched && error ? error : ''}\n                label={label}\n                type={type}\n                fullWidth={true}\n                className={classes.textInput}\n                {...input}\n                {...rest}\n            />\n            }\n            {type === 'checkbox' &&\n            <FormControlLabel\n                className={classes.textInput}\n                control={\n                    <Checkbox\n                        checked={!!input.value}\n                        onChange={input.onChange}\n                    />\n                }\n                label={label}\n            />\n            }\n            {type === 'switch' &&\n            <FormControlLabel\n                className={classes.textInput}\n                control={\n                    <Switch\n                        checked={!!input.value}\n                        onChange={input.onChange}\n                    />\n                }\n                label={label}\n            />\n            }\n        </>\n    )\n};\n","type ValidatorType = (value: string) =>  string | undefined\r\n\r\nexport const required: ValidatorType = (value) => (value ? undefined : 'Required');\r\n\r\nexport const minLength = (length: number): ValidatorType => (value) => {\r\n    if(value.length < length) {\r\n        return `Minimum length ${length} symbols`\r\n    }\r\n    return undefined\r\n};\r\n\r\nexport const email : ValidatorType = (value) =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined;","import React, {Component, ComponentType, ReactNode} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getIsAuth} from \"../../redux/reducers/auth-selectors\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport RM from \"../../RouterManager\";\n\ntype MapStatePropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: getIsAuth(state)\n    }\n};\n\nexport const withAuthRedirect = (WrappedComponent: ComponentType<ReactNode>) => {\n    class RedirectComponent extends Component<MapStatePropsType> {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={RM.login.path}/>;\n            return <WrappedComponent {...this.props}/>\n        }\n    }\n\n    return connect<MapStatePropsType, {}, {}, AppStateType>(mapStateToProps)(RedirectComponent);\n};","// import { createSelector } from 'reselect'\nimport {AppStateType} from \"../redux-store\";\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersReducer.users\n};\n\n\n//todo example reselect\n\n// export const getUsersSelector = createSelector(\n//     getUsers,\n//     (users) => {\n//         return  users.filter(u => true)\n//     }\n// );\n//\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersReducer.pageSize\n};\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersReducer.totalUsersCount\n};\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersReducer.currentPage\n};\n\nexport const getIsLoading = (state: AppStateType) => {\n    return state.usersReducer.isLoading\n};\n\nexport const getFollowInProgress = (state: AppStateType) => {\n    return state.usersReducer.followInProgress\n};\n\nexport const getSearchQuery = (state: AppStateType) => {\n    return state.usersReducer.searchQuery\n};","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    btnFollow: {\n        background: theme.palette.success.main,\n        '&:hover': {\n            background: theme.palette.success.dark,\n        },\n        '&.active': {\n            background: theme.palette.secondary.main,\n        }\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true});","import React, {FC} from 'react';\nimport {Button, WithStyles} from \"@material-ui/core\";\nimport classNames from \"classnames\";\n\nimport {useHistory} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getFollowInProgress} from \"../../redux/reducers/users-selectors\";\nimport {connect} from \"react-redux\";\nimport {follow, unfollow} from \"../../redux/reducers/users-reducer\";\nimport {startChat} from \"../../redux/reducers/dialogs-reducer\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport withFollowMessageStyles from \"./followMessageStyles\";\nimport {PersonAddDisabledRoundedIcon, PersonAddRoundedIcon, EmailRoundedIcon} from \"../Icons/MeterialIcons\";\n\ntype OwnPropsType = {\n    userId: number,\n    isLoading: boolean,\n    followed: boolean,\n    updateProfileFollowed?: boolean,\n    customClasses?: {\n        btn?: string,\n        label?: string,\n        text?: string\n    }\n};\ntype MapStatePropsType = {followInProgress: Array<number>}\ntype MapDispatchPropsType = {\n    startChat: (userId: number, history: any) => void\n    follow: (id: number, updateProfileFollow: boolean) => void\n    unfollow: (id: number, updateProfileFollow: boolean) => void\n}\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType;\n\nconst FollowMessageBtns: FC<PropsType & WithStyles> = ({classes, userId, followed, followInProgress, unfollow, follow, startChat, isLoading, updateProfileFollowed = false, customClasses}) => {\n    let history = useHistory();\n    const labelClasses = customClasses && customClasses.label ? customClasses.label : undefined;\n    const textClasses = customClasses && customClasses.text ? customClasses.text : undefined;\n    const btnClasses = customClasses && customClasses.btn ? customClasses.btn : undefined;\n\n    if (isLoading) {\n        return (\n            <>\n                <Skeleton animation=\"wave\" height={36} className={btnClasses}/>\n                <Skeleton animation=\"wave\" height={36} className={btnClasses}/>\n            </>\n        )\n    }\n    return (\n        <>\n            <Button\n                disabled={followInProgress.includes(userId)}\n                variant=\"contained\"\n                color=\"primary\"\n                classes={{\n                    label: labelClasses,\n                    root: classNames(classes.btnFollow, {'active': followed}, btnClasses),\n                    text: textClasses,\n                }}\n                startIcon={followed ? <PersonAddDisabledRoundedIcon/> : <PersonAddRoundedIcon/>}\n                onClick={followed ?\n                    () => unfollow(userId, updateProfileFollowed) :\n                    () => follow(userId, updateProfileFollowed)}>\n                <span className={textClasses}>\n                     {followed ? \"Unfollow\" : \"Follow\"}\n                </span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                classes={{\n                    label: labelClasses,\n                    root: btnClasses,\n                    text: textClasses,\n                }}\n                startIcon={<EmailRoundedIcon/>}\n                disabled={followInProgress.includes(userId)}\n                onClick={() => startChat(userId, history)}>\n                    <span className={textClasses}>\n                        Message\n                    </span>\n            </Button>\n        </>\n    )\n};\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        followInProgress: getFollowInProgress(state),\n    }\n};\n\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\n    unfollow,\n    follow,\n    startChat,\n})(withFollowMessageStyles(FollowMessageBtns));\n","module.exports = __webpack_public_path__ + \"static/media/profile_cover.b9246c6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/job-image.b1475ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/profileNotFound.afb82acb.jpg\";","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    cover: {\n        lineHeight: 1,\n        paddingTop: 200/1232*100 + '%',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        minHeight: 130\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})","import React, {FC} from 'react';\nimport withProfileCoverStyles from './coverStyles'\nimport {WithStyles} from '@material-ui/core';\nimport profileCover from '../../../assets/images/profile_cover.jpg'\n\nconst ProfileCover: FC<WithStyles> = ({classes}) => {\n    return (\n        <div className={classes.cover} style={{backgroundImage: `url(${profileCover})`}}/>\n    )\n};\n\nexport default withProfileCoverStyles(ProfileCover);\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        borderRadius: 0,\n        backgroundColor: theme.palette.common.white,\n        marginBottom: 20\n    },\n    body: {\n        textAlign: 'center',\n        paddingBottom: 10,\n        [theme.breakpoints.up('md')]: {\n            paddingBottom: 20,\n        },\n    },\n    avatar: {\n        position: 'relative',\n        top: ' -100px',\n        marginBottom: '-90px',\n        height: 206,\n        width: 206,\n        border: '3px solid #fff',\n        margin: '0 auto',\n        borderRadius: ' 50%',\n        backgroundColor: theme.palette.common.white,\n        [theme.breakpoints.down('xs')]: {\n            height: 156,\n            width: 156,\n        },\n    },\n    avatarBtn: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        border: `2px solid ${theme.palette.primary.main}`,\n        zIndex: 2,\n        padding: 8,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n        transition: 'border-color  150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        '&:hover': {\n            borderColor: theme.palette.common.white,\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    removeBtn: {\n        top: 50,\n        right: 0,\n        transform: 'translateX(50%)'\n    },\n    avatarImg: {\n        height: '100%',\n        width: '100%',\n    },\n    socials: {\n        [theme.breakpoints.down('md')]: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n        },\n    },\n    socialsItem: {\n        [theme.breakpoints.down('md')]: {\n            width: 'auto',\n            padding: 9,\n            marginBottom: 5\n        },\n    },\n    socialsIcon: {\n        height: 25,\n        width: 25,\n        marginRight: 0,\n        [theme.breakpoints.up('lg')]: {\n            marginRight: 20,\n        },\n\n        '&.facebook': {\n            color: '#3b5999'\n        },\n\n        '&.twitter': {\n            color: '#55acee'\n        },\n\n        '&.instagram': {\n            color: '#e4405f'\n        },\n\n        '&.youtube': {\n            color: '#cd201f'\n        },\n\n        '&.github': {\n            color: '#000'\n        },\n\n        '&.website': {\n            color: '#0077b5'\n        }\n    },\n    socialsText: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'block'\n        }\n    },\n    autoMargin: {\n        margin: '0 auto'\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})","import React, {useEffect, useState, FC} from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport SimpleDialogTemplate from \"../Dialogs/SimpleDialogTemplate\";\n\ntype PropsType = {\n    status: string,\n    setUserStatus: (status: string) => void,\n    open: boolean,\n    handleClose: () => void,\n}\n\nconst StatusDialog: FC<PropsType> = ({status, open, handleClose, setUserStatus}) => {\n    const [newStatus, setNewStatus] = useState(status);\n    const saveNewStatus = () => {\n        setUserStatus(newStatus);\n        handleClose();\n    };\n\n    useEffect(() => {\n        setNewStatus(status)\n    }, [status]);\n\n    const handleChange = ({target: {value}}: { target: { value: string } }) => {\n        setNewStatus(value)\n    };\n\n    return (\n        <SimpleDialogTemplate\n            open={open}\n            resetAction={handleClose}\n            submitAction={saveNewStatus}\n            aria-labelledby=\"change-status-dialog\"\n            title=\"Change Status\"\n        >\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Status\"\n                type=\"textarea\"\n                multiline\n                rowsMax={8}\n                value={newStatus}\n                onChange={handleChange}\n                fullWidth\n            />\n        </SimpleDialogTemplate>\n    )\n};\n\nexport default StatusDialog;\n\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    statusTxt: {\n        textAlign: 'center',\n    },\n    icon: {\n        cursor: 'pointer',\n        marginLeft: 5,\n        opacity: 0.7,\n        transform: 'translateY(4px)',\n\n        '&:hover': {\n            opacity: 1\n        }\n    },\n    tooltip: {\n        backgroundColor: theme.palette.primary.light,\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {useState, FC} from 'react';\nimport {Tooltip, Typography, WithStyles} from \"@material-ui/core\";\nimport StatusDialog from \"../Dialogs/StatusDialog\";\nimport withProfileStatusStyles from \"./profileStatusStyles\";\nimport {CreateOutlinedIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    status: string\n    isOwner: boolean\n    setUserStatus: (status: string) => void\n}\n\nconst ProfileStatus: FC<PropsType & WithStyles> = ({status, setUserStatus, isOwner, classes}) => {\n    const [open, setOpen] = useState(false);\n\n    const toggleOpen = (open: boolean) => {\n        setOpen(open);\n    };\n\n    return (\n        <>\n            <div className={classes.statusTxt}>\n                <Typography variant=\"body1\" component=\"span\" color=\"textSecondary\">{status}</Typography>\n                {isOwner &&\n                <Tooltip title=\"Change status\" aria-label=\"Change\" color=\"primary\" classes={{tooltip: classes.tooltip}}>\n                    <CreateOutlinedIcon color=\"primary\" className={classes.icon} fontSize=\"small\"\n                                        onClick={() => toggleOpen(true)}/>\n                </Tooltip>\n                }\n            </div>\n            <StatusDialog open={open} handleClose={() => toggleOpen(false)} status={status} setUserStatus={setUserStatus}/>\n        </>\n    )\n};\n\nexport default withProfileStatusStyles(ProfileStatus);\n\n","\nexport const getCroppedImg = (image: HTMLImageElement, crop: any, fileName: string) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width || 0;\n    canvas.height = crop.height || 0;\n    const ctx = canvas.getContext('2d');\n    if(!ctx) {\n        return null\n    }\n    ctx.drawImage(\n        image,\n        crop.x * scaleX,\n        crop.y * scaleY,\n        crop.width * scaleX,\n        crop.height * scaleY,\n        0,\n        0,\n        crop.width,\n        crop.height,\n    );\n    // As Base64 string\n    // const base64Image = canvas.toDataURL('image/jpeg');\n\n    // As a blob\n    return new Promise((resolve) => {\n        canvas.toBlob(blob => {\n            if (!blob) {\n                console.error('Canvas is empty');\n                return;\n            }\n            // blob.name = fileName;\n            let fileUrl = window.URL.createObjectURL(blob);\n            resolve(fileUrl);\n        }, 'image/jpeg');\n    });\n};\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    photo: {\n        position: 'relative',\n        textAlign: 'center',\n\n        '& .ReactCrop__image': {\n            maxHeight: 250\n        }\n    },\n    load: {\n        display: 'block',\n        width: '100%',\n        backgroundColor: '#eee',\n        border: `1px dashed ${theme.palette.primary.main}`,\n        marginBottom: 20,\n        borderRadius: 4\n    },\n    loadContent: {\n        display: 'flex',\n        width: '100%',\n        height: 60,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    loadInput: {\n        display: 'none'\n    },\n    loadIcon: {\n        marginRight: 10\n    },\n    message: {\n        marginTop: 15\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {useEffect, useState, FC, ChangeEvent, useRef} from 'react';\nimport {Tooltip, Typography, Button, WithStyles} from \"@material-ui/core\";\nimport {ProfileType} from \"../../../redux/reducers/types\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\nimport {Alert} from \"@material-ui/lab\";\nimport SimpleDialogTemplate from \"../Dialogs/SimpleDialogTemplate\";\nimport {getCroppedImg} from '../../../utils/crop';\nimport withLoadPhotoStyles from \"./loadPhotoDialogStyles\";\nimport {AddAPhotoIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    profile: ProfileType\n    loadPhoto: (photo: any) => void\n    open: boolean,\n    handleClose: () => void,\n}\n\ntype Crop = {\n    aspect?: number;\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    unit?: 'px' | '%';\n}\n\nconst LoadPhotoDialog: FC<PropsType & WithStyles> = ({profile, open, handleClose, loadPhoto, classes}) => {\n    const [imgSrc, setImgSrc] = useState<any>(null);\n    const [imgRef, setImgRef] = useState<any>(null);\n    const [croppedImageUrl, setCroppedImageUrl] = useState<any>(null);\n    const [fileLoaded, setFileLoaded] = useState(false);\n    const [crop, setCrop] = useState<any>({\n        aspect: 1,\n    });\n    let inputFile: any = useRef(null);\n\n    useEffect(() => {\n        toDefaultState();\n        if (inputFile.current) {\n            inputFile.current.value = null\n        }\n    }, [open]);\n\n    const onSelectFile = (e: ChangeEvent<HTMLInputElement>) => {\n        toDefaultState();\n        const {target: {files}} = e;\n        if (files) {\n            setFileLoaded(true);\n            const selectedFile = files[0];\n            const reader = new FileReader();\n            reader.addEventListener('load', () => setImgSrc(reader.result));\n            reader.readAsDataURL(selectedFile);\n        }\n    };\n\n    const onCropComplete = (crop: Crop) => {\n        makeClientCrop(crop);\n    };\n\n    const onImageLoaded = (image: HTMLImageElement) => {\n        setImgRef(image);\n    };\n\n    const onCropChange = (crop: Crop) => {\n        setCrop(crop);\n    };\n\n    const toDefaultState = () => {\n        URL.revokeObjectURL(croppedImageUrl);\n        setImgSrc(null);\n        setImgRef(null);\n        setFileLoaded(false);\n        setCroppedImageUrl(null);\n        setCrop({\n            aspect: 1,\n        });\n    };\n\n    const makeClientCrop = async (crop: Crop) => {\n        if (imgRef && crop.width && crop.height) {\n            const croppedImageUrl = await getCroppedImg(\n                imgRef,\n                crop,\n                'newFile.jpeg'\n            );\n            setCroppedImageUrl(croppedImageUrl);\n        }\n    };\n\n    const updateAvatar = async () => {\n        if(croppedImageUrl) {\n            fetch(croppedImageUrl, {mode: \"cors\"})\n                .then(res => res.blob())\n                .then(blob => {\n                    const file = new File([blob], 'new-avatar.png', {type: 'image/png'});\n                    loadPhoto(file);\n                });\n        } else {\n            if (inputFile.current) {\n                const files = inputFile.current.files;\n                if (files.length) {\n                    loadPhoto(files[0]);\n                }\n            }\n        }\n        handleClose();\n    };\n\n    return (\n        <SimpleDialogTemplate\n            open={open}\n            resetAction={handleClose}\n            submitAction={updateAvatar}\n            submitName=\"Save\"\n            submitDisabled={!fileLoaded}\n            aria-labelledby=\"load-photo-dialog\"\n            title=\"Load Photo\"\n        >\n            <label className={classes.load}>\n                <input type=\"file\" name=\"photo\" ref={inputFile} onChange={onSelectFile} accept=\".jpg, .jpeg, .png\"\n                       className={classes.loadInput}/>\n                <Tooltip title=\".jpg, .jpeg, .png\" aria-label=\"Extensions\">\n                    <Button component=\"span\" className={classes.loadContent}>\n                        <AddAPhotoIcon color=\"primary\" className={classes.loadIcon}/>\n                        <Typography variant=\"subtitle2\" color=\"primary\">Upload</Typography>\n                    </Button>\n                </Tooltip>\n            </label>\n            <div className={classes.photo}>\n                {imgSrc &&\n                <ReactCrop\n                    src={imgSrc}\n                    crop={crop}\n                    ruleOfThirds\n                    onImageLoaded={onImageLoaded}\n                    onComplete={onCropComplete}\n                    onChange={onCropChange}\n                />\n                }\n            </div>\n            {imgSrc && !croppedImageUrl &&\n            <Alert severity=\"warning\" className={classes.message}>Crop the image or it will be done automatically</Alert>\n            }\n        </SimpleDialogTemplate>\n    )\n};\n\nexport default withLoadPhotoStyles(LoadPhotoDialog);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    actions: {\n        textAlign: 'right',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        [theme.breakpoints.down(769)]: {\n            maxWidth: 250,\n            margin: '0 auto'\n        },\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n        }\n    },\n    actionsTxt: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none'\n        },\n    },\n\n    actionsBtn: {\n        margin: '0 5px 20px',\n        width: '45%',\n\n        '&:last-of-type': {\n            marginRight: 0\n        },\n        [theme.breakpoints.up(769)]: {\n            width: '40%',\n        },\n\n        [theme.breakpoints.down('md')]: {\n            borderRadius: 0,\n            '& .MuiButton-startIcon': {\n                margin: 0\n            }\n        },\n\n        [theme.breakpoints.up('lg')]: {\n            width: '100%',\n            margin: '0 0 20px',\n        }\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {Button, Hidden, WithStyles} from \"@material-ui/core\";\nimport {NavLink, useLocation} from \"react-router-dom\";\nimport RM from \"../../../RouterManager\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport FollowMessageBtns from \"../../Buttons/FollowMessageBtns\";\nimport withProfileActionsStyles from \"./profileActionsStyles\";\nimport {AccountCircleIcon, SettingsIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    isOwner: boolean,\n    profileIsLoading: boolean,\n    userId: number,\n    followed: boolean\n}\n\nconst ProfileActions: FC<PropsType & WithStyles> = ({isOwner, profileIsLoading, userId, followed, classes}) => {\n    let {pathname} = useLocation();\n\n    return (\n        <div className={classes.actions}>\n            {!isOwner &&\n            <FollowMessageBtns\n                isLoading={profileIsLoading}\n                userId={userId}\n                followed={followed}\n                updateProfileFollowed={true}\n                customClasses={{\n                    btn: classes.actionsBtn,\n                    text: classes.actionsTxt\n                }}\n            />\n            }\n            {isOwner &&\n            <Hidden mdDown>\n               { profileIsLoading ?\n                <>\n                    <Skeleton animation=\"wave\" height={45} className={classes.actionsBtn}/>\n                </> :\n                <>\n                    {pathname === '/settings' ?\n                        <Button\n                            size=\"large\"\n                            fullWidth={true}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            component={NavLink}\n                            className={classes.actionsBtn}\n                            to={RM.profile.getPath(null)}\n                            startIcon={<AccountCircleIcon/>}\n                        >\n                            <span className={classes.actionsTxt}>Profile</span>\n                        </Button>\n                        : <Button\n                            size=\"large\"\n                            fullWidth={true}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            component={NavLink}\n                            className={classes.actionsBtn}\n                            to={RM.settings.path}\n                            startIcon={<SettingsIcon/>}\n                        >\n                            <span className={classes.actionsTxt}>Settings</span>\n                        </Button>\n                    }\n                </>\n               }\n            </Hidden>\n            }\n        </div>\n    )\n};\n\nexport default withProfileActionsStyles(ProfileActions);\n","import React, {FC, useState, useEffect, Fragment} from 'react';\nimport {ProfileType} from \"../../../redux/reducers/types\";\nimport withSidebarStyles from './sidebarStyles'\nimport userPlaceholder from \"../../../assets/images/user-placeholder.png\";\nimport ProfileStatus from \"../Status/ProfileStatus\";\nimport VkIcon from '../../Icons/VkIcon';\nimport classNames from \"classnames\";\nimport LoadPhotoDialog from \"../Dialogs/LoadPhotoDialog\";\nimport ConfirmDialog from \"../Dialogs/ConfirmDialog\";\nimport {compose} from \"redux\";\nimport ProfileActions from \"./ProfileActions\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {\n    WithStyles,\n    Paper,\n    Avatar,\n    Typography,\n    List,\n    ListItem,\n    Divider,\n    Link, IconButton,\n    Hidden,\n} from '@material-ui/core';\nimport {\n    FacebookIcon,\n    LanguageIcon,\n    TwitterIcon,\n    InstagramIcon,\n    YouTubeIcon,\n    GitHubIcon,\n    AddAPhotoIcon,\n    DeleteIcon\n} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    status: string\n    profile: ProfileType\n    setUserStatus: (status: string) => void\n    isOwner: boolean\n    loadPhoto: (photo: any) => void\n    profileIsLoading: boolean\n    followed: boolean\n}\n\ntype IconsType = {\n    [key: string]: any\n};\n\nconst icons: IconsType = {\n    facebook: FacebookIcon,\n    website: LanguageIcon,\n    vk: VkIcon,\n    twitter: TwitterIcon,\n    instagram: InstagramIcon,\n    youtube: YouTubeIcon,\n    github: GitHubIcon,\n};\n\ntype ContactsArrType = {\n    name: string\n    url: string\n}\n\nconst SocialIcon = (props: any) => {\n    const {name, ...other} = props;\n    const TagName = icons[name];\n    return <TagName {...other}/>\n};\n\nconst Sidebar: FC<PropsType & WithStyles> = ({profile, status, classes, setUserStatus, isOwner, loadPhoto, profileIsLoading, followed}) => {\n    const {photos, fullName, contacts} = profile;\n    const userAvatar = photos.large !== null ? photos.large : userPlaceholder;\n    const [contactsArr, setContactsArr] = useState<Array<ContactsArrType>>([]);\n    const [photoDialogOpen, setPhotoDialogOpen] = useState(false);\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\n\n    useEffect(() => {\n        let newArr: ContactsArrType[] = [];\n        Object.entries(contacts).forEach(([key, value]) => {\n                if (value !== null && value.length) {\n                    newArr = [...newArr, {name: key, url: value}];\n                }\n            }\n        );\n        setContactsArr(newArr);\n    }, [contacts]);\n\n    const openDialog = (open: boolean, type: 'edit' | 'confirm') => {\n        switch (type) {\n            case 'edit':\n                setPhotoDialogOpen(open);\n                break;\n            case 'confirm':\n                setDeleteDialogIsOpen(open);\n                break;\n        }\n    };\n\n    const removePhoto = () => {\n        fetch(userPlaceholder)\n            .then(res => res.blob())\n            .then(blob => {\n                const file = new File([blob], 'new-avatar.png', {type: 'image/png'});\n                loadPhoto(file);\n            });\n    };\n\n    return (\n        <>\n            {isOwner &&\n            <>\n                <LoadPhotoDialog profile={profile} open={photoDialogOpen} handleClose={() => openDialog(false, 'edit')}\n                                 loadPhoto={loadPhoto}/>\n                <ConfirmDialog\n                    isOpen={deleteDialogIsOpen}\n                    openDialog={openDialog}\n                    confirmAction={removePhoto}\n                />\n            </>\n            }\n            <Paper className={classes.paper}>\n                <div className={classes.body}>\n                    <div className={classes.avatar}>\n                        {isOwner && !profileIsLoading &&\n                        <>\n                            <IconButton className={classes.avatarBtn} aria-label=\"load-photo\"\n                                        onClick={() => openDialog(true, 'edit')}>\n                                <AddAPhotoIcon fontSize=\"small\" className={classes.avatarIcon}/>\n                            </IconButton>\n                            <IconButton className={classNames(classes.avatarBtn, classes.removeBtn)}\n                                        aria-label=\"remove-photo\"\n                                        onClick={() => openDialog(true, 'confirm')}>\n                                <DeleteIcon fontSize=\"small\" className={classes.avatarIcon}/>\n                            </IconButton>\n                        </>\n                        }\n                        {profileIsLoading ?\n                            <Skeleton animation=\"wave\" variant=\"circle\" className={classes.avatarImg}/>\n                            : <Avatar src={userAvatar} alt={fullName ? fullName : 'avatar'}\n                                      className={classes.avatarImg}/>\n                        }\n\n                    </div>\n                    {\n                        profileIsLoading ?\n                            <>\n                                <Skeleton animation=\"wave\" width=\"85%\"\n                                          className={classNames(classes.autoMargin, \"MuiTypography-h6\")}/>\n                                <Skeleton animation=\"wave\" width=\"60%\"\n                                          className={classNames(classes.autoMargin, \"MuiTypography-body1\")}/>\n                            </>\n                            :\n                            <>\n                                <Typography variant=\"h6\">{fullName}</Typography>\n                                <ProfileStatus status={status} setUserStatus={setUserStatus} isOwner={isOwner}/>\n                            </>\n                    }\n\n                </div>\n\n                <Hidden lgUp>\n                    <ProfileActions\n                        isOwner={isOwner}\n                        profileIsLoading={profileIsLoading}\n                        userId={profile.userId}\n                        followed={followed}\n                    />\n                </Hidden>\n\n                <List aria-label=\"socials\" disablePadding={true} className={classes.socials} component=\"div\">\n                    {\n                        contactsArr.map(({name, url}: { name: any, url: string }) =>\n                            <Fragment key={name}>\n                                <Hidden mdDown>\n                                    <Divider orientation='horizontal' light={true}/>\n                                </Hidden>\n                                {profileIsLoading ?\n                                    <div className={classNames(classes.socialsItem, 'MuiListItem-gutters')}>\n                                        <Skeleton animation=\"wave\" height={41} style={{minWidth: 25}}/>\n                                    </div> :\n                                    <ListItem button component={Link} href={url} target=\"_blank\"\n                                              rel=\"noopener noreferrer\"\n                                              className={classes.socialsItem}>\n                                        <SocialIcon name={name}\n                                                    className={classNames(`${classes.socialsIcon}`, `${name}`)}/>\n                                        <Typography variant=\"body2\" noWrap\n                                                    className={classes.socialsText}>{url}</Typography>\n                                    </ListItem>\n                                }\n                            </Fragment>\n                        )\n                    }\n                </List>\n            </Paper>\n        </>\n    )\n};\n\nexport default compose(\n    withSidebarStyles,\n)(Sidebar) as FC<PropsType>;\n\n","import React from 'react';\n\nexport default (props?: any) =>\n<svg enableBackground=\"new 0 0 24 24\" height=\"30\" viewBox=\"0 0 24 24\" width=\"30\" {...props}\n     xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"m19.915 13.028c-.388-.49-.277-.708 0-1.146.005-.005 3.208-4.431 3.538-5.932l.002-.001c.164-.547 0-.949-.793-.949h-2.624c-.668 0-.976.345-1.141.731 0 0-1.336 3.198-3.226 5.271-.61.599-.892.791-1.225.791-.164 0-.419-.192-.419-.739v-5.105c0-.656-.187-.949-.74-.949h-4.126c-.419 0-.668.306-.668.591 0 .622.945.765 1.043 2.515v3.797c0 .832-.151.985-.486.985-.892 0-3.057-3.211-4.34-6.886-.259-.713-.512-1.001-1.185-1.001h-2.625c-.749 0-.9.345-.9.731 0 .682.892 4.073 4.148 8.553 2.17 3.058 5.226 4.715 8.006 4.715 1.671 0 1.875-.368 1.875-1.001 0-2.922-.151-3.198.686-3.198.388 0 1.056.192 2.616 1.667 1.783 1.749 2.076 2.532 3.074 2.532h2.624c.748 0 1.127-.368.909-1.094-.499-1.527-3.871-4.668-4.023-4.878z\"\n        fill=\"#4b729f\"/>\n</svg>","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    profile: {\n        display: 'flex',\n        [theme.breakpoints.down(769)]: {\n            flexDirection: 'column'\n        }\n    },\n    profileLeft: {\n        width: '100%',\n        minWidth: 250,\n        [theme.breakpoints.up(769)]: {\n            width: 250,\n            minWidth: 250,\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: 300,\n            minWidth: 300,\n        },\n    },\n    profileRight: {\n        flexGrow: 1,\n        paddingTop: theme.spacing(2),\n        [theme.breakpoints.up(769)]: {\n            paddingTop: 0,\n            marginLeft: theme.spacing(1),\n        },\n        [theme.breakpoints.up('md')]: {\n            paddingTop: theme.spacing(3),\n            marginLeft: theme.spacing(2),\n        },\n        [theme.breakpoints.up('lg')]: {\n            marginLeft: theme.spacing(3),\n        }\n    },\n    grid: {\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column-reverse'\n        }\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {ProfileType} from \"../../../redux/reducers/types\";\nimport {Grid, Hidden, WithStyles} from \"@material-ui/core\";\nimport ProfileCover from './../Cover/ProfileCover';\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport ProfileActions from \"../Sidebar/ProfileActions\";\nimport withProfileLayoutStyles from \"./profileLayoutStyles\";\n\ntype PropsType = {\n    profile: ProfileType | null\n    status: string\n    isOwner: boolean\n    setUserStatus: (status: string) => void\n    loadPhoto: (photo: any) => void,\n    profileIsLoading: boolean,\n    followed: boolean\n}\n\nconst ProfileLayout: FC<PropsType & WithStyles> = ({profile, status, setUserStatus, isOwner, children, loadPhoto, profileIsLoading, followed, classes}) => {\n    return (\n        <div>\n            <ProfileCover/>\n            <div className={classes.profile}>\n                <div className={classes.profileLeft}>\n                    {profile &&\n                    <Sidebar\n                        profile={profile}\n                        status={status}\n                        setUserStatus={setUserStatus}\n                        isOwner={isOwner}\n                        loadPhoto={loadPhoto}\n                        profileIsLoading={profileIsLoading}\n                        followed={followed}\n                    />\n                    }\n                </div>\n                <div className={classes.profileRight}>\n                    <Grid container spacing={2} className={classes.grid}>\n                        <Grid item sm={12} lg={9}>\n                            {children}\n                        </Grid>\n                        <Hidden mdDown>\n                            <Grid item sm={10} lg={3}>\n                                {profile &&\n                                <ProfileActions\n                                    userId={profile.userId}\n                                    isOwner={isOwner}\n                                    profileIsLoading={profileIsLoading}\n                                    followed={followed}\n                                />\n                                }\n                            </Grid>\n                        </Hidden>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default withProfileLayoutStyles(ProfileLayout);","import React from 'react';\nimport {Divider, makeStyles} from \"@material-ui/core\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    divider: {\n        height: 4,\n        backgroundColor: theme.palette.primary.main,\n        borderBottomRightRadius: 10,\n        borderBottomLeftRadius: 10,\n    }\n}));\n\nconst StyledDivider = ({customClasses}: {customClasses?: any}) => {\n    const classes = useStyles();\n    return (\n        <Divider className={classNames(classes.divider, customClasses)}/>\n    );\n};\n\nexport default StyledDivider;\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        padding: '20px 25px 5px',\n        backgroundColor: theme.palette.common.white,\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        marginBottom: 20,\n        fontWeight: 500\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '25px 0 15px',\n        [theme.breakpoints.up('sm')]: {\n            justifyContent: 'center',\n        },\n    },\n    error: {\n        marginBottom: 15\n    },\n    button: {\n        minWidth: '48%',\n        marginLeft: 15,\n        [theme.breakpoints.up('sm')]: {\n            minWidth: 200\n        },\n        '&:first-of-type': {\n            marginLeft: 0\n        },\n    },\n    divider: {\n        position: 'relative',\n        top: 4\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {useEffect, FC} from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport {required} from \"../../../utils/validate\";\nimport {RenderField} from '../../Forms/components/FormControl';\nimport {ProfileType, UpdatedProfileType} from \"../../../redux/reducers/types\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Button, Paper, Typography, WithStyles} from '@material-ui/core';\nimport {CancelOutlinedIcon, CheckCircleOutlineOutlinedIcon} from \"../../Icons/MeterialIcons\";\nimport StyledDivider from \"../Posts/StyledDivider\";\nimport withSettingsFormStyles from \"./settingsFormStyles\";\n\ntype OwnPropsType = {\n    profile: ProfileType,\n}\n\ntype FormDataType = UpdatedProfileType;\n\ntype PropsType = InjectedFormProps<FormDataType> & OwnPropsType & WithStyles;\n\nconst socialsFields = ['website', 'facebook', 'vk', 'twitter', 'instagram', 'youtube', 'github'];\n\nconst SettingsForm: FC<PropsType> = ({handleSubmit, error, pristine, submitting, reset, initialize, profile, classes}) => {\n    useEffect(() => {\n        if (profile) {\n            initForm()\n        }\n    }, [profile]);\n\n    const initForm = () => {\n        if (profile) {\n            const {aboutMe, contacts: {facebook, website, github, instagram, youtube, twitter, vk}, lookingForAJob, lookingForAJobDescription, fullName} = profile;\n            initialize({\n                fullName,\n                aboutMe,\n                facebook,\n                website,\n                github,\n                instagram,\n                youtube,\n                twitter,\n                vk,\n                lookingForAJob,\n                lookingForAJobDescription\n            });\n        }\n    };\n\n    if (!profile) {\n        return <Preloader showPreloader={true}/>\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n                <StyledDivider customClasses={classes.divider}/>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"body1\" className={classes.title}>\n                        Profile:\n                    </Typography>\n                    <Field\n                        component={RenderField}\n                        type=\"text\"\n                        name=\"fullName\"\n                        variant=\"outlined\"\n                        validate={required}\n                        label=\"Full Name *\"\n                    />\n                    <Field\n                        component={RenderField}\n                        type=\"textarea\"\n                        name=\"aboutMe\"\n                        multiline\n                        variant=\"outlined\"\n                        label=\"About Me *\"\n                        validate={required}\n                    />\n                </Paper>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"body1\" className={classes.title}>\n                        Contacts:\n                    </Typography>\n                    {socialsFields.map(item => <Field\n                        component={RenderField}\n                        key={item}\n                        type=\"text\"\n                        name={item}\n                        label={item.slice(0, 1).toUpperCase() + item.slice(1)}\n                        variant=\"outlined\"\n                    />)}\n                </Paper>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"body1\" className={classes.title}>\n                        Open for job proposals\n                    </Typography>\n                    <Field\n                        component={RenderField}\n                        type=\"switch\"\n                        name=\"lookingForAJob\"\n                        label=\"I'm looking for a job\"\n                        id=\"lookingForAJob\"\n                    />\n                    <Field\n                        component={RenderField}\n                        type=\"textarea\"\n                        multiline\n                        variant=\"outlined\"\n                        name=\"lookingForAJobDescription\"\n                        label=\"Job description *\"\n                        validate={required}\n                    />\n                </Paper>\n                {error &&\n                <Alert severity=\"error\" className={classes.error}>{error}</Alert>\n                }\n                <div className={classes.buttons}>\n                    <Button\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<CheckCircleOutlineOutlinedIcon/>}\n                        disabled={pristine || submitting}\n                        className={classes.button}\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        size=\"large\"\n                        type=\"reset\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled={pristine || submitting}\n                        startIcon={<CancelOutlinedIcon/>}\n                        onClick={reset}\n                        className={classes.button}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n    )\n};\n\nconst SettingsReduxForm = reduxForm<FormDataType, OwnPropsType>({\n    form: 'settings',\n})(withSettingsFormStyles(SettingsForm));\n\nexport default SettingsReduxForm;\n","import React, {FC, ReactNode} from 'react';\n\ntype PropsType = {\n    children?: ReactNode;\n    index: number;\n    selectedTab: number;\n}\n\nconst TabPanel: FC<PropsType> = (props) => {\n    const { children, selectedTab, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={selectedTab !== index}\n            id={`scrollable-force-tabpanel-${index}`}\n            aria-labelledby={`scrollable-force-tab-${index}`}\n            {...other}\n            style={{padding: 2}}\n        >\n            {selectedTab === index && children}\n        </div>\n    );\n};\n\n\nexport default TabPanel;","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport jobImage from \"../../../assets/images/job-image.png\";\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        backgroundColor: theme.palette.common.white,\n        padding: 25,\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0,\n        marginBottom: 20\n    },\n\n    withBg: {\n        position: 'relative',\n        '&:after': {\n            display: 'block',\n            content: '\\'\\'',\n            background: `url(${jobImage}) no-repeat`,\n            opacity: 0.5,\n            top: 0,\n            right: 0,\n            width: 100,\n            height: 100,\n            position: 'absolute',\n            backgroundSize: 100,\n        }\n    },\n\n    edit: {\n        position: 'absolute',\n        textAlign: 'right',\n        right: 15,\n        top: 15\n    },\n    status: {\n        marginBottom: theme.spacing(2)\n    },\n    contacts: {},\n\n    block: {\n        marginBottom: theme.spacing(2)\n    },\n\n    jobIcon: {\n        transform: 'translateY(4px)',\n        marginLeft: 5,\n        '&.error': {\n            color: theme.palette.error.main\n        },\n        '&.success': {\n            color: theme.palette.success.main\n        }\n    },\n    divider: {\n        position: 'relative',\n        top: 4,\n        zIndex: 2\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport classNames from \"classnames\";\nimport {ProfileType} from \"../../../redux/reducers/types\";\nimport {Typography, WithStyles, Paper} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport StyledDivider from \"../Posts/StyledDivider\";\nimport withStaticProfileStyles from \"./staticProfileInfoStyles\";\nimport {DoneOutlineIcon, NotInterestedIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    profile: ProfileType,\n    profileIsLoading: boolean\n}\n\nconst StaticProfileInfo: FC<PropsType & WithStyles> = ({profile: {fullName, lookingForAJobDescription, aboutMe, lookingForAJob}, profileIsLoading, classes}) => {\n    const blocks = [\n        {id: 1, title: 'Full Name: ', text: fullName},\n        {id: 2, title: 'About me:  ', text: aboutMe},\n        {id: 3, title: 'Looking for a job:  ', text: lookingForAJob ?\n                <DoneOutlineIcon fontSize=\"small\" className={classNames(classes.jobIcon, 'success')}/> :\n                <NotInterestedIcon fontSize=\"small\" className={classNames(classes.jobIcon, 'error')}/>\n        },\n        {id: 4, title: 'Job Description: ', text: lookingForAJobDescription},\n    ];\n\n    return (\n        <>\n            <StyledDivider customClasses={classes.divider}/>\n            <Paper className={classNames(`${classes.paper}`, {[`${classes.withBg}`]: lookingForAJob && !profileIsLoading})}>\n                {blocks.map(({id, title, text}) => {\n                    if (!text) {\n                        return null\n                    }\n                    return (\n                        <div className={classes.block} key={id}>\n                            {profileIsLoading ?\n                                <Skeleton animation=\"wave\" width=\"100%\" className=\"MuiTypography-subtitle1\"/> :\n                                <>\n                                    <Typography variant=\"subtitle1\" component=\"span\">{title}</Typography>\n                                    <Typography variant=\"body1\" component=\"span\">{text}</Typography>\n                                </>\n                            }\n                        </div>\n                    )\n                })}\n            </Paper>\n        </>\n    )\n};\n\nexport default withStaticProfileStyles(StaticProfileInfo);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {grey} from \"@material-ui/core/colors\";\n\nconst styles = createStyles((theme: Theme) => ({\n    menuItemText: {\n        paddingLeft: 10,\n        color: grey[600],\n    },\n    menuItemIcon: {\n        color: grey[600],\n    },\n    paper: {\n        backgroundColor: theme.palette.common.white,\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from \"react\";\nimport {Menu, MenuItem, Typography, WithStyles} from \"@material-ui/core\";\nimport {PostsData_posts} from \"../../../server/types/PostsData\";\nimport {OpenPostDialogType} from \"../../../redux/reducers/types\";\nimport withPostSubmenuStyles from \"./postSubmenuStyles\";\nimport {DeleteIcon, EditIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    post: PostsData_posts,\n    anchorEl: any,\n    handleClose: () => void,\n    openDialog: (isOpen: boolean, type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n}\n\nconst PostSubmenu: FC<PropsType & WithStyles> = ({post, anchorEl, handleClose, openDialog, classes}) => {\n    return (\n        <div>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                PaperProps={{\n                    className: classes.paper\n                }}\n            >\n                <MenuItem onClick={() => openDialog(true, 'edit', post)}>\n                    <EditIcon fontSize=\"small\" className={classes.menuItemIcon}/>\n                    <Typography variant=\"body2\" className={classes.menuItemText}>\n                        Edit\n                    </Typography>\n                </MenuItem>\n                <MenuItem onClick={() => openDialog(true, 'confirm', post,)}>\n                    <DeleteIcon fontSize=\"small\" className={classes.menuItemIcon}/>\n                    <Typography variant=\"body2\" className={classes.menuItemText}>\n                        Delete\n                    </Typography>\n                </MenuItem>\n            </Menu>\n        </div>\n    )\n};\n\nexport default withPostSubmenuStyles(PostSubmenu);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {grey} from \"@material-ui/core/colors\";\n\nconst styles = createStyles((theme: Theme) => ({\n    post: {\n        backgroundColor: theme.palette.common.white,\n        padding: '20px 25px 10px',\n        marginBottom: 20,\n        position: 'relative',\n        wordBreak: 'break-word'\n    },\n    content: {\n        padding: '20px 0'\n    },\n    footer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: 10\n    },\n    likeBtn: {\n        cursor: 'pointer',\n        marginRight: 10,\n\n        '&:hover': {\n            '& $likeIcon': {\n                color: theme.palette.secondary.main\n            }\n        }\n    },\n    isLiked: {\n        '& $likeIcon': {\n            color: theme.palette.secondary.main\n        }\n    },\n    likeIcon: {\n        color: grey[300],\n        transition: 'color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    },\n    date: {\n        fontSize: 12,\n        color: grey[500],\n    },\n    head: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    avatar: {\n        marginRight: 10,\n        width: 50,\n        height: 50,\n    },\n    more: {\n        position: 'absolute',\n        right: 10,\n        top: 10\n    },\n    moreIcon: {\n        transition: 'color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        color: theme.palette.primary.light,\n\n        ' &:hover': {\n            color: theme.palette.primary.main\n        }\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC, useState} from 'react';\nimport {Typography, Paper, IconButton, Avatar, Divider, WithStyles} from \"@material-ui/core\";\nimport {PostsData_posts} from \"../../../server/types/PostsData\";\nimport userPlaceholder from \"../../../assets/images/user-placeholder.png\";\nimport {OpenPostDialogType, ProfileType} from \"../../../redux/reducers/types\";\nimport PostSubmenu from \"./PostSubmenu\";\nimport classNames from \"classnames\";\nimport withPostStyles from './postStyles';\nimport {MoreVertIcon, FavoriteIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    post: PostsData_posts,\n    author: ProfileType,\n    onLikePost: (userId: string, post: PostsData_posts) => void,\n    ownerId: number | null,\n    isOwner: Boolean,\n    openDialog: (isOpen: boolean, type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n}\n\nconst Post: FC<PropsType & WithStyles> = ({post, author: {fullName, photos}, openDialog, onLikePost, ownerId, isOwner, classes}) => {\n    const {text, date, likedBy} = post;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const userAvatar = photos.large !== null ? photos.large : userPlaceholder;\n    const likedByCurrentUser = likedBy.includes(String(ownerId));\n\n    const handleClick = ({currentTarget}: any) => {\n        setAnchorEl(currentTarget);\n    };\n\n    const onLikePostAction = () => {\n        if (ownerId) {\n            onLikePost(String(ownerId), post)\n        }\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const getDate = (date: string) => {\n        const formattedDate = new Date(+date);\n        return formattedDate.toLocaleDateString() + ' at ' + formattedDate.toLocaleTimeString().split(\":\").slice(0, -1).join(':');\n    };\n\n    const postDate = getDate(date);\n\n    return (\n        <Paper className={classes.post}>\n            <div className={classes.head}>\n                <Avatar src={userAvatar} alt=\"avatar\" sizes=\"50\" className={classes.avatar}/>\n                <div>\n                    <Typography variant=\"subtitle1\">\n                        {fullName}\n                    </Typography>\n                    <Typography variant=\"body2\" className={classes.date}>\n                        {postDate}\n                    </Typography>\n                </div>\n                {isOwner &&\n                <>\n                    <IconButton\n                        aria-label=\"more\"\n                        aria-controls=\"post-submenu\"\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}\n                        className={classes.more}\n                    >\n                        <MoreVertIcon/>\n                    </IconButton>\n                    <PostSubmenu\n                        post={post}\n                        anchorEl={anchorEl}\n                        handleClose={handleClose}\n                        openDialog={openDialog}\n                    />\n                </>\n                }\n\n            </div>\n            <Typography variant=\"body1\" className={classes.content}>\n                {text}\n            </Typography>\n            <Divider/>\n            <Typography variant=\"body2\" className={classes.footer}>\n                <IconButton className={\n                    classNames(classes.likeBtn, {[classes.isLiked]: likedByCurrentUser})\n                } size=\"small\" onClick={onLikePostAction} disabled={!ownerId}>\n                    <FavoriteIcon fontSize=\"small\" className={classes.likeIcon}/>\n                </IconButton>\n                <Typography variant=\"body2\" component=\"span\">\n                    {likedBy.length}\n                </Typography>\n            </Typography>\n        </Paper>\n    )\n};\n\nexport default withPostStyles(Post);\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        padding: '30px 25px',\n        backgroundColor: theme.palette.common.white,\n        marginBottom: 20\n    },\n    form: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    root: {\n        flexGrow: 1,\n        marginBottom: 0,\n    },\n    button: {\n        marginLeft: 10\n    },\n    buttonIcon: {\n        fontSize: '1.7rem'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\nimport {required} from \"../../../utils/validate\";\nimport {RenderField} from \"../../Forms/components/FormControl\";\nimport {IconButton, Paper, WithStyles} from \"@material-ui/core\";\nimport StyledDivider from \"./StyledDivider\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport withPostsFormStyles from \"./postFormStyles\";\nimport {SendIcon} from \"../../Icons/MeterialIcons\";\n\ntype OwnPropsType = {\n    addPostLoading: boolean\n}\n\ntype FormDataType = {\n    postText: string,\n}\n\ntype PropsType = InjectedFormProps<FormDataType> & OwnPropsType & WithStyles\n\nconst PostsForm: FC<PropsType> = ({handleSubmit, submitting, addPostLoading, classes}) => {\n    return (\n        <>\n            <StyledDivider/>\n            <Paper square className={classes.paper}>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Preloader showPreloader={addPostLoading}/>\n                    <Field\n                        placeholder=\"What's on your mind?\"\n                        name=\"postText\"\n                        type=\"textarea\"\n                        component={RenderField}\n                        validate={[required]}\n                        multiline\n                        rowsMax=\"3\"\n                        classes={{\n                            root: classes.root,\n                        }}\n                        variant=\"outlined\"\n                    />\n                    <IconButton type=\"submit\" disabled={submitting || addPostLoading} aria-label=\"send\" className={classes.button}>\n                        <SendIcon color=\"primary\" className={classes.buttonIcon}/>\n                    </IconButton>\n                </form>\n            </Paper>\n        </>\n    );\n};\n\nconst PostsReduxForm = reduxForm<FormDataType, OwnPropsType>({\n    form: 'posts',\n})(withPostsFormStyles(PostsForm));\n\nexport default PostsReduxForm;\n","import React, {useState, FC} from 'react';\nimport {TextField,} from \"@material-ui/core\";\nimport {PostsData_posts} from \"../../../server/types/PostsData\";\nimport {OpenPostDialogType} from \"../../../redux/reducers/types\";\nimport SimpleDialogTemplate from \"./SimpleDialogTemplate\";\n\ntype PropsType = {\n    isOpen: boolean,\n    itemToEdit: PostsData_posts,\n    onEditPost: (newText: string, post: PostsData_posts) => void,\n    openDialog: (isOpen: boolean, type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n}\n\nconst EditDialog: FC<PropsType> = ({isOpen, itemToEdit, onEditPost, openDialog}) => {\n    const [newText, setNewText] = useState(itemToEdit.text);\n\n    const saveUpdatedPost = () => {\n        if (newText) {\n            onEditPost(newText, itemToEdit);\n            handleClose();\n        }\n    };\n\n    const handleClose = () => {\n        openDialog(false, 'edit', null)\n    };\n\n    const handleChange = ({target: {value}}: { target: { value: string } }) => {\n        setNewText(value)\n    };\n\n    return (\n        <SimpleDialogTemplate\n            open={isOpen}\n            resetAction={handleClose}\n            submitAction={saveUpdatedPost}\n            aria-labelledby=\"edit-post-dialog\"\n            title=\"Edit Post\"\n        >\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Edit post\"\n                type=\"textarea\"\n                multiline\n                rowsMax={10}\n                value={newText}\n                onChange={handleChange}\n                fullWidth\n                error={!newText}\n            />\n        </SimpleDialogTemplate>\n    )\n};\n\nexport default EditDialog;","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        backgroundColor: theme.palette.common.white,\n        width: '100%'\n    },\n    emptyText: {\n        padding: 25\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport StyledDivider from \"./StyledDivider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {WithStyles} from \"@material-ui/core\";\nimport withPostsEmptyStyles from \"./postsEmptyStyles\";\n\ntype PropsType = {\n   isLoading: boolean,\n   isOwner: boolean\n}\n\nconst PostsEmpty: FC<PropsType & WithStyles> = ({isLoading, isOwner, classes}) => {\n    return (\n        <Paper className={classes.paper}>\n            {!isOwner && <StyledDivider/>}\n            {isLoading ?\n                <div className={classes.emptyText}>\n                    <Skeleton animation=\"wave\" width=\"100%\" className={\"MuiTypography-body1\"}/>\n                </div>:\n                <Typography variant=\"body1\" className={classes.emptyText}>\n                    There are no posts yet...\n                </Typography>\n            }\n        </Paper>\n    )\n};\n\nexport default withPostsEmptyStyles(PostsEmpty);\n","import React, {FC} from 'react';\nimport Post from './Post';\nimport PostsForm from \"./PostsForm\";\nimport {PostsData_posts} from '../../../server/types/PostsData';\nimport {OpenPostDialogType, ProfileType} from \"../../../redux/reducers/types\";\nimport EditDialog from \"../Dialogs/EditDialog\";\nimport ConfirmDialog from \"../Dialogs/ConfirmDialog\";\nimport PostsEmpty from \"./PostsEmpty\";\n\ntype PropsType = {\n    posts: PostsData_posts[] | null,\n    onAddPost: ({postText}: { postText: string }) => void,\n    onDeletePost: (id: string) => void,\n    onEditPost: (newText: string, post: PostsData_posts) => void,\n    isOwner: boolean,\n    ownerId: number | null,\n    author: ProfileType,\n    editDialogIsOpen: boolean,\n    deleteDialogIsOpen: boolean,\n    openDialog: (isOpen: boolean, type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n    selectedPost: null | PostsData_posts,\n    addPostLoading: boolean,\n    onLikePost: (userId: string, post: PostsData_posts) => void\n}\n\nconst Posts: FC<PropsType> = (({\n                                   posts = [],\n                                   onLikePost,\n                                   isOwner,\n                                   ownerId,\n                                   onAddPost,\n                                   onDeletePost,\n                                   onEditPost,\n                                   author,\n                                   selectedPost,\n                                   addPostLoading,\n                                   editDialogIsOpen,\n                                   deleteDialogIsOpen,\n                                   openDialog\n}) => {\n\n    return (\n        <>\n            {isOwner && <PostsForm onSubmit={onAddPost} addPostLoading={addPostLoading}/>}\n\n            {posts && !posts.length && <PostsEmpty isOwner={isOwner} isLoading={false}/>}\n\n            {posts && posts.length > 0 && posts.map(post => (\n                <Post\n                    post={post}\n                    isOwner={isOwner}\n                    key={post.id}\n                    openDialog={openDialog}\n                    author={author}\n                    ownerId={ownerId}\n                    onLikePost={onLikePost}\n                />\n            ))}\n\n            {selectedPost &&\n                <>\n                    <EditDialog\n                        isOpen={editDialogIsOpen}\n                        itemToEdit={selectedPost}\n                        onEditPost={onEditPost}\n                        openDialog={openDialog}\n                    />\n\n                    <ConfirmDialog\n                        isOpen={deleteDialogIsOpen}\n                        openDialog={openDialog}\n                        confirmAction={onDeletePost}\n                        itemToConfirm={selectedPost}\n                    />\n                </>\n            }\n        </>\n    )\n});\n\nexport default Posts;\n","import gql from 'graphql-tag';\n\nexport const GET_POSTS = gql`\n    query PostsData($authorId: Int!) {\n        posts(authorId: $authorId){\n            id,\n            text,\n            likedBy,\n            date,\n            authorId\n        }\n     }\n`;","import {gql} from 'apollo-boost';\n\nexport const ADD_POST = gql`\n   mutation AddPostMutation($text: String!, $date: String!, $authorId: Int!, $likedBy: [String!]!) {\n    addPost(text: $text, date: $date, authorId: $authorId, likedBy: $likedBy) {\n        text\n        date\n        authorId,\n        likedBy\n    }\n}\n`;\n\nexport const DELETE_POST = gql`\n   mutation DeletePostMutation($id: ID) {\n    deletePost(id: $id) {\n        text\n    }\n}\n`;\n\nexport const UPDATE_POST = gql`\n   mutation UpdatePostMutation($id: ID, $text: String!, $likedBy: [String!]!) {\n   updatePost(id: $id, text: $text, likedBy: $likedBy) {\n        id\n        text\n        likedBy\n    }\n}\n`;\n\n","import React, {FC, useState} from 'react';\nimport Posts from \"./Posts\";\nimport {useQuery, useMutation} from '@apollo/react-hooks';\nimport {GET_POSTS} from \"../../../server/queries\";\nimport {ADD_POST, DELETE_POST, UPDATE_POST} from \"../../../server/mutations\";\nimport {PostsData, PostsDataVariables, PostsData_posts} from '../../../server/types/PostsData';\nimport {AddPostMutation, AddPostMutationVariables} from '../../../server/types/AddPostMutation';\nimport {DeletePostMutation, DeletePostMutationVariables} from '../../../server/types/DeletePostMutation';\nimport {UpdatePostMutation, UpdatePostMutationVariables} from '../../../server/types/UpdatePostMutation';\nimport {ProfileType, OpenPostDialogType} from \"../../../redux/reducers/types\";\nimport {reset} from \"redux-form\";\nimport {useDispatch} from 'react-redux';\nimport PostsEmpty from \"./PostsEmpty\";\n\ntype PropsType = {\n    authorId: number,\n    isOwner: boolean,\n    author: ProfileType,\n    currentUserInfo: ProfileType | null\n}\n\nconst PostsContainer: FC<PropsType> = ({authorId, isOwner, author, currentUserInfo}) => {\n    const {data, loading: dataLoading} = useQuery<PostsData, PostsDataVariables>(GET_POSTS, {\n        variables: {authorId},\n\n    });\n    const [addPost, {loading: addPostLoading}] = useMutation<AddPostMutation, AddPostMutationVariables>(ADD_POST);\n    const [deletePost] = useMutation<DeletePostMutation, DeletePostMutationVariables>(DELETE_POST);\n    const [updatePost] = useMutation<UpdatePostMutation, UpdatePostMutationVariables>(UPDATE_POST);\n    const [editDialogIsOpen, setEditDialogIsOpen] = useState(false);\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\n    const [selectedPost, setSelectedPost] = useState<PostsData_posts | null>(null);\n    const dispatch = useDispatch();\n\n    const onAddPost = ({postText}: { postText: string }) => {\n        if (postText && postText.length > 0) {\n            addPost({\n                variables: {\n                    text: postText,\n                    date: new Date().toString(),\n                    authorId,\n                    likedBy: []\n                },\n                refetchQueries: [{\n                    query: GET_POSTS,\n                    variables: {authorId}\n                }]\n            }).then(() => dispatch(reset('posts')))\n        }\n    };\n\n    const onDeletePost = (id: string) => {\n        deletePost({\n            variables: {\n                id\n            },\n            refetchQueries: [{\n                query: GET_POSTS,\n                variables: {authorId}\n            }]\n        });\n    };\n\n    const onEditPost = (newText: string, post: PostsData_posts) => {\n        let {id, likedBy} = post;\n        updatePost({\n            variables: {id, text: newText, likedBy},\n            refetchQueries: [{\n                query: GET_POSTS,\n                variables: {authorId}\n            }]\n        });\n    };\n\n    const onLikePost = (userId: string, post: PostsData_posts) => {\n        let {id, text, likedBy} = post;\n        likedBy = likedBy.includes(userId) ? likedBy.filter(item => item !== userId) : [...likedBy, userId];\n        updatePost({\n            variables: {id, text, likedBy},\n            refetchQueries: [{\n                query: GET_POSTS,\n                variables: {authorId}\n            }]\n        });\n    };\n\n    const openDialog = (isOpen: boolean, type: OpenPostDialogType, selectedItem: PostsData_posts | null) => {\n        setSelectedPost(selectedItem);\n        switch (type) {\n            case \"confirm\":\n                setDeleteDialogIsOpen(isOpen);\n                break;\n            case \"edit\":\n                setEditDialogIsOpen(isOpen);\n                break;\n            default:\n                break;\n        }\n    };\n\n    if (dataLoading || !data) return <PostsEmpty isLoading={true} isOwner={isOwner}/>;\n\n    const {posts} = data;\n    return (\n        <Posts\n            posts={posts}\n            isOwner={isOwner}\n            ownerId={currentUserInfo ? currentUserInfo.userId : null}\n            onAddPost={onAddPost}\n            onDeletePost={onDeletePost}\n            onEditPost={onEditPost}\n            author={author}\n            editDialogIsOpen={editDialogIsOpen}\n            deleteDialogIsOpen={deleteDialogIsOpen}\n            selectedPost={selectedPost}\n            addPostLoading={addPostLoading}\n            onLikePost={onLikePost}\n            openDialog={openDialog}\n        />\n    )\n};\nexport default PostsContainer;\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    tab: {\n        fontWeight: 400,\n        textTransform: 'none',\n        minWidth: 'auto',\n        color: theme.palette.primary.light,\n        '&:not($selected):hover': {\n            color: theme.palette.primary.main\n        },\n        [theme.breakpoints.up('lg')]: {\n            minWidth: 90,\n        }\n    },\n    selected: {\n        color: theme.palette.secondary.main,\n        cursor: 'auto'\n    },\n    indicator: {\n        backgroundColor: 'transparent'\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {ProfileType} from \"../../../redux/reducers/types\";\nimport {Grid, isWidthUp, Tab, Tabs, WithStyles, WithWidth} from \"@material-ui/core\";\nimport TabPanel from \"./TabPanel\";\nimport StaticProfileInfo from \"../ProfileInfo/StaticProfileInfo\";\nimport PostsContainer from \"../Posts/PostsContainer\";\nimport SwipeableViews from 'react-swipeable-views';\nimport withWidth from \"@material-ui/core/withWidth\";\nimport withProfileInfoTabsStyles from \"./profileInfoTabsStyles\";\nimport {compose} from \"redux\";\nimport {AssignmentOutlinedIcon, ListAltOutlinedIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    profile: ProfileType\n    isOwner: boolean,\n    currentUserInfo: ProfileType | null,\n    profileIsLoading: boolean\n}\n\nconst ProfileInfoTabs: FC<PropsType & WithWidth & WithStyles> = ({profile, isOwner, currentUserInfo, width, profileIsLoading, classes}) => {\n    const [selectedTab, setSelectedTab] = React.useState(0);\n    const widthUpMd = isWidthUp('md', width);\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setSelectedTab(newValue);\n    };\n    const handleChangeIndex = (index: number) => {\n        setSelectedTab(index);\n    };\n\n    return (\n        <>\n            <Grid container direction={widthUpMd ? 'row' : 'column-reverse'}>\n                <Grid item xs={12} md={10}>\n                    <SwipeableViews\n                        axis='x'\n                        index={selectedTab}\n                        onChangeIndex={handleChangeIndex}\n                    >\n                        <TabPanel selectedTab={selectedTab} index={0}>\n                            <StaticProfileInfo\n                                profile={profile}\n                                profileIsLoading={profileIsLoading}\n                            />\n                        </TabPanel>\n                        <TabPanel selectedTab={selectedTab} index={1}>\n                            <PostsContainer\n                                author={profile}\n                                authorId={profile.userId}\n                                isOwner={isOwner}\n                                currentUserInfo={currentUserInfo}\n                            />\n                        </TabPanel>\n                    </SwipeableViews>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Tabs\n                        value={selectedTab}\n                        onChange={handleChange}\n                        indicatorColor=\"secondary\"\n                        textColor=\"secondary\"\n                        aria-label=\"profile tabs\"\n                        centered={!widthUpMd}\n                        orientation={widthUpMd ? \"vertical\" : \"horizontal\"}\n                        TabIndicatorProps={{\n                            className: classes.indicator,\n                        }}\n                    >\n                        <Tab icon={<AssignmentOutlinedIcon/>} label=\"Info\" disableRipple classes={{\n                            root: classes.tab,\n                            selected: classes.selected\n                        }}/>\n                        <Tab icon={<ListAltOutlinedIcon/>} label=\"Posts\" disableRipple classes={{\n                            root: classes.tab,\n                            selected: classes.selected\n                        }}/>\n                    </Tabs>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default compose(\n    withWidth(),\n    withProfileInfoTabsStyles\n)(ProfileInfoTabs) as FC<PropsType>;","import React, {FC} from 'react';\nimport {ProfileType, UpdatedProfileType} from \"../../redux/reducers/types\";\nimport {Route, Switch, withRouter, RouteComponentProps} from \"react-router-dom\";\nimport ProfileLayout from \"./Layout/ProfileLayout\";\nimport SettingsReduxForm from \"./ProfileSettings/SettingsForm\";\nimport ProfileInfoTabs from \"./Tabs/ProfileInfoTabs\";\n\ntype PropsType = {\n    profile: ProfileType | null\n    status: string\n    isOwner: boolean\n    setUserStatus: (status: string) => void\n    loadPhoto: (photo: any) => void\n    updateInfo: (info: UpdatedProfileType) => void,\n    currentUserInfo: ProfileType | null,\n    profileIsLoading: boolean,\n    followed: boolean\n}\n\nconst Profile: FC<PropsType & RouteComponentProps> = ({currentUserInfo, profile, status, setUserStatus, isOwner, loadPhoto, updateInfo, profileIsLoading, followed}) => {\n    return (\n        <ProfileLayout\n            profile={profile}\n            status={status}\n            isOwner={isOwner}\n            setUserStatus={setUserStatus}\n            loadPhoto={loadPhoto}\n            profileIsLoading={profileIsLoading}\n            followed={followed}\n        >\n            <Switch>\n                {isOwner &&\n                <Route exact path={`/settings`}>\n                    {currentUserInfo &&\n                    <SettingsReduxForm profile={currentUserInfo} onSubmit={updateInfo}/>\n                    }\n                </Route>\n                }\n                <Route path=\"/profile/:id?\">\n                    {profile &&\n                    <ProfileInfoTabs\n                        profile={profile}\n                        isOwner={isOwner}\n                        currentUserInfo={currentUserInfo}\n                        profileIsLoading={profileIsLoading}\n                    />\n                    }\n                </Route>\n            </Switch>\n        </ProfileLayout>\n    )\n};\n\nexport default withRouter(Profile);\n\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        textAlign: 'center',\n        padding: '30px 0',\n        flexGrow: 1,\n    },\n    img: {\n        maxWidth: 300,\n        margin: '25px 0'\n    },\n    error: {\n        textAlign: 'left',\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport profileMissed from \"../../../assets/images/profileNotFound.jpg\";\nimport Typography from '@material-ui/core/Typography';\nimport {WithStyles} from \"@material-ui/core\";\nimport {Alert} from '@material-ui/lab';\nimport withProfileErrorStyles from \"./profileErrorStyles\";\n\ntype PropsType = {\n    profileError: string | null\n}\n\nconst ProfileError: FC<PropsType & WithStyles> = ({profileError, classes}) => {\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h4\">Profile Not Found</Typography>\n            <img\n                src={profileMissed}\n                alt=\"no-profile\"\n                className={classes.img}\n            />\n            <Alert severity=\"error\" className={classes.error}>\n                {profileError}\n            </Alert>\n        </div>\n    )\n};\n\nexport default withProfileErrorStyles(ProfileError);\n","import React, {useEffect, FC} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getUserProfile,\n    getUserStatus, getIsUserFollowed,\n    loadPhoto, updateProfileInfo,\n    setUserProfile,\n    setUserStatus,\n} from \"../../redux/reducers/profile-reducer\";\nimport {useParams, withRouter, useHistory} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {\n    getProfile,\n    getProfileError,\n    getStatus,\n    getProfileIsLoading,\n    getIsFollowed\n} from \"../../redux/reducers/profile-selectors\";\nimport {getCurrentUserInfo, getCurrentUserId, getIsAuth} from \"../../redux/reducers/auth-selectors\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {ProfileType, UpdatedProfileType} from \"../../redux/reducers/types\";\nimport ProfileError from './ProfileError/ProfileError';\nimport {withAuthRedirect} from \"../Redirects/AuthRedirect\";\n\ntype MapStatePropsType = {\n    profile: ProfileType | null\n    status: string\n    userId?: number | null | undefined\n    isAuth: boolean,\n    isFollowed: boolean,\n    profileError: string | null,\n    profileIsLoading: boolean,\n    currentUserInfo: ProfileType | null\n}\n\ntype MapDispatchPropsType = {\n    getUserProfile: (id: number) => void\n    getUserStatus: (id: number) => void\n    setUserStatus: (status: string) => void\n    setUserProfile: (profile: ProfileType) => void,\n    loadPhoto: (photo: any) => void,\n    updateProfileInfo: (info: ProfileType, userId: number) => void,\n    getIsUserFollowed: (id: number) => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nconst ProfileContainer: FC<PropsType> = ({\n                                             isAuth,\n                                             userId,\n                                             getUserProfile,\n                                             getUserStatus,\n                                             profile,\n                                             status,\n                                             setUserStatus,\n                                             loadPhoto,\n                                             updateProfileInfo,\n                                             profileError,\n                                             profileIsLoading,\n                                             currentUserInfo,\n                                             isFollowed,\n                                             getIsUserFollowed\n                                         }) => {\n    let {id} = useParams();\n    let history = useHistory();\n    const isOwner = !id || Number(id) === userId;\n\n    useEffect(() => {\n        let newId = id;\n        const checkProfile = () => {\n            if (!id) {\n                isAuth ? newId = String(userId) : history.push('/login');\n            }\n\n            getUserProfile(Number(newId));\n            getUserStatus(Number(newId));\n            if(!isOwner) {\n                getIsUserFollowed(Number(newId));\n            }\n        };\n\n        checkProfile();\n    }, [id, isAuth, getUserProfile, userId, getUserStatus, history]);\n\n    const updateInfo = (info: UpdatedProfileType) => {\n        const {aboutMe, lookingForAJob, lookingForAJobDescription, fullName, ...contacts} = info;\n\n        if (userId && profile) {\n            let updatedProfile = {\n                ...profile,\n                aboutMe,\n                lookingForAJob,\n                lookingForAJobDescription,\n                fullName,\n                contacts: {\n                    ...profile.contacts,\n                    ...contacts\n                }\n            };\n            updateProfileInfo(updatedProfile, userId)\n        }\n    };\n\n    if (profileError) {\n        return (\n            <ProfileError profileError={profileError}/>\n        )\n    }\n\n    return (\n        <Profile\n            profile={profile}\n            status={status}\n            setUserStatus={setUserStatus}\n            isOwner={isOwner}\n            loadPhoto={loadPhoto}\n            updateInfo={updateInfo}\n            currentUserInfo={currentUserInfo}\n            profileIsLoading={profileIsLoading}\n            followed={isFollowed}\n        />\n    )\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        profile: getProfile(state),\n        status: getStatus(state),\n        userId: getCurrentUserId(state),\n        isAuth: getIsAuth(state),\n        profileError: getProfileError(state),\n        profileIsLoading: getProfileIsLoading(state),\n        currentUserInfo: getCurrentUserInfo(state),\n        isFollowed: getIsFollowed(state),\n    }\n};\n\nexport default compose(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n        getUserProfile,\n        getUserStatus,\n        setUserStatus,\n        setUserProfile,\n        loadPhoto,\n        updateProfileInfo,\n        getIsUserFollowed\n    }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer) as FC;\n\n\n"],"sourceRoot":""}