{"version":3,"sources":["assets/images/logo.png","assets/images/user-placeholder.png","components/Profile/Dialogs/simpleDialogStyles.ts","components/Profile/Dialogs/SimpleDialogTemplate.tsx","components/Profile/Dialogs/ConfirmDialog.tsx","redux/reducers/profile-selectors.ts","redux/reducers/dialogs-selectors.ts","RouterManager.ts","redux/reducers/dialogs-reducer.ts","redux/reducers/profile-reducer.ts","components/Icons/MeterialIcons.ts","serviceWorker.js","api/api.ts","redux/reducers/app-reducer.ts","redux/sagas/saga.ts","redux/redux-store.ts","components/Header/navbarStyles.ts","components/Header/Navbar.tsx","components/Header/submenuStyles.ts","components/Header/Submenu.tsx","components/Header/authBtnStyles.ts","components/Header/AuthBtn.tsx","components/Header/mobileMenuStyles.ts","components/Header/MobileMenu.tsx","components/Header/headerStyles.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/HOC/Suspense.js","redux/reducers/app-selectors.ts","components/Notifier/Notifier.js","components/Footer/Footer.tsx","App.tsx","theme.js","index.tsx","utils/helpers.ts","redux/reducers/users-reducer.ts","redux/reducers/auth-reducer.ts","redux/reducers/auth-selectors.ts","components/Preloader/preloaderStyles.ts","components/Preloader/Preloader.tsx"],"names":["module","exports","styles","createStyles","theme","paper","backgroundColor","palette","common","white","title","textAlign","padding","buttons","justifyContent","btn","width","withStyles","withTheme","withSimpleDialogStyles","open","children","submitAction","resetAction","submitName","submitDisabled","classes","rest","Dialog","onClose","fullWidth","maxWidth","DialogTitle","className","DialogContent","DialogActions","disableSpacing","Button","onClick","color","variant","startIcon","disabled","ConfirmDialog","isOpen","openDialog","confirmAction","itemToConfirm","handleClose","id","aria-labelledby","getProfile","state","profileReducer","profile","getProfileError","profileError","getProfileIsLoading","profileIsLoading","getIsFollowed","isFollowed","getStatus","status","getMessagesList","dialogsReducer","messages","getDialogsList","dialogs","getLastUserActivityDate","lastUserActivityDate","getDeletedMessages","deletedMessages","getSpamedMessages","spamedMessages","getNewMessagesCount","newMessagesCount","getSelectedFriend","selectedFriend","getMessagesLoading","messagesLoading","RM","home","path","getPath","settings","login","users","GET_DIALOGS_ASYNC","GET_MESSAGES_ASYNC","SEND_MESSAGE_ASYNC","START_CHAT_ASYNC","GET_NEW_MESSAGES_COUNT_ASYNC","DELETE_MESSAGE_ASYNC","RESTORE_MESSAGE_ASYNC","SPAM_MESSAGE_ASYNC","initialState","setMessagesLoading","type","setDialogs","setSelectedFriend","setMessages","setActivityDate","userId","setNewMessagesCount","count","addMessage","message","addMessageToDeleted","messageId","addMessageToSpam","restoreFromSpamDeleted","startChat","history","sendMessage","getMessages","deleteMessage","restoreMessage","spamMessage","requestNewMessagesCount","getDialogs","filter","selectedUser","find","dialog","Number","undefined","GET_STATUS_ASYNC","SET_STATUS_ASYNC","UPDATE_USER_PROFILE_ASYNC","GET_USER_PROFILE_ASYNC","GET_IS_FOLLOWED_ASYNC","LOAD_PHOTO_ASYNC","toggleProfileLoading","setUserProfile","setUserProfileError","setPhoto","photos","updateIsFollowed","setStatus","getUserStatus","setUserStatus","updateProfileInfo","info","getUserProfile","updateCurrentUserInfo","loadPhoto","photo","getIsUserFollowed","Boolean","window","location","hostname","match","ResultCodes","ResultCodeForCaptcha","inited","notifications","enqueueSnackbar","notification","key","options","Date","getTime","Math","random","appReducer","dismissAll","map","dismissed","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","searchText","get","then","response","data","post","delete","authAPI","email","password","rememberMe","captcha","securityAPI","profileAPI","put","photoFile","formData","FormData","append","dialogsAPI","body","getUserProfileAsync","updateProfileInfoAsync","getStatusAsync","setUserStatusAsync","loadPhotoAsync","setUserIsFollowedAsync","requestUsersAsync","toggleFollowAsync","getDialogsAsync","startChatAsync","sendMessageAsync","deleteMessagesAsync","restoreMessagesAsync","spamMessagesAsync","getMessagesAsync","getNewMessagesCountAsync","authenticateAsync","loginAsync","logoutAsync","appInitAsync","mySaga","select","previousId","call","getProfileById","setCurrentUserInfo","updateProfile","resultCode","Success","stopSubmit","_error","getCurrentUserId","getUserIsFollowed","setSearchText","setPage","toggleIsLoading","requestUsers","items","totalCount","setUsers","setUsersTotalCount","action","updateProfileFollow","toggleFollowInProgress","followUser","unfollowUser","acceptFollow","acceptUnfollow","requestDialogs","push","reset","error","authenticate","setUserData","AUTH_ASYNC","CaptchaRequired","getCaptcha","url","setCaptchaUrl","logout","a","takeEvery","LOGIN_ASYNC","LOGOUT_ASYNC","FOLLOW_ASYNC","UNFOLLOW_ASYNC","REQUEST_USERS_ASYNC","rootReducer","combineReducers","usersReducer","authReducer","app","form","formReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","run","list","breakpoints","up","display","marginRight","listItem","down","borderBottom","grey","link","text","primary","alignItems","icon","spacing","lineHeight","name","fontSize","activeLink","pointerEvents","light","tooltip","withNavbarStyles","openLogoutDialog","isAuth","LINKS","MOBILE_LINKS","areNewMessages","List","Hidden","xsDown","ListItem","Link","component","NavLink","to","activeClassName","underline","Tooltip","aria-label","IconButton","Badge","badgeContent","max","smUp","Typography","classNames","borderTopLeftRadius","borderTopRightRadius","menuItemTxt","menuItem","textDecoration","menuIcon","minWidth","withSubmenuStyles","anchorEl","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Divider","orientation","ListItemIcon","ListItemText","avatar","paddingLeft","paddingRight","textTransform","avatarRoot","loginLink","avatarText","avatarIcon","transform","transition","withAuthBtnStyles","currentUserInfo","React","useState","setAnchorEl","small","userPlaceholder","event","currentTarget","aria-controls","aria-haspopup","Avatar","src","alt","sizes","root","smDown","fullName","menuButton","head","main","height","headImg","withMobileMenuStyles","setOpen","toggleDrawer","edge","SwipeableDrawer","onOpen","anchor","role","onKeyDown","logoImg","grid","appBar","zIndex","drawer","content","flexGrow","logo","logoutBtn","logoTxt","fontWeight","rightColumn","withHeaderStyles","AppBar","position","Container","Toolbar","disableGutters","Grid","container","item","xs","sm","flexItem","connect","getCurrentUserLogin","getIsAuth","getCurrentUserInfo","withRouter","props","logoutDialogIsOpen","setLogoutDialogIsOpen","useHistory","withSuspense","WrappedComponent","fallback","Preloader","showPreloader","getAppInited","displayed","Notifier","dispatch","useDispatch","useSelector","useSnackbar","closeSnackbar","useEffect","forEach","includes","reason","myKey","onExited","removeSnackbar","Footer","style","background","ProfileContainer","lazy","MessagesContainer","LoginContainer","UsersContainer","NotFound","App","globalError","e","this","appInitialize","addEventListener","removeEventListener","CssBaseline","toolbar","exact","render","Component","flexDirection","mixins","withSnackbar","createMuiTheme","typography","fontFamily","join","useNextVariants","h2","h3","h4","subtitle1","minHeight","secondary","success","contrastThreshold","tonalOffset","contrastText","client","ApolloClient","uri","ReactDOM","maxSnack","autoHideDuration","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","updateObjectInArray","itemId","objPropName","objNewProps","totalUsersCount","isLoading","followInProgress","searchQuery","page","inProgress","query","follow","unfollow","followed","captchaUrl","getCaptchaUrl","preloader","top","left","right","bottom","withPreloaderStyles","CircularProgress"],"mappings":"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","file":"static/js/main.6f06a25e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a470749.png\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.f4e91123.png\";","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        backgroundColor: theme.palette.common.white,\n    },\n    title: {\n        textAlign: 'center',\n        padding: '16px 24px 8px'\n    },\n    buttons: {\n        justifyContent: 'space-between',\n        padding: '8px 24px 16px'\n    },\n    btn: {\n        width: '48%'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {\n    DialogTitle,\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogProps,\n    Button, WithStyles,\n} from '@material-ui/core';\nimport withSimpleDialogStyles from \"./simpleDialogStyles\";\nimport {CheckCircleOutlineOutlinedIcon, CancelOutlinedIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    open: boolean,\n    title: string,\n    resetAction: () => void,\n    submitAction: any,\n    submitName?: string,\n    submitDisabled?: boolean,\n    rest?: any\n}\n\nconst SimpleDialogTemplate: FC<DialogProps & PropsType & WithStyles> = ({open, title, children, submitAction, resetAction, submitName, submitDisabled, classes, ...rest}) => {\n    return (\n        <Dialog\n            open={open}\n            onClose={resetAction}\n            fullWidth\n            maxWidth=\"xs\"\n            {...rest}\n            classes={{\n                paper: classes.paper\n            }}>\n            <DialogTitle className={classes.title}>{title}</DialogTitle>\n            <DialogContent>\n                {children}\n            </DialogContent>\n            <DialogActions className={classes.buttons} disableSpacing>\n                <Button\n                    onClick={submitAction}\n                    className={classes.btn}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<CheckCircleOutlineOutlinedIcon/>}\n                    {...(submitDisabled ? {disabled:submitDisabled} : {})}\n                >\n                   {submitName ? submitName : 'Confirm'}\n                </Button>\n                <Button\n                    onClick={resetAction}\n                    className={classes.btn}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<CancelOutlinedIcon/>}\n                >\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default withSimpleDialogStyles(SimpleDialogTemplate);","import React, {FC} from 'react';\nimport {Typography} from '@material-ui/core';\nimport {PostsData_posts} from \"../../../server/types/PostsData\";\nimport {OpenPostDialogType} from \"../../../redux/reducers/types\";\nimport SimpleDialogTemplate from './SimpleDialogTemplate';\n\ntype PropsType = {\n    isOpen: boolean,\n    openDialog: (isOpen: boolean,  type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n    itemToConfirm?: PostsData_posts,\n    confirmAction: any,\n}\n\nconst ConfirmDialog: FC<PropsType> = ({isOpen, openDialog, confirmAction, itemToConfirm, children}) => {\n    const handleClose = () => {\n        openDialog(false, 'confirm', null);\n    };\n\n    const confirmActionSubmit = () => {\n        itemToConfirm ? confirmAction(itemToConfirm.id) : confirmAction();\n        handleClose();\n    };\n    return (\n        <SimpleDialogTemplate\n            open={isOpen}\n            resetAction={handleClose}\n            submitAction={confirmActionSubmit}\n            aria-labelledby=\"delete-post-dialog\"\n            title=\"Are you sure?\"\n        >\n            {children ? children :\n                <Typography variant=\"body2\">\n                    {children ? children : 'If you click \\'CONFIRM\\' the element will be removed from database.'}\n                </Typography>\n            }\n\n        </SimpleDialogTemplate>\n    );\n};\n\nexport default ConfirmDialog;","import {AppStateType} from \"../redux-store\";\n\nexport const getProfile = (state: AppStateType) => {\n    return state.profileReducer.profile\n};\n\nexport const getProfileError = (state: AppStateType) => {\n    return state.profileReducer.profileError\n};\n\nexport const getProfileIsLoading = (state: AppStateType) => {\n    return state.profileReducer.profileIsLoading\n};\n\nexport const getIsFollowed = (state: AppStateType) => {\n    return state.profileReducer.isFollowed\n};\n\nexport const getStatus = (state: AppStateType) => {\n    return state.profileReducer.status\n};\n","import {AppStateType} from \"../redux-store\";\n\nexport const getMessagesList = (state: AppStateType) => {\n    return state.dialogsReducer.messages\n};\n\nexport const getDialogsList = (state: AppStateType) => {\n    return state.dialogsReducer.dialogs\n};\n\nexport const getLastUserActivityDate = (state: AppStateType) => {\n    return state.dialogsReducer.lastUserActivityDate\n};\n\nexport const getDeletedMessages = (state: AppStateType) => {\n    return state.dialogsReducer.deletedMessages\n};\n\nexport const getSpamedMessages = (state: AppStateType) => {\n    return state.dialogsReducer.spamedMessages\n};\n\nexport const getNewMessagesCount = (state: AppStateType) => {\n    return state.dialogsReducer.newMessagesCount\n};\n\nexport const getSelectedFriend = (state: AppStateType) => {\n    return state.dialogsReducer.selectedFriend\n};\n\nexport const getMessagesLoading = (state: AppStateType) => {\n    return state.dialogsReducer.messagesLoading\n};\n","const RM = {\n    home: {\n        path: '/'\n    },\n    profile: {\n        path: '/profile/:id?',\n        getPath: (id: number | null) => {\n            return id ? `/profile/${id}` : '/profile'\n        }\n    },\n    settings: {\n        path: '/settings'\n    },\n    dialogs: {\n        path: '/dialogs/:id?',\n        getPath: (id: number | null) => {\n            return id ? `/dialogs/${id}` : '/dialogs'\n        }\n    },\n    login: {\n        path: '/login'\n    },\n    users: {\n        path: '/users'\n    },\n};\nexport default RM;","import {DialogsType, MessagesType, ProfileType} from \"./types\";\n\nexport const GET_DIALOGS_ASYNC = 'dialogs/GET_DIALOGS_ASYNC';\nexport const GET_MESSAGES_ASYNC = 'dialogs/GET_MESSAGES_ASYNC';\nexport const SEND_MESSAGE_ASYNC = 'dialogs/SEND_MESSAGE_ASYNC';\nexport const START_CHAT_ASYNC = 'dialogs/START_CHAT_ASYNC';\nexport const GET_NEW_MESSAGES_COUNT_ASYNC = 'dialogs/GET_NEW_MESSAGES_COUNT_ASYNC';\nexport const DELETE_MESSAGE_ASYNC = 'dialogs/DELETE_MESSAGE_ASYNC';\nexport const RESTORE_MESSAGE_ASYNC = 'dialogs/RESTORE_MESSAGE_ASYNC';\nexport const SPAM_MESSAGE_ASYNC = 'dialogs/SPAM_MESSAGE_ASYNC';\n\nexport const SET_DIALOGS = 'dialogs/SET_DIALOGS';\nexport const SET_MESSAGES = 'dialogs/SET_MESSAGES';\nexport const SET_NEW_MESSAGES_COUNT = 'dialogs/SET_NEW_MESSAGES_COUNT';\nexport const SET_ACTIVITY_DATE = 'dialogs/SET_ACTIVITY_DATE';\nexport const ADD_MESSAGE = 'dialogs/ADD_MESSAGE';\nexport const ADD_MESSAGE_TO_DELETED = 'dialogs/ADD_MESSAGE_TO_DELETED';\nexport const RESTORE_FROM_SPAM_DELETED = 'dialogs/RESTORE_FROM_SPAM_DELETED';\nexport const ADD_MESSAGE_TO_SPAM = 'dialogs/ADD_MESSAGE_TO_SPAM';\nexport const SET_SELECTED_FRIEND = 'dialogs/SET_SELECTED_FRIEND';\nexport const SET_MESSAGES_LOADING = 'dialogs/SET_MESSAGES_LOADING';\n\nconst initialState = {\n    dialogs: [] as Array<DialogsType>,\n    messages: [] as Array<MessagesType>,\n    newMessagesCount: null as number | null,\n    lastUserActivityDate: null as string | null,\n    deletedMessages: [] as Array<string>,\n    spamedMessages: [] as Array<string>,\n    selectedFriend: null as ProfileType | null,\n    messagesLoading: false\n};\n\nexport type InitialStateType = typeof initialState;\n\ntype PayloadType = {\n    dialogs: Array<DialogsType>,\n    messages: Array<MessagesType>,\n    count: number | null,\n    userId: number,\n    message: MessagesType,\n    messageId: string,\n    selectedFriend: ProfileType,\n    messagesLoading: boolean,\n    type: ActionsTypes\n};\n\ntype ActionsTypes =\n    typeof SET_DIALOGS\n    | typeof SET_MESSAGES\n    | typeof SET_MESSAGES_LOADING\n    | typeof SET_SELECTED_FRIEND\n    | typeof ADD_MESSAGE\n    | typeof ADD_MESSAGE_TO_DELETED\n    | typeof ADD_MESSAGE_TO_SPAM\n    | typeof RESTORE_FROM_SPAM_DELETED\n    | typeof SET_NEW_MESSAGES_COUNT\n    | typeof SET_ACTIVITY_DATE;\n\nconst dialogsReducer = (\n    state = initialState,\n    {type, messages, dialogs, count, userId, message, messageId, selectedFriend, messagesLoading}: PayloadType\n): InitialStateType => {\n\n    switch (type) {\n        case SET_DIALOGS:\n            return {...state, dialogs};\n        case SET_MESSAGES:\n            return {...state, messages};\n        case SET_MESSAGES_LOADING:\n            return {...state, messagesLoading};\n        case SET_SELECTED_FRIEND:\n            return {...state, selectedFriend};\n        case ADD_MESSAGE:\n            return {...state, messages: [...state.messages, message]};\n        case ADD_MESSAGE_TO_DELETED:\n            return {...state, deletedMessages: [...state.deletedMessages, messageId]};\n        case ADD_MESSAGE_TO_SPAM:\n            return {...state, spamedMessages: [...state.spamedMessages, messageId]};\n        case RESTORE_FROM_SPAM_DELETED:\n            return {\n                ...state,\n                deletedMessages: [...state.deletedMessages].filter(id => id !== messageId),\n                spamedMessages: [...state.spamedMessages].filter(id => id !== messageId)\n            };\n        case SET_NEW_MESSAGES_COUNT:\n            return {...state, newMessagesCount: count};\n        case SET_ACTIVITY_DATE:\n            let selectedUser = [...state.dialogs].find(dialog => dialog.id === Number(userId));\n            if (selectedUser !== undefined) {\n                return {...state, lastUserActivityDate: selectedUser.lastUserActivityDate};\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n};\n\ntype SetMessagesLoadingActionType = { type: typeof SET_MESSAGES_LOADING, messagesLoading: boolean };\nexport const setMessagesLoading = (messagesLoading: boolean): SetMessagesLoadingActionType => ({type: SET_MESSAGES_LOADING, messagesLoading});\n\ntype SetDialogsActionType = { type: typeof SET_DIALOGS, dialogs: Array<DialogsType> };\nexport const setDialogs = (dialogs: Array<DialogsType>): SetDialogsActionType => ({type: SET_DIALOGS, dialogs});\n\ntype SetSelectedFriendType = { type: typeof SET_SELECTED_FRIEND, selectedFriend: ProfileType };\nexport const setSelectedFriend = (selectedFriend: ProfileType): SetSelectedFriendType => ({type: SET_SELECTED_FRIEND, selectedFriend});\n\ntype SetMessagesActionType = { type: typeof SET_MESSAGES, messages: Array<MessagesType>}\nexport const setMessages = (messages: Array<MessagesType>): SetMessagesActionType => ({type: SET_MESSAGES, messages});\n\ntype SetActivityDateActionType = { type: typeof SET_ACTIVITY_DATE, userId: number }\nexport const setActivityDate = (userId: number): SetActivityDateActionType => ({type: SET_ACTIVITY_DATE, userId});\n\nexport type SetNewMessagesCountActionType = { type: typeof SET_NEW_MESSAGES_COUNT, count: number }\nexport const setNewMessagesCount = (count: number): SetNewMessagesCountActionType => ({type: SET_NEW_MESSAGES_COUNT, count});\n\ntype AddMessageActionType = { type: typeof ADD_MESSAGE, message: MessagesType }\nexport const addMessage = (message: MessagesType): AddMessageActionType => ({type: ADD_MESSAGE, message});\n\ntype AddMessageToDeletedActionType = { type: typeof ADD_MESSAGE_TO_DELETED, messageId: string }\nexport const addMessageToDeleted = (messageId: string): AddMessageToDeletedActionType => ({type: ADD_MESSAGE_TO_DELETED, messageId});\n\ntype AddMessageToSpamActionType = { type: typeof ADD_MESSAGE_TO_SPAM, messageId: string }\nexport const addMessageToSpam = (messageId: string): AddMessageToSpamActionType => ({type: ADD_MESSAGE_TO_SPAM, messageId});\n\ntype RestoreFromSpamDeletedActionType = { type: typeof RESTORE_FROM_SPAM_DELETED, messageId: string }\nexport const restoreFromSpamDeleted = (messageId: string): RestoreFromSpamDeletedActionType => ({type: RESTORE_FROM_SPAM_DELETED, messageId});\n\nexport type StartChatType = { type: typeof START_CHAT_ASYNC, userId: number, history: any };\nexport const startChat = (userId: number, history: any): StartChatType => ({type: START_CHAT_ASYNC, userId, history});\n\nexport type SendMessageType = { type: typeof SEND_MESSAGE_ASYNC, userId: number, message: string };\nexport const sendMessage = (userId: number, message: string): SendMessageType => ({type: SEND_MESSAGE_ASYNC, userId, message});\n\nexport type GetMessagesType = { type: typeof GET_MESSAGES_ASYNC, userId: number }\nexport const getMessages = (userId: number): GetMessagesType => ({type: GET_MESSAGES_ASYNC, userId});\n\nexport type DeleteMessagesType = { type: typeof DELETE_MESSAGE_ASYNC, messageId: string }\nexport const deleteMessage = (messageId: string): DeleteMessagesType => ({type: DELETE_MESSAGE_ASYNC, messageId});\n\nexport type RestoreMessagesType = { type: typeof RESTORE_MESSAGE_ASYNC, messageId: string }\nexport const restoreMessage = (messageId: string): RestoreMessagesType => ({type: RESTORE_MESSAGE_ASYNC, messageId});\n\nexport type SpamMessagesType = { type: typeof SPAM_MESSAGE_ASYNC, messageId: string }\nexport const spamMessage = (messageId: string): SpamMessagesType => ({type: SPAM_MESSAGE_ASYNC, messageId});\n\nexport const requestNewMessagesCount = () => ({type: GET_NEW_MESSAGES_COUNT_ASYNC});\nexport const getDialogs = () => ({type: GET_DIALOGS_ASYNC});\n\nexport default dialogsReducer;","import {PhotosType, ProfileType} from \"./types\";\n\nexport const GET_STATUS_ASYNC = 'profile/GET_STATUS_ASYNC';\nexport const SET_STATUS_ASYNC = 'profile/SET_STATUS_ASYNC';\nexport const UPDATE_USER_PROFILE_ASYNC = 'profile/UPDATE_USER_PROFILE_ASYNC';\nexport const GET_USER_PROFILE_ASYNC = 'profile/GET_USER_PROFILE_ASYNC';\nexport const GET_IS_FOLLOWED_ASYNC = 'profile/GET_IS_FOLLOWED_ASYNC';\n\nexport const UPDATE_STATUS = 'profile/UPDATE_STATUS';\nexport const SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nexport const SET_USER_PROFILE_FAILED = 'profile/SET_USER_PROFILE_FAILED';\nexport const LOAD_PHOTO_ASYNC = 'profile/LOAD_PHOTO_ASYNC';\nexport const SET_PHOTO = 'profile/SET_PHOTO';\nexport const TOGGLE_PROFILE_LOADING = 'profile/TOGGLE_PROFILE_LOADING';\nexport const SET_IS_FOLLOWED = 'profile/SET_IS_FOLLOWED';\n\nconst initialState = {\n    profile: null as ProfileType | null,\n    profileError: null as string | null,\n    status: '',\n    profileIsLoading: false,\n    isFollowed: false\n};\n\nexport type InitialStateType = typeof initialState;\n\ntype ActionsType = typeof SET_USER_PROFILE\n    | typeof TOGGLE_PROFILE_LOADING\n    | typeof SET_USER_PROFILE_FAILED\n    | typeof UPDATE_STATUS\n    | typeof SET_PHOTO\n    | typeof SET_IS_FOLLOWED;\n\ntype PayloadType = InitialStateType & { photos: PhotosType, type: ActionsType }\n\nconst profileReducer = (state = initialState, {type, status, profile, photos, profileError, profileIsLoading, isFollowed}: PayloadType): InitialStateType => {\n    switch (type) {\n        case SET_USER_PROFILE:\n            return {...state, profile: profile, profileError: null};\n        case TOGGLE_PROFILE_LOADING:\n            return {...state, profileIsLoading};\n        case SET_USER_PROFILE_FAILED:\n            return {...state, profile: null, profileError};\n        case UPDATE_STATUS:\n            return {...state, status};\n        case SET_PHOTO:\n            return {...state, profile: {...state.profile, photos: photos} as ProfileType};\n        case SET_IS_FOLLOWED:\n            return {...state, isFollowed};\n        default:\n            return state;\n    }\n};\n\n\nexport type toggleProfileLoadingType = { type: typeof TOGGLE_PROFILE_LOADING, profileIsLoading: boolean }\nexport const toggleProfileLoading = (profileIsLoading: boolean): toggleProfileLoadingType => ({\n    type: TOGGLE_PROFILE_LOADING,\n    profileIsLoading\n});\n\ntype SetUserProfileActionType = { type: typeof SET_USER_PROFILE, profile: ProfileType };\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\n\ntype SetUserProfileErrorActionType = { type: typeof SET_USER_PROFILE_FAILED, profileError: string };\nexport const setUserProfileError = (profileError: string): SetUserProfileErrorActionType => ({\n    type: SET_USER_PROFILE_FAILED,\n    profileError\n});\n\nexport type SetPhotoType = { type: typeof SET_PHOTO, photos: PhotosType };\nexport const setPhoto = (photos: PhotosType): SetPhotoType => ({type: SET_PHOTO, photos});\n\ntype SetUserIsFollowedType = { type: typeof SET_IS_FOLLOWED, isFollowed: boolean };\nexport const updateIsFollowed = (isFollowed: boolean): SetUserIsFollowedType => ({type: SET_IS_FOLLOWED, isFollowed});\n\ntype UpdateStatusType = { type: typeof UPDATE_STATUS, status: string };\nexport const setStatus = (status: string): UpdateStatusType => ({type: UPDATE_STATUS, status});\n\nexport type GetStatusType = { type: typeof GET_STATUS_ASYNC, id: number };\nexport const getUserStatus = (id: number): GetStatusType => ({type: GET_STATUS_ASYNC, id});\n\nexport type SetUserStatusType = { type: typeof SET_STATUS_ASYNC, status: string };\nexport const setUserStatus = (status: string): SetUserStatusType => ({type: SET_STATUS_ASYNC, status});\n\nexport type UpdateProfileInfoType = { type: typeof UPDATE_USER_PROFILE_ASYNC, info: ProfileType, userId: number };\nexport const updateProfileInfo = (info: ProfileType, userId: number): UpdateProfileInfoType => ({\n    type: UPDATE_USER_PROFILE_ASYNC,\n    info,\n    userId\n});\n\nexport type GetUserProfileType = { type: typeof GET_USER_PROFILE_ASYNC, id: number, updateCurrentUserInfo: boolean }\nexport const getUserProfile = (id: number, updateCurrentUserInfo: boolean = false): GetUserProfileType => ({\n    type: GET_USER_PROFILE_ASYNC,\n    id,\n    updateCurrentUserInfo\n});\n\nexport type loadPhotoType = { type: typeof LOAD_PHOTO_ASYNC, photo: any };\nexport const loadPhoto = (photo: any): loadPhotoType => ({type: LOAD_PHOTO_ASYNC, photo});\n\nexport type GetIsUserFollowedType = { type: typeof GET_IS_FOLLOWED_ASYNC, id: number }\nexport const getIsUserFollowed = (id: number): GetIsUserFollowedType => ({type: GET_IS_FOLLOWED_ASYNC, id});\n\nexport default profileReducer;","export {default as MailIcon} from '@material-ui/icons/Mail';\nexport {default as PeopleAltIcon} from '@material-ui/icons/PeopleAlt';\nexport {default as HomeIcon} from '@material-ui/icons/Home';\nexport {default as SettingsIcon} from '@material-ui/icons/Settings';\nexport {default as ExitToAppIcon} from '@material-ui/icons/ExitToApp';\nexport {default as PersonRoundedIcon} from '@material-ui/icons/PersonRounded';\nexport {default as EditRoundedIcon} from '@material-ui/icons/EditRounded';\nexport {default as DeleteIcon} from '@material-ui/icons/Delete';\nexport {default as EditIcon} from '@material-ui/icons/Edit';\nexport {default as FacebookIcon} from '@material-ui/icons/Facebook';\nexport {default as LanguageIcon} from '@material-ui/icons/Language';\nexport {default as TwitterIcon} from '@material-ui/icons/Twitter';\nexport {default as InstagramIcon} from '@material-ui/icons/Instagram';\nexport {default as YouTubeIcon} from '@material-ui/icons/YouTube';\nexport {default as GitHubIcon} from '@material-ui/icons/GitHub';\nexport {default as AddAPhotoIcon} from '@material-ui/icons/AddAPhoto';\nexport {default as CheckCircleOutlineOutlinedIcon} from '@material-ui/icons/CheckCircleOutlineOutlined';\nexport {default as CancelOutlinedIcon} from '@material-ui/icons/CancelOutlined';\nexport {default as MoreVertIcon} from '@material-ui/icons/MoreVert';\nexport {default as FavoriteIcon} from '@material-ui/icons/Favorite';\nexport {default as PersonAddDisabledRoundedIcon} from '@material-ui/icons/PersonAddDisabledRounded';\nexport {default as PersonAddRoundedIcon} from '@material-ui/icons/PersonAddRounded';\nexport {default as EmailRoundedIcon} from '@material-ui/icons/EmailRounded';\nexport {default as SendIcon} from '@material-ui/icons/Send';\nexport {default as NotInterestedIcon} from '@material-ui/icons/NotInterested';\nexport {default as DoneOutlineIcon} from '@material-ui/icons/DoneOutline';\nexport {default as KeyboardBackspaceIcon} from '@material-ui/icons/KeyboardBackspace';\nexport {default as InputIcon} from '@material-ui/icons/Input';\nexport {default as ExpandMoreRoundedIcon} from '@material-ui/icons/ExpandMoreRounded';\nexport {default as AccountCircleIcon} from '@material-ui/icons/AccountCircle';\nexport {default as SearchIcon} from '@material-ui/icons/Search';\nexport {default as ListAltOutlinedIcon} from '@material-ui/icons/ListAltOutlined';\nexport {default as AssignmentOutlinedIcon} from '@material-ui/icons/AssignmentOutlined';\nexport {default as MenuIcon} from '@material-ui/icons/Menu';\nexport {default as CloseRoundedIcon} from '@material-ui/icons/CloseRounded';\nexport {default as CreateOutlinedIcon} from '@material-ui/icons/CreateOutlined';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\nimport {DialogsType, MessagesType, PhotosType, ProfileType} from \"../redux/reducers/types\";\n\nconst instance = axios.create({\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"0cd66f02-e607-46e0-aed7-5f9c57c49533\",\n        // \"API-KEY\": \"307f2912-e9c0-4353-94d4-d2c9532f00e0\"\n    }\n});\n\n\nexport enum ResultCodes {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCaptcha {\n    CaptchaRequired = 10\n}\n\ntype AuthResponseType = {\n    resultCode: ResultCodes\n    messages: Array<string>,\n    data: {\n        id: number,\n        email: string,\n        login: string\n    }\n}\ntype LoginResponseType = {\n    resultCode: ResultCodes | ResultCodeForCaptcha\n    messages: Array<string>,\n    data: {\n        userId: number,\n    }\n}\n\ntype WithoutDataResponseType = {\n    resultCode: ResultCodes\n    messages: Array<string>,\n    data: {}\n}\n\nexport const usersAPI = {\n    getUsers: (currentPage: number, pageSize: number, searchText: string) => {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${searchText}`)\n            .then(response => response.data);\n    },\n\n    isUserFollowed: (id: number) => {\n        return instance.get<string>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n    followUser: (id: number) => {\n        return instance.post<WithoutDataResponseType>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n    unfollowUser: (id: number) => {\n        return instance.delete<WithoutDataResponseType>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n};\n\n\nexport const authAPI = {\n    auth: () => {\n        return instance.get<AuthResponseType>('auth/me')\n            .then(response => response.data)\n    },\n\n    login: (email: string, password: string, rememberMe: boolean, captcha: null | string = null) => {\n        return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n\n    logout: () => {\n        return instance.delete<WithoutDataResponseType>('/auth/login')\n            .then(response => response.data)\n    }\n};\n\ntype CaptchaResponseType = {\n    url: string\n}\n\nexport const securityAPI = {\n    getCaptcha: () => {\n        return instance.get<CaptchaResponseType>('security/get-captcha-url')\n            .then(response => response.data)\n    }\n};\n\ntype LoadPhotoResponseType = {\n    data: {\n        photos: PhotosType,\n    }\n    resultCode: ResultCodes\n    messages: Array<string>,\n}\n\nexport const profileAPI = {\n    getProfile: (id: number) => {\n        return instance.get<ProfileType>(`profile/${id}`)\n            .then(response => response.data);\n    },\n\n    getStatus: (id: number) => {\n        return instance.get<string>(`profile/status/${id}`)\n            .then(response => response.data);\n    },\n\n    setStatus: (status: string) => {\n        return instance.put<WithoutDataResponseType>(`profile/status`, {status})\n            .then(response => response.data);\n    },\n\n    loadPhoto: (photoFile: any) => {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put<LoadPhotoResponseType>(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => response.data);\n    },\n\n    updateProfileInfo: (info: ProfileType) => {\n        return instance.put<WithoutDataResponseType>(`profile`, info)\n            .then(response => response.data);\n    }\n};\n\ntype SendMessageResponseType = {\n    data: {\n        message: MessagesType\n    }\n    messages: Array<string>\n    resultCode: ResultCodes\n}\n\ntype GetMessagesResponseType = {\n    items: Array<MessagesType>\n    totalCount: number\n    error: null | string\n}\n\nexport const dialogsAPI = {\n    getDialogs: () => {\n        return instance.get<Array<DialogsType>>('dialogs')\n            .then(response => response.data)\n    },\n\n    startChat: (userId: number) => {\n        return instance.put<WithoutDataResponseType>(`dialogs/${userId}`)\n            .then(response => response.data)\n    },\n\n    sendMessage: (userId: number, message: string) => {\n        return instance.post<SendMessageResponseType>(`dialogs/${userId}/messages`, {body: message})\n            .then(response => response.data)\n    },\n\n    getMessages: (userId: number) => {\n        return instance.get<GetMessagesResponseType>(`dialogs/${userId}/messages`)\n            .then(response => response.data)\n    },\n\n    spamMessage: (messageId: string) => {\n        return instance.post<WithoutDataResponseType>(`dialogs/messages/${messageId}/spam`)\n            .then(response => response.data)\n    },\n\n    deleteMessage: (messageId: string) => {\n        return instance.delete<WithoutDataResponseType>(`dialogs/messages/${messageId}`)\n            .then(response => response.data)\n    },\n\n    //from deleted and spam\n    restoreMessage: (messageId: string) => {\n        return instance.put<WithoutDataResponseType>(`dialogs/messages/${messageId}/restore`)\n            .then(response => response.data)\n    },\n\n    newMessagesCount: () => {\n        return instance.get<number>('dialogs/messages/new/count')\n            .then(response => response.data)\n    }\n};","export const INIT_APP_ASYNC = 'app/INIT_APP_ASYNC';\nexport const ENQUEUE_SNACKBAR = 'app/ENQUEUE_SNACKBAR';\nexport const CLOSE_SNACKBAR = 'app/CLOSE_SNACKBAR';\nexport const REMOVE_SNACKBAR = 'app/REMOVE_SNACKBAR';\nconst SET_INITED = 'app/SET_INITED';\n\ntype InitialStateType = {\n    inited: boolean,\n    notifications: any[],\n};\n\nconst initialState: InitialStateType = {\n    inited: false,\n    notifications: [],\n};\n\ntype ActionsTypes = typeof SET_INITED | typeof ENQUEUE_SNACKBAR | typeof CLOSE_SNACKBAR | typeof REMOVE_SNACKBAR;\n\nconst appReducer = (state = initialState, {type, key, notification, dismissAll}: { type: ActionsTypes, key: any, dismissAll: any, notification: any }): InitialStateType => {\n    switch (type) {\n        case SET_INITED:\n            return {\n                ...state,\n                inited: true\n            };\n        case ENQUEUE_SNACKBAR:\n            return {\n                ...state,\n                notifications: [\n                    ...state.notifications,\n                    {\n                        key: key,\n                        ...notification,\n                    },\n                ],\n            };\n\n        case CLOSE_SNACKBAR:\n            return {\n                ...state,\n                notifications: state.notifications.map(notification => (\n                    (dismissAll || notification.key === key)\n                        ? {...notification, dismissed: true}\n                        : {...notification}\n                )),\n            };\n\n        case REMOVE_SNACKBAR:\n            return {\n                ...state,\n                notifications: state.notifications.filter(\n                    notification => notification.key !== key,\n                ),\n            };\n        default:\n            return state;\n    }\n};\n\nexport const enqueueSnackbar = (notification: any) => {\n    const key = notification.options && notification.options.key;\n    return {\n        type: ENQUEUE_SNACKBAR,\n        notification: {\n            ...notification,\n            key: key || new Date().getTime() + Math.random(),\n        },\n    };\n};\n\nexport const removeSnackbar = (key: any) => ({type: REMOVE_SNACKBAR, key});\n\ntype SetAppIsInitedActionType = { type: typeof SET_INITED }\nexport const setAppIsInited = (): SetAppIsInitedActionType => ({type: SET_INITED});\n\nexport const appInitialize = () => ({type: INIT_APP_ASYNC});\n\nexport default appReducer;","import {takeEvery, put, call, select} from 'redux-saga/effects';\nimport {authAPI, dialogsAPI, profileAPI, ResultCodeForCaptcha, ResultCodes, securityAPI, usersAPI} from \"../../api/api\";\nimport {\n    GET_USER_PROFILE_ASYNC,\n    LOAD_PHOTO_ASYNC,\n    GET_IS_FOLLOWED_ASYNC,\n    setUserProfile,\n    setUserProfileError,\n    toggleProfileLoading,\n    setPhoto,\n    getIsUserFollowed,\n    updateIsFollowed,\n    GET_STATUS_ASYNC,\n    setStatus,\n    GetStatusType,\n    SET_STATUS_ASYNC,\n    SetUserStatusType,\n    UPDATE_USER_PROFILE_ASYNC,\n    getUserProfile, UpdateProfileInfoType, GetUserProfileType, loadPhotoType\n} from \"../reducers/profile-reducer\";\nimport {\n    AUTH_ASYNC,\n    LOGIN_ASYNC,\n    LOGOUT_ASYNC,\n    LoginType,\n    LogoutType,\n    setCaptchaUrl,\n    setCurrentUserInfo,\n    setUserData\n} from \"../reducers/auth-reducer\";\nimport {enqueueSnackbar, INIT_APP_ASYNC, setAppIsInited} from \"../reducers/app-reducer\";\nimport {getCurrentUserId} from \"../reducers/auth-selectors\";\nimport {getProfile} from \"../reducers/profile-selectors\";\nimport {\n    FOLLOW_ASYNC,\n    REQUEST_USERS_ASYNC,\n    UNFOLLOW_ASYNC,\n    acceptFollow,\n    acceptUnfollow,\n    setPage, setSearchText, setUsers, setUsersTotalCount,\n    toggleFollowInProgress, toggleIsLoading,\n} from \"../reducers/users-reducer\";\nimport {ProfileType} from \"../reducers/types\";\nimport {reset, stopSubmit} from \"redux-form\";\nimport {\n    DELETE_MESSAGE_ASYNC,\n    DeleteMessagesType,\n    GET_DIALOGS_ASYNC,\n    GET_MESSAGES_ASYNC, GET_NEW_MESSAGES_COUNT_ASYNC,\n    RESTORE_MESSAGE_ASYNC,\n    SEND_MESSAGE_ASYNC,\n    SPAM_MESSAGE_ASYNC,\n    START_CHAT_ASYNC,\n    GetMessagesType,\n    RestoreMessagesType,\n    SendMessageType,\n    SpamMessagesType,\n    StartChatType,\n    requestNewMessagesCount,\n    addMessage,\n    addMessageToDeleted,\n    addMessageToSpam,\n    restoreFromSpamDeleted,\n    setActivityDate,\n    setDialogs,\n    setMessages,\n    setMessagesLoading, setNewMessagesCount,\n    setSelectedFriend,\n} from \"../reducers/dialogs-reducer\";\n\n//PROFILE\nfunction* getUserProfileAsync({id, updateCurrentUserInfo}: GetUserProfileType) {\n    try {\n        const state = yield select();\n        const previousId = getProfile(state)?.userId;\n\n        if (previousId !== id) {\n            yield put(toggleProfileLoading(true));\n        }\n        const data = yield call(getProfileById, id);\n        if (updateCurrentUserInfo) {\n            yield put(setCurrentUserInfo(data));\n        }\n        yield put(setUserProfile(data));\n        if (previousId !== id) {\n            yield put(toggleProfileLoading(false));\n        }\n    } catch (e) {\n        yield put(setUserProfileError(e.message));\n    }\n}\n\nfunction* updateProfileInfoAsync({info, userId}: UpdateProfileInfoType) {\n    try {\n        const {resultCode, messages} =  yield call(updateProfile, info);\n        if (resultCode === ResultCodes.Success) {\n            yield put(getUserProfile(userId, true));\n            yield put(enqueueSnackbar({message: 'Profile successfully updated!', options: {variant: 'success'}}))\n        } else {\n            yield put(stopSubmit(\"settings\", {_error: messages}));\n        }\n    } catch (e) {\n        yield put(setUserProfileError(e.message));\n    }\n}\n\nfunction* getStatusAsync({id}: GetStatusType) {\n    try {\n        const data = yield call(getUserStatus, id);\n        yield put(setStatus(data));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* setUserStatusAsync({status}: SetUserStatusType) {\n    try {\n        const {resultCode} = yield call(setUserStatus, status);\n        if (resultCode === ResultCodes.Success) {\n            yield put(setStatus(status));\n            yield put(enqueueSnackbar({message: 'Status updated!', options: {variant: 'success'}}))\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* loadPhotoAsync({photo}: loadPhotoType) {\n    try {\n        const {data, resultCode, messages} = yield call(loadPhoto, photo);\n        if (resultCode === ResultCodes.Success) {\n            const state = yield select();\n            yield put(setPhoto(data.photos));\n            yield put({type: GET_USER_PROFILE_ASYNC, id: getCurrentUserId(state), updateCurrentUserInfo: true});\n        } else {\n            yield put(enqueueSnackbar({message: messages, options: {variant: 'error'}}))\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//USERS\ntype setUserIsFollowedType = { type: typeof GET_IS_FOLLOWED_ASYNC, id: number };\nfunction* setUserIsFollowedAsync({id}: setUserIsFollowedType) {\n    try {\n        const isFollowed = yield call(getUserIsFollowed, id);\n        yield put(updateIsFollowed(isFollowed));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype RequestUsersType = { type: typeof REQUEST_USERS_ASYNC, currentPage: number, pageSize: number, searchText: string }\nfunction* requestUsersAsync({currentPage, pageSize, searchText}: RequestUsersType) {\n    try {\n        yield put(setSearchText(searchText));\n        yield put(setPage(currentPage));\n        yield put(toggleIsLoading(true));\n        const {items, totalCount} = yield call(requestUsers, currentPage, pageSize, searchText);\n        yield put(toggleIsLoading(false));\n        yield put(setUsers(items));\n        yield put(setUsersTotalCount(totalCount));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype FollowActionType = { type: typeof FOLLOW_ASYNC | typeof UNFOLLOW_ASYNC, action: 'follow' | 'unfollow', id: number, updateProfileFollow: boolean };\nfunction* toggleFollowAsync({action, id, updateProfileFollow}: FollowActionType) {\n    try {\n        yield put(toggleFollowInProgress(true, id));\n        const {resultCode, messages} = action === 'follow' ? yield call(followUser, id) : yield call(unfollowUser, id);\n        if (resultCode === ResultCodes.Success) {\n            action === 'follow' ? yield put(acceptFollow(id)) : yield put(acceptUnfollow(id));\n            if (updateProfileFollow) {\n                yield put(getIsUserFollowed(id));\n            }\n        } else {\n            yield put(enqueueSnackbar({message: messages, options: {variant: 'error'}}))\n        }\n        yield put(toggleFollowInProgress(false, id));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//DIALOGS\nfunction* getDialogsAsync() {\n    try {\n        const response = yield call(requestDialogs);\n        yield put(setDialogs(response));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* startChatAsync({userId, history}: StartChatType) {\n    try {\n        const {resultCode} = yield call(startChat, userId);\n        if (resultCode === ResultCodes.Success) {\n            history.push(`/dialogs/${userId}`)\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* sendMessageAsync({userId, message}: SendMessageType) {\n    try {\n        const {data, resultCode} =  yield call(sendMessage, userId, message);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessage(data.message));\n            yield put(reset('message'));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* deleteMessagesAsync({messageId}: DeleteMessagesType) {\n    try {\n        const {resultCode} =  yield call(deleteMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessageToDeleted(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* restoreMessagesAsync({messageId}: RestoreMessagesType) {\n    try {\n        const {resultCode} =  yield call(restoreMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(restoreFromSpamDeleted(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* spamMessagesAsync({messageId}: SpamMessagesType) {\n    try {\n        const {resultCode} =  yield call(spamMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessageToSpam(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* getMessagesAsync({userId}: GetMessagesType) {\n    try {\n        yield put(setMessagesLoading(true));\n        const {error, items} = yield call(getMessages, userId);\n        const data = yield call(getProfileById, userId);\n        if (!error) {\n            yield put(setMessages(items));\n            yield put(setActivityDate(userId));\n            yield put(setSelectedFriend(data));\n        }\n        yield put(setMessagesLoading(false));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* getNewMessagesCountAsync() {\n    try {\n        const data = yield call(newMessagesCount);\n        yield put(setNewMessagesCount(data));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//AUTH\nfunction* authenticateAsync() {\n    try {\n        const {data, resultCode} = yield call(authenticate);\n        if (resultCode === ResultCodes.Success) {\n            const {id, login, email} = data;\n            yield put(setUserData(id, login, email, true));\n            yield put(getUserProfile(id, true));\n            yield put(requestNewMessagesCount());\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* loginAsync({email, password, rememberMe, captcha}: LoginType) {\n    try {\n        const {resultCode, messages} = yield call(login, email, password, rememberMe, captcha);\n        if (resultCode === ResultCodes.Success) {\n            yield put({type: AUTH_ASYNC});\n        } else {\n            if (resultCode === ResultCodeForCaptcha.CaptchaRequired) {\n                const {url} = yield call(getCaptcha);\n                yield put(setCaptchaUrl(url));\n            }\n            yield put(stopSubmit(\"login\", {_error: messages}));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* logoutAsync({history}: LogoutType) {\n    try {\n        const {resultCode} = yield call(logout);\n        if (resultCode === ResultCodes.Success) {\n            yield put(setUserData(null, null, null, false));\n            history.push('/login')\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* appInitAsync() {\n    try {\n        yield put({type: AUTH_ASYNC});\n        yield put(setAppIsInited());\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n\n// API REQUESTS\nasync function authenticate() {\n    return await authAPI.auth();\n}\n\nasync function login(email: string, password: string, rememberMe: boolean, captcha: string | null) {\n    return await authAPI.login(email, password, rememberMe, captcha)\n}\n\nasync function logout() {\n    return await authAPI.logout();\n}\n\nasync function getCaptcha() {\n    return await securityAPI.getCaptcha();\n}\n\nasync function getUserStatus(id: number) {\n    return await profileAPI.getStatus(id);\n}\n\nasync function loadPhoto(photo: any) {\n    return await profileAPI.loadPhoto(photo);\n}\n\nasync function setUserStatus(status: string) {\n    return await profileAPI.setStatus(status)\n}\n\nasync function getProfileById(id: number) {\n    return await profileAPI.getProfile(id);\n}\n\nasync function updateProfile(info: ProfileType) {\n    return await profileAPI.updateProfileInfo(info);\n}\n\nasync function requestUsers(currentPage: number, pageSize: number, searchText: string) {\n    return await usersAPI.getUsers(currentPage, pageSize, searchText)\n}\n\nasync function getUserIsFollowed(id: number) {\n    return await usersAPI.isUserFollowed(id);\n}\n\nasync function followUser(id: number) {\n    return await usersAPI.followUser(id)\n}\n\nasync function unfollowUser(id: number) {\n    return await usersAPI.unfollowUser(id)\n}\n\nasync function requestDialogs() {\n    return await dialogsAPI.getDialogs();\n}\n\nasync function startChat(userId: number) {\n    return await dialogsAPI.startChat(userId);\n}\n\nasync function sendMessage(userId: number, message: string) {\n    return await dialogsAPI.sendMessage(userId, message);\n}\n\nasync function getMessages(userId: number) {\n    return await dialogsAPI.getMessages(userId);\n}\n\nasync function deleteMessage(messageId: string) {\n    return await dialogsAPI.deleteMessage(messageId)\n}\n\nasync function restoreMessage(messageId: string) {\n    return await dialogsAPI.restoreMessage(messageId)\n}\nasync function spamMessage(messageId: string) {\n    return await dialogsAPI.spamMessage(messageId);\n}\nasync function newMessagesCount() {\n    return await dialogsAPI.newMessagesCount()\n}\n\n//SAGA\nfunction* mySaga() {\n    yield takeEvery(INIT_APP_ASYNC, appInitAsync);\n    yield takeEvery(AUTH_ASYNC, authenticateAsync);\n    yield takeEvery(LOGIN_ASYNC, loginAsync);\n    yield takeEvery(LOGOUT_ASYNC, logoutAsync);\n    yield takeEvery(GET_USER_PROFILE_ASYNC, getUserProfileAsync);\n    yield takeEvery(LOAD_PHOTO_ASYNC, loadPhotoAsync);\n    yield takeEvery(GET_IS_FOLLOWED_ASYNC, setUserIsFollowedAsync);\n    yield takeEvery(FOLLOW_ASYNC, toggleFollowAsync);\n    yield takeEvery(UNFOLLOW_ASYNC, toggleFollowAsync);\n    yield takeEvery(REQUEST_USERS_ASYNC, requestUsersAsync);\n    yield takeEvery(GET_STATUS_ASYNC, getStatusAsync);\n    yield takeEvery(SET_STATUS_ASYNC, setUserStatusAsync);\n    yield takeEvery(UPDATE_USER_PROFILE_ASYNC, updateProfileInfoAsync);\n    yield takeEvery(GET_DIALOGS_ASYNC, getDialogsAsync);\n    yield takeEvery(START_CHAT_ASYNC, startChatAsync);\n    yield takeEvery(SEND_MESSAGE_ASYNC, sendMessageAsync);\n    yield takeEvery(GET_MESSAGES_ASYNC, getMessagesAsync);\n    yield takeEvery(DELETE_MESSAGE_ASYNC, deleteMessagesAsync);\n    yield takeEvery(RESTORE_MESSAGE_ASYNC, restoreMessagesAsync);\n    yield takeEvery(SPAM_MESSAGE_ASYNC, spamMessagesAsync);\n    yield takeEvery(GET_NEW_MESSAGES_COUNT_ASYNC, getNewMessagesCountAsync);\n}\n\nexport default mySaga;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profile-reducer\";\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\nimport authReducer from \"./reducers/auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./reducers/app-reducer\";\nimport usersReducer from \"./reducers/users-reducer\";\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from \"./sagas/saga\";\n\nconst rootReducer = combineReducers({\n    profileReducer,\n    dialogsReducer,\n    usersReducer,\n    authReducer,\n    app: appReducer,\n    form: formReducer\n});\n\ntype RootReducerType = typeof rootReducer;\nexport type AppStateType =  ReturnType<RootReducerType>;\nconst sagaMiddleware = createSagaMiddleware();\n\n// @ts-ignore\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(\n        thunkMiddleware,\n        sagaMiddleware\n    )\n));\n\nsagaMiddleware.run(mySaga);\n\nexport default store;","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    list: {\n        padding: 0,\n        [theme.breakpoints.up('sm')]: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginRight: 20,\n        },\n    },\n    listItem: {\n        padding: '0 8px',\n        width: 'auto',\n        [theme.breakpoints.down('xs')]: {\n            borderBottom: `1px solid ${theme.palette.grey[200]}`,\n        },\n    },\n    link: {\n        color: theme.palette.text.primary,\n        alignItems: 'center',\n        display: 'flex',\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            padding: '8px 0',\n            color: theme.palette.grey[600]\n        },\n    },\n    icon: {\n        padding: theme.spacing(1),\n        color: theme.palette.common.white,\n        lineHeight: 0,\n        [theme.breakpoints.down('xs')]: {\n            color: theme.palette.grey[500],\n            marginRight: 5\n        },\n    },\n    name: {\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '1.2rem'\n        },\n    },\n    activeLink: {\n        pointerEvents: 'none',\n        \"& .MuiIconButton-root\": {\n            backgroundColor: theme.palette.primary.light\n        },\n        '& $icon, & $name': {\n            [theme.breakpoints.down('xs')]: {\n                color: theme.palette.primary.light,\n            },\n        }\n    },\n    tooltip: {\n        backgroundColor: theme.palette.primary.light,\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport RM from \"../../RouterManager\";\nimport classNames from \"classnames\";\nimport {MailIcon, PeopleAltIcon, HomeIcon, SettingsIcon, ExitToAppIcon} from \"../Icons/MeterialIcons\";\nimport {\n    List,\n    ListItem,\n    Link,\n    IconButton,\n    Tooltip,\n    Badge, Hidden, Typography, WithStyles,\n} from \"@material-ui/core\";\nimport withNavbarStyles from \"./navbarStyles\";\n\ntype PropsType = {\n    newMessagesCount: null | number,\n    userId: number | null,\n    openLogoutDialog: (open: boolean) => void,\n    isAuth: boolean\n};\n\nconst Navbar: FC<PropsType & WithStyles> = ({newMessagesCount, userId, openLogoutDialog, isAuth, classes}) => {\n    const LINKS = [\n        {\n            id: 1,\n            text: 'Profile',\n            url: RM.profile.getPath(userId),\n            icon: <HomeIcon/>\n        }, {\n            id: 2,\n            text: 'Dialogs',\n            url: RM.dialogs.getPath(null),\n            icon: <MailIcon/>\n        }, {\n            id: 3,\n            text: 'Users',\n            url: RM.users.path,\n            icon: <PeopleAltIcon/>\n        }\n    ];\n\n    const MOBILE_LINKS = [\n        ...LINKS,\n        {\n            id: 4,\n            text: 'Settings',\n            url: RM.settings.path,\n            icon: <SettingsIcon/>\n        },\n        {\n            id: 5,\n            text: 'Logout',\n            url: null,\n            icon: <ExitToAppIcon/>\n        }\n    ];\n\n    let areNewMessages = newMessagesCount && newMessagesCount > 0;\n\n    return (\n        <List className={classes.list}>\n            <Hidden xsDown>\n                {LINKS.map(({id, text, url, icon}) => (\n                    <ListItem key={id} className={classes.listItem}>\n                        <Link component={NavLink} to={url} activeClassName={classes.activeLink} className={classes.link}\n                              underline=\"none\" color=\"textSecondary\">\n                            <Tooltip title={text} aria-label={text} classes={{tooltip: classes.tooltip}}>\n                                <IconButton aria-label={text} className={classes.icon}>\n                                    {url === RM.dialogs.getPath(null) && areNewMessages ?\n                                        <Badge badgeContent={newMessagesCount} max={99} color=\"secondary\">\n                                            {icon}\n                                        </Badge> : icon\n                                    }\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    </ListItem>\n                ))}\n            </Hidden>\n\n            <Hidden smUp>\n                {MOBILE_LINKS.map(({id, text, url, icon}) => {\n                        if (id === 5 && !isAuth) return null;\n                        return (\n                            <ListItem key={id} className={classes.listItem}>\n                                <Link component={url ? NavLink : 'span'}\n                                      {...url ? {\n                                          to: url,\n                                          activeClassName: classes.activeLink\n                                      } : ''}\n                                      {...id === 5 ? {onClick: () => openLogoutDialog(true)} : ''}\n                                      className={classes.link}\n                                      underline=\"none\"\n                                      color=\"textSecondary\"\n                                >\n                                    <Typography variant=\"body1\" component=\"span\"\n                                                className={classNames('MuiListItemIcon-root', classes.icon)}>\n                                        {url === RM.dialogs.getPath(null) && areNewMessages ?\n                                            <Badge color=\"secondary\" variant=\"dot\">\n                                                {icon}\n                                            </Badge> : icon\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"body1\" component=\"span\" className={classes.name}>\n                                        {text}\n                                    </Typography>\n                                </Link>\n                            </ListItem>\n                        )\n                    }\n                )}\n            </Hidden>\n        </List>\n    )\n};\n\n\nexport default withNavbarStyles(Navbar);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    list: {\n        padding: 0,\n        backgroundColor: theme.palette.common.white\n    },\n    menuItemTxt: {\n        lineHeight: 1\n    },\n    menuItem: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            color:  theme.palette.common.white,\n\n            '& .MuiLink-root, & .MuiListItemIcon-root': {\n                color:  theme.palette.common.white,\n                textDecoration: 'none'\n            }\n        }\n    },\n    menuIcon: {\n      minWidth: 35\n    },\n    link: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            color:  theme.palette.common.white,\n\n            '& .MuiLink-root, & .MuiListItemIcon-root': {\n                color:  theme.palette.common.white,\n                textDecoration: 'none'\n            }\n        }\n    }\n}));\n\n\nexport default withStyles(styles, {withTheme: true})","import React, {FC} from 'react';\nimport {\n    Divider,\n    ListItemIcon,\n    ListItemText,\n    Menu,\n    MenuItem,\n    Typography,\n    WithStyles\n} from '@material-ui/core';\nimport {NavLink} from \"react-router-dom\";\nimport withSubmenuStyles from './submenuStyles'\nimport RM from \"../../RouterManager\";\nimport classNames from \"classnames\";\nimport {EditRoundedIcon, PersonRoundedIcon, ExitToAppIcon} from \"../Icons/MeterialIcons\";\n\ntype PropsType = {\n    userId: number | null,\n    handleClose: () => void\n    anchorEl: null | HTMLElement,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst Submenu: FC<PropsType & WithStyles> = ({userId, handleClose, anchorEl, classes, openLogoutDialog}) => {\n    return (\n        <Menu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            elevation={10}\n            getContentAnchorEl={null}\n            classes={{\n                paper: classes.paper,\n                list: classes.list\n            }}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <MenuItem component={NavLink} to={RM.profile.getPath(userId)} className={classes.menuItem} onClick={() => handleClose()}>\n                    <span className={classNames('MuiListItemIcon-root', classes.menuIcon)}>\n                        <PersonRoundedIcon fontSize=\"small\"/>\n                    </span>\n                <Typography variant=\"body1\" component=\"span\" className={classes.menuItemTxt}>Profile</Typography>\n            </MenuItem>\n            <Divider orientation=\"horizontal\" light={true}/>\n            <MenuItem component={NavLink} to={RM.settings.path} className={classes.menuItem} onClick={() => handleClose()}>\n                     <span className={classNames('MuiListItemIcon-root', classes.menuIcon)}>\n                        <EditRoundedIcon fontSize=\"small\"/>\n                    </span>\n                <Typography variant=\"body1\" component=\"span\" className={classes.menuItemTxt}>Edit Profile</Typography>\n            </MenuItem>\n            <Divider orientation=\"horizontal\" light={true}/>\n\n            <MenuItem className={classes.menuItem} onClick={() => {openLogoutDialog(true); handleClose()}}>\n                <ListItemIcon className={classes.menuIcon}>\n                    <ExitToAppIcon fontSize=\"small\"/>\n                </ListItemIcon>\n                <ListItemText classes={{primary: classes.menuItemTxt}} primary=\"Logout\"/>\n            </MenuItem>\n        </Menu>\n    )\n};\n\nexport default withSubmenuStyles(Submenu);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    avatar: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 20,\n        paddingRight: 20,\n        textTransform: 'none',\n    },\n    avatarRoot: {\n        marginRight: 10\n    },\n    loginLink: {\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: theme.palette.common.white\n    },\n\n    avatarText: {\n        padding: '0 5px'\n    },\n\n    avatarIcon: {\n        '&.active': {\n            transform: 'rotate(180deg)',\n            transition: '0.1s linear'\n        }\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {Avatar, Button, Hidden, Link, Typography, WithStyles} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport userPlaceholder from \"../../assets/images/user-placeholder.png\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport Submenu from \"./Submenu\";\nimport RM from \"../../RouterManager\";\nimport withAuthBtnStyles from \"./authBtnStyles\";\nimport {ExpandMoreRoundedIcon} from \"../Icons/MeterialIcons\";\n\ntype PropsType = {\n    login: string | null,\n    isAuth: boolean,\n    currentUserInfo: ProfileType | null\n    userId: number | null,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst AuthBtn: FC<PropsType & WithStyles> = ({isAuth, login, currentUserInfo, userId, openLogoutDialog, classes}) => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const avatar = currentUserInfo  && currentUserInfo.photos.small ? currentUserInfo.photos.small : userPlaceholder;\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {\n                isAuth &&\n                <>\n                    <Button\n                        className={classes.avatar}\n                        color=\"inherit\"\n                        onClick={handleClick}\n                        aria-controls=\"customized-menu\"\n                        aria-haspopup=\"true\"\n                    >\n                        <Avatar src={avatar} alt={login ? login : 'avatar'} sizes=\"40\" classes={{root: classes.avatarRoot}}/>\n                        <Hidden smDown>\n                            <Typography variant=\"body2\" className={classes.avatarText}>\n                                {currentUserInfo && currentUserInfo.fullName ? currentUserInfo.fullName : login}\n                            </Typography>\n                        </Hidden>\n                        <ExpandMoreRoundedIcon fontSize=\"small\" className={`${classes.avatarIcon} ${anchorEl ? 'active': ''}`}/>\n                    </Button>\n                    <Submenu openLogoutDialog={openLogoutDialog} userId={userId} handleClose={handleClose} anchorEl={anchorEl}/>\n                </>\n            }\n\n            {\n                !isAuth &&\n                <Link component={NavLink} to={RM.login.path} className={classes.loginLink}>\n                    Login\n                </Link>\n            }\n\n        </>\n    )\n};\n\nexport default withAuthBtnStyles(AuthBtn);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    list: {\n        width: 250,\n    },\n    menuButton: {\n        marginRight: 0,\n        padding: theme.spacing(1)\n    },\n    paper: {\n        backgroundColor: theme.palette.common.white\n    },\n    head: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        lineHeight: 1,\n        backgroundColor: theme.palette.primary.main,\n        height: 49,\n    },\n    headImg: {\n        height: 30\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {SwipeableDrawer, IconButton, WithStyles} from '@material-ui/core';\nimport {NavLink} from \"react-router-dom\";\nimport RM from \"../../RouterManager\";\nimport logoImg from \"../../assets/images/logo.png\";\nimport withMobileMenuStyles from \"./mobileMenuStyles\";\nimport {CloseRoundedIcon, MenuIcon} from \"../Icons/MeterialIcons\";\n\nconst MobileMenu:FC<WithStyles> = ({children, classes}) => {\n    const [open, setOpen] = React.useState(false);\n\n    const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent,) => {\n        if (event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return;\n        }\n        setOpen(open)\n    };\n\n    return (\n        <>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer(true)}\n                edge=\"end\"\n                className={classes.menuButton}\n            >\n                {open ? <CloseRoundedIcon fontSize=\"large\"/> : <MenuIcon fontSize=\"large\"/>}\n            </IconButton>\n\n            <SwipeableDrawer\n                open={open}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n                anchor=\"left\"\n                classes={{\n                    paper: classes.paper\n                }}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                >\n                    <NavLink to={RM.home.path} className={classes.head}>\n                        <img src={logoImg} alt=\"\" className={classes.headImg}/>\n                    </NavLink>\n                    {children}\n                </div>\n            </SwipeableDrawer>\n        </>\n    )\n};\n\nexport default withMobileMenuStyles(MobileMenu);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    grid: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.white,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    logo: {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        lineHeight: 1\n    },\n    logoImg: {\n        height: 30,\n        [theme.breakpoints.up('sm')]: {\n            height: 35,\n        },\n    },\n    logoutBtn: {\n        padding: theme.spacing(1),\n    },\n    logoTxt: {\n        padding: theme.spacing(1),\n        color: theme.palette.common.white,\n        fontWeight: 300\n    },\n    rightColumn: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        height: '100%'\n    },\n    avatar: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 20,\n        paddingRight: 20,\n        textTransform: 'none'\n    },\n    avatarText: {\n        padding: '0 5px'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport logoImg from '../../assets/images/logo.png';\nimport {\n    AppBar,\n    Toolbar,\n    Grid,\n    Container,\n    Divider, Hidden, WithStyles\n} from '@material-ui/core';\nimport Navbar from \"./Navbar\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport AuthBtn from \"./AuthBtn\";\nimport RM from \"../../RouterManager\";\nimport MobileMenu from \"./MobileMenu\";\nimport withHeaderStyles from \"./headerStyles\";\n\ntype PropsType = {\n    userId: number | null,\n    login: string | null,\n    isAuth: boolean,\n    newMessagesCount: number | null\n    currentUserInfo: ProfileType | null,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst Header: FC<PropsType & WithStyles> = ({userId, login, isAuth, newMessagesCount, currentUserInfo, openLogoutDialog, classes}) => {\n    return (\n        <AppBar position=\"fixed\" component=\"header\" className={classes.appBar}>\n            <Container maxWidth=\"lg\">\n                <Toolbar variant=\"dense\" disableGutters>\n                    <Grid container className={classes.grid} spacing={0}>\n                        <Grid item xs={6} sm={4}>\n                            <div className={classes.logo}>\n                                <NavLink to={RM.home.path} >\n                                        <img src={logoImg} alt=\"\" className={classes.logoImg}/>\n                                </NavLink>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6} sm={8}>\n                            <div className={classes.rightColumn}>\n                                <Hidden xsDown>\n                                    <Navbar\n                                        isAuth={isAuth}\n                                        newMessagesCount={newMessagesCount}\n                                        userId={currentUserInfo ? currentUserInfo.userId : null}\n                                        openLogoutDialog={openLogoutDialog}\n                                      />\n                                    <Divider\n                                        orientation=\"vertical\"\n                                        flexItem\n                                        light={true}/>\n                                    <AuthBtn login={login} openLogoutDialog={openLogoutDialog} isAuth={isAuth}\n                                             currentUserInfo={currentUserInfo} userId={userId}/>\n                                    <Divider orientation=\"vertical\" flexItem light={true}/>\n                                </Hidden>\n\n                                <Hidden smUp>\n                                    <MobileMenu>\n                                        <Navbar\n                                            isAuth={isAuth}\n                                            openLogoutDialog={openLogoutDialog}\n                                            newMessagesCount={newMessagesCount}\n                                            userId={currentUserInfo ? currentUserInfo.userId : null}\n                                        />\n                                    </MobileMenu>\n                                </Hidden>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    )\n};\n\nexport default withHeaderStyles(Header);","import React, {FC, useState} from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/reducers/auth-reducer\";\nimport {compose} from \"redux\";\nimport {withRouter, RouteComponentProps, useHistory} from \"react-router-dom\";\nimport {\n    getCurrentUserInfo,\n    getCurrentUserId,\n    getCurrentUserLogin,\n    getIsAuth\n} from \"../../redux/reducers/auth-selectors\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getNewMessagesCount} from \"../../redux/reducers/dialogs-selectors\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport ConfirmDialog from \"../Profile/Dialogs/ConfirmDialog\";\n\ntype MapStatePropsType = {\n    userId: number | null,\n    login: string | null,\n    isAuth: boolean,\n    newMessagesCount: number | null,\n    currentUserInfo: ProfileType | null\n}\n\ntype MapDispatchPropsType = {\n    logout: (history: any) => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps\n\nconst HeaderContainer: FC<PropsType> = ({logout, ...props}) => {\n    const [logoutDialogIsOpen, setLogoutDialogIsOpen] = useState(false);\n    let history = useHistory();\n\n    const openLogoutDialog = (open: boolean) => {\n        setLogoutDialogIsOpen(open);\n    };\n\n     const logoutAction = () => {\n        logout(history);\n    };\n\n    return (\n        <>\n            <Header {...props} openLogoutDialog={openLogoutDialog}/>\n            <ConfirmDialog\n                isOpen={logoutDialogIsOpen}\n                openDialog={openLogoutDialog}\n                confirmAction={logoutAction}>\n                {true}\n            </ConfirmDialog>\n        </>\n    )\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        userId: getCurrentUserId(state),\n        login: getCurrentUserLogin(state),\n        isAuth: getIsAuth(state),\n        newMessagesCount: getNewMessagesCount(state),\n        currentUserInfo: getCurrentUserInfo(state)\n    }\n};\n\nexport default compose(\n    connect<MapStatePropsType, MapDispatchPropsType, RouteComponentProps, AppStateType>(mapStateToProps, {logout}),\n    withRouter\n)(HeaderContainer) as FC;\n","import React, {Suspense} from \"react\";\nimport Preloader from \"../Preloader/Preloader\";\n\nconst withSuspense = (WrappedComponent) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader showPreloader={true}/>}>\n               <WrappedComponent {...props}/>\n           </Suspense>\n        )\n    }\n};\n\nexport default withSuspense;","import {AppStateType} from \"../redux-store\";\n\nexport const getAppInited = (state: AppStateType) => {\n    return state.app.inited\n};","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useSnackbar} from 'notistack';\nimport {removeSnackbar} from \"../../redux/reducers/app-reducer\";\n\nlet displayed = [];\n\nconst Notifier = () => {\n    const dispatch = useDispatch();\n    const notifications = useSelector(store => store.app.notifications || []);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    const storeDisplayed = (id) => {\n        displayed = [...displayed, id];\n    };\n\n    const removeDisplayed = (id) => {\n        displayed = [...displayed.filter(key => id !== key)];\n    };\n\n    React.useEffect(() => {\n        notifications.forEach(({key, message, options = {}, dismissed = false}) => {\n            if (dismissed) {\n                // dismiss snackbar using notistack\n                closeSnackbar(key);\n                return;\n            }\n\n            // do nothing if snackbar is already displayed\n            if (displayed.includes(key)) return;\n\n            // display snackbar using notistack\n            enqueueSnackbar(message, {\n                key,\n                ...options,\n                onClose: (event, reason, myKey) => {\n                    if (options.onClose) {\n                        options.onClose(event, reason, myKey);\n                    }\n                },\n                onExited: (event, myKey) => {\n                    // removen this snackbar from redux store\n                    dispatch(removeSnackbar(myKey));\n                    removeDisplayed(myKey);\n                },\n            });\n\n            // keep track of snackbars that we've displayed\n            storeDisplayed(key);\n        });\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n    return null;\n};\n\nexport default Notifier;\n","import React from 'react';\nimport {Container} from \"@material-ui/core\";\n\nconst Footer = () => {\n  return <footer className=\"footer\" style={{background: '#3d4977'}}>\n    <Container maxWidth=\"lg\">\n      <div style={{color: '#fff', padding: '5px 0', fontSize: 12}}>\n            Copyright © 2020 Andreeva Alina\n      </div>\n    </Container>\n  </footer>\n};\n\nexport default Footer;\n","import React from 'react';\nimport {Switch, Route, withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {appInitialize} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport withSuspense from \"./components/HOC/Suspense\";\nimport {getAppInited} from \"./redux/reducers/app-selectors\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {createStyles, StyleRules, Theme, WithStyles, withStyles, CssBaseline, Container} from \"@material-ui/core\";\nimport Notifier from \"./components/Notifier/Notifier\";\nimport {withSnackbar, WithSnackbarProps} from 'notistack';\nimport RM from \"./RouterManager\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst ProfileContainer = React.lazy(() => import(/* webpackChunkName: \"ProfileContainer\" */\"./components/Profile/ProfileContainer\"));\nconst MessagesContainer = React.lazy(() => import(/* webpackChunkName: \"MessagesContainer\" */\"./components/Messages/MessagesContainer\"));\nconst LoginContainer = React.lazy(() => import(/* webpackChunkName: \"LoginContainer\" */\"./components/Login/LoginContainer\"));\nconst UsersContainer = React.lazy(() => import(/* webpackChunkName: \"UsersContainer\" */\"./components/Users/UsersContainer\"));\nconst NotFound = React.lazy(() => import(/* webpackChunkName: \"Music\" */\"./components/NotFound/NotFound\"));\n\ntype MapStatePropsType = {\n    inited: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitialize: () => void\n}\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n\n    toolbar: theme.mixins.toolbar,\n});\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & WithStyles<typeof styles> & WithSnackbarProps;\n\nclass App extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.appInitialize();\n        window.addEventListener(\"unhandledrejection\", this.globalError);\n    }\n\n    globalError = (e: any) => {\n        this.props.enqueueSnackbar(`${e.reason}`, {variant: 'error'});\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.globalError);\n    }\n\n    render() {\n        const {classes} = this.props;\n        if (!this.props.inited) {\n            return <Preloader showPreloader={!this.props.inited}/>\n        }\n        return (\n            <>\n                <Notifier/>\n                <CssBaseline/>\n                <HeaderContainer/>\n                <Container maxWidth=\"lg\" component=\"main\" className={classes.content}>\n                    <div className={classes.toolbar}/>\n                    <Switch>\n                        <Route exact path={RM.home.path} render={() => <Redirect to={RM.profile.getPath(null)}/>}/>\n                        <Route path={RM.profile.path} component={withSuspense(ProfileContainer)}/>\n                        <Route path={RM.settings.path} component={withSuspense(ProfileContainer)}/>\n                        <Route path={RM.dialogs.path} component={withSuspense(MessagesContainer)}/>\n                        <Route path={RM.login.path} component={withSuspense(LoginContainer)}/>\n                        <Route path={RM.users.path} component={withSuspense(UsersContainer)}/>\n                        <Route path=\"*\" component={withSuspense(NotFound)}/>\n                    </Switch>\n                </Container>\n                <Footer/>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        inited: getAppInited(state)\n    }\n};\n\nexport default compose(\n    withStyles(styles),\n    withSnackbar,\n    connect<MapStatePropsType, MapDispatchPropsType, WithSnackbarProps, AppStateType>(mapStateToProps, {appInitialize}),\n    withRouter\n)(App) as React.ComponentType<any>;\n\n\n\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        useNextVariants: true,\n        color: '#333',\n        h2: {\n            fontSize: '3rem'\n        },\n        h3: {\n            fontSize: '2.5rem'\n        },\n        h4: {\n            fontSize: '1.75rem'\n        },\n        subtitle1: {\n            fontWeight: 500\n        }\n\n    },\n    mixins: {\n        toolbar: {\n            minHeight: 48\n        }\n    },\n    palette: {\n        type: 'light',\n        primary: {\n            main: '#3d4977'\n        },\n        secondary: {\n            main: '#ab003c',\n        },\n        grey: grey,\n        success: {\n            main: '#00B294',\n        },\n        background: '#f5f5f5',\n        error: {\n            main: '#E81123'\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        contrastText: '#fff',\n        text: {\n            primary: '#333',\n        },\n\n    },\n});","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from './theme'\nimport {ApolloProvider as ApolloHooksProvider} from \"@apollo/react-hooks\";\nimport {SnackbarProvider} from 'notistack';\n\nconst client = new ApolloClient({\n    uri: '/graphql'\n});\n\n\nReactDOM.render(\n    <Router>\n        <ApolloProvider client={client}>\n            <ApolloHooksProvider client={client}>\n                <Provider store={store}>\n                    <SnackbarProvider maxSnack={3} anchorOrigin={{vertical: 'bottom', horizontal: 'right',}} autoHideDuration={2000}>\n                        <ThemeProvider theme={theme}>\n                            <App/>\n                        </ThemeProvider>\n                    </SnackbarProvider>\n                </Provider>\n            </ApolloHooksProvider>\n        </ApolloProvider>\n    </Router>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export const updateObjectInArray = (items: Array<any>, itemId: number,  objPropName: string, objNewProps: any ) => {\n    return items.map(item => {\n        if (item[objPropName] === itemId) {\n            return {...item, ...objNewProps}\n        }\n        return item;\n    })\n};","import {updateObjectInArray} from \"../../utils/helpers\";\nimport {UserType} from \"./types\";\n\nexport const FOLLOW_ASYNC = 'users/FOLLOW_ASYNC';\nexport const UNFOLLOW_ASYNC = 'users/UNFOLLOW_ASYNC';\nexport const REQUEST_USERS_ASYNC = 'users/REQUEST_USERS_ASYNC';\n\nexport const FOLLOW_ACCEPT = 'users/FOLLOW_ACCEPT';\nexport const UNFOLLOW_ACCEPT = 'users/UNFOLLOW_ACCEPT';\nexport const SET_USERS = 'users/SET_USERS';\nexport const SET_PAGE = 'users/SET_PAGE';\nexport const SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\nexport const TOGGLE_IS_LOADING = 'users/TOGGLE_IS_LOADING';\nexport const TOGGLE_FOLLOW_IN_PROGRESS = 'users/TOGGLE_FOLLOW_IN_PROGRESS';\nexport const SET_SEARCH_TEXT = 'users/SET_SEARCH_TEXT';\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 12 as number,\n    totalUsersCount: 20 as number,\n    currentPage: 1 as number,\n    isLoading: true,\n    followInProgress: [] as Array<number>,\n    searchQuery: null as string | null,\n};\n\ntype PayloadType = {\n    type: ActionsTypes,\n    userId: number,\n    users: Array<UserType>,\n    page: number,\n    count: number,\n    isLoading: boolean,\n    inProgress: boolean,\n    query: string,\n};\n\ntype ActionsTypes =\n    typeof FOLLOW_ACCEPT\n    | typeof UNFOLLOW_ACCEPT\n    | typeof SET_USERS\n    | typeof SET_PAGE\n    | typeof SET_TOTAL_COUNT\n    | typeof TOGGLE_IS_LOADING\n    | typeof SET_SEARCH_TEXT\n    | typeof TOGGLE_FOLLOW_IN_PROGRESS;\n\nexport type InitialStateType = typeof initialState;\n\nconst usersReducer = (state = initialState, {type, userId, users, page, count, isLoading, inProgress, query}: PayloadType): InitialStateType => {\n    switch (type) {\n        case FOLLOW_ACCEPT:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, userId, \"id\", {followed: true})\n            };\n        case UNFOLLOW_ACCEPT:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, userId, \"id\", {followed: false})\n            };\n        case SET_USERS:\n            return {...state, users};\n        case SET_PAGE:\n            return {...state, currentPage: page};\n        case SET_TOTAL_COUNT:\n            return {...state, totalUsersCount: count};\n        case TOGGLE_IS_LOADING:\n            return {...state, isLoading};\n        case SET_SEARCH_TEXT:\n            return {...state, searchQuery: query};\n        case TOGGLE_FOLLOW_IN_PROGRESS:\n            return {\n                ...state,\n                followInProgress: inProgress ?\n                    [...state.followInProgress, userId] :\n                    state.followInProgress.filter(id => id !== userId)\n            };\n        default:\n            return state;\n    }\n};\n\ntype SetUsersActionType = { type: typeof SET_USERS, users: Array<UserType> };\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users});\n\ntype SetPageActionType = { type: typeof SET_PAGE, page: number };\nexport const setPage = (page: number): SetPageActionType => ({type: SET_PAGE, page});\n\ntype SetUsersTotalCountActionType = { type: typeof SET_TOTAL_COUNT, count: number };\nexport const setUsersTotalCount = (count: number): SetUsersTotalCountActionType => ({type: SET_TOTAL_COUNT, count});\n\ntype ToggleIsLoadingActionType = { type: typeof TOGGLE_IS_LOADING, isLoading: boolean };\nexport const toggleIsLoading = (isLoading: boolean): ToggleIsLoadingActionType => ({\n    type: TOGGLE_IS_LOADING,\n    isLoading\n});\n\ntype ToggleFollowInProgressActionType = { type: typeof TOGGLE_FOLLOW_IN_PROGRESS, inProgress: boolean, userId: number };\nexport const toggleFollowInProgress = (inProgress: boolean, userId: number): ToggleFollowInProgressActionType => ({\n    type: TOGGLE_FOLLOW_IN_PROGRESS,\n    inProgress,\n    userId\n});\n\ntype SetSearchTextActionType = { type: typeof SET_SEARCH_TEXT, query: string }\nexport const setSearchText = (query: string): SetSearchTextActionType => ({type: SET_SEARCH_TEXT, query});\n\nexport const requestUsers = (currentPage: number, pageSize: number, searchText: string) => ({\n    type: REQUEST_USERS_ASYNC,\n    currentPage,\n    pageSize,\n    searchText\n});\n\nexport const follow = (id: number, updateProfileFollow: boolean) => ({\n    type: FOLLOW_ASYNC,\n    action: 'follow',\n    id,\n    updateProfileFollow\n});\n\nexport const unfollow = (id: number, updateProfileFollow: boolean) => ({\n    type: UNFOLLOW_ASYNC,\n    action: 'unfollow',\n    id,\n    updateProfileFollow\n});\n\ntype AcceptFollowActionType = { type: typeof FOLLOW_ACCEPT, userId: number };\nexport const acceptFollow = (userId: number): AcceptFollowActionType => ({type: FOLLOW_ACCEPT, userId});\n\ntype AcceptUnfollowActionType = { type: typeof UNFOLLOW_ACCEPT, userId: number };\nexport const acceptUnfollow = (userId: number): AcceptUnfollowActionType => ({type: UNFOLLOW_ACCEPT, userId});\n\nexport default usersReducer;","import {ProfileType} from \"./types\";\n\nexport const AUTH_ASYNC = 'auth/AUTH_ASYNC';\nexport const LOGIN_ASYNC = 'auth/LOGIN_ASYNC';\nexport const LOGOUT_ASYNC = 'auth/LOGOUT_ASYNC';\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\nconst SET_CURRENT_USER_INFO = 'auth/SET_CURRENT_USER_INFO';\n\nconst initialState = {\n    userId: null as number | null,\n    login: null as string | null,\n    email: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null,\n    currentUserInfo: null as ProfileType | null\n};\ntype InitialStateType = typeof initialState\ntype ActionsTypes = typeof SET_USER_DATA | typeof SET_CURRENT_USER_INFO | typeof SET_CAPTCHA_URL;\ntype PayloadType = {\n    type: ActionsTypes,\n    userId: number | null,\n    login: string | null,\n    email: string | null,\n    isAuth: boolean\n    captchaUrl: string,\n    currentUserInfo: ProfileType | null\n}\n\nconst authReducer = (\n    state = initialState,\n    {type, userId, login, email, isAuth, captchaUrl, currentUserInfo}: PayloadType\n): InitialStateType => {\n    switch (type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                userId,\n                login,\n                email,\n                isAuth,\n            };\n        case SET_CURRENT_USER_INFO:\n            return {\n                ...state,\n                currentUserInfo\n            };\n        case SET_CAPTCHA_URL:\n            return {...state, captchaUrl};\n        default:\n            return state;\n    }\n};\n\ntype SetUserDataActionType = { type: typeof SET_USER_DATA, userId: number | null, login: string | null, email: string | null, isAuth: boolean, }\nexport const setUserData = (userId: number | null, login: string | null, email: string | null, isAuth: boolean): SetUserDataActionType => ({\n    type: SET_USER_DATA,\n    userId,\n    login,\n    email,\n    isAuth,\n});\n\ntype SetCaptchaUrlActionType = { type: typeof SET_CAPTCHA_URL, captchaUrl: string, }\nexport const setCaptchaUrl = (captchaUrl: string): SetCaptchaUrlActionType => ({\n    type: SET_CAPTCHA_URL,\n    captchaUrl\n});\n\ntype AuthenticateType = { type: typeof AUTH_ASYNC }\nexport const authenticate = (): AuthenticateType => ({type: AUTH_ASYNC});\n\ntype SetCurrentUserInfoType = { type: typeof SET_CURRENT_USER_INFO, currentUserInfo: ProfileType | null }\nexport const setCurrentUserInfo = (currentUserInfo: ProfileType | null): SetCurrentUserInfoType => ({\n    type: SET_CURRENT_USER_INFO,\n    currentUserInfo\n});\n\nexport type LoginType = { type: typeof LOGIN_ASYNC, email: string, password: string, rememberMe: boolean, captcha: string | null }\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null): LoginType => ({\n    type: LOGIN_ASYNC,\n    email,\n    password,\n    rememberMe,\n    captcha\n});\n\nexport type LogoutType = { type: typeof LOGOUT_ASYNC, history: any }\nexport const logout = (history: any): LogoutType => ({type: LOGOUT_ASYNC, history});\n\nexport default authReducer;","import {AppStateType} from \"../redux-store\";\n\nexport const getCurrentUserId = (state: AppStateType) => {\n    return state.authReducer.userId\n};\n\nexport const getCurrentUserLogin = (state: AppStateType) => {\n    return state.authReducer.login\n};\n\nexport const getIsAuth = (state: AppStateType) => {\n    return state.authReducer.isAuth\n};\n\nexport const getCurrentUserInfo = (state: AppStateType) => {\n    return state.authReducer.currentUserInfo\n};\n\nexport const getCaptchaUrl = (state: AppStateType) => {\n    return state.authReducer.captchaUrl\n};","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    preloader: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(255,255,255, 0.7)\",\n        zIndex: 2,\n        bottom: 0\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC, ReactNode} from 'react';\nimport {CircularProgress, WithStyles} from \"@material-ui/core\";\nimport withPreloaderStyles from \"./preloaderStyles\";\n\ntype PropsType = {\n    showPreloader: boolean,\n    children?: ReactNode\n}\n\nconst Preloader: FC<PropsType & WithStyles> = ({showPreloader, classes}) => {\n    if (!showPreloader) {\n        return null\n    }\n    return (\n        <div className={classes.preloader}>\n            {showPreloader &&\n                <CircularProgress color=\"secondary\"/>\n            }\n        </div>\n    )\n};\n\nexport default withPreloaderStyles(Preloader);"],"sourceRoot":""}