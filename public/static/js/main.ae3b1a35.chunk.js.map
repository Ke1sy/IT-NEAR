{"version":3,"sources":["assets/images/logo.png","assets/images/user-placeholder.png","components/Profile/Dialogs/simpleDialogStyles.ts","components/Profile/Dialogs/SimpleDialogTemplate.tsx","components/Profile/Dialogs/ConfirmDialog.tsx","redux/reducers/profile-selectors.ts","redux/reducers/dialogs-selectors.ts","redux/reducers/dialogs-reducer.ts","components/Icons/MeterialIcons.ts","RouterManager.ts","redux/reducers/profile-reducer.ts","serviceWorker.js","api/api.ts","redux/reducers/app-reducer.ts","redux/sagas/saga.ts","redux/redux-store.ts","components/Header/navbarStyles.ts","components/Header/Navbar.tsx","components/Header/submenuStyles.ts","components/Header/Submenu.tsx","components/Header/authBtnStyles.ts","components/Header/AuthBtn.tsx","components/Header/mobileMenuStyles.ts","components/Header/MobileMenu.tsx","components/Header/headerStyles.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/HOC/Suspense.js","redux/reducers/app-selectors.ts","components/Notifier/Notifier.js","components/Footer/Footer.tsx","appStyles.ts","App.tsx","theme.js","index.tsx","utils/helpers.ts","redux/reducers/users-reducer.ts","redux/reducers/auth-reducer.ts","redux/reducers/auth-selectors.ts","components/Preloader/preloaderStyles.ts","components/Preloader/Preloader.tsx"],"names":["module","exports","styles","createStyles","theme","paper","backgroundColor","palette","common","white","title","textAlign","padding","buttons","justifyContent","btn","width","withStyles","withTheme","withSimpleDialogStyles","open","children","submitAction","resetAction","submitName","submitDisabled","classes","rest","Dialog","onClose","fullWidth","maxWidth","DialogTitle","className","DialogContent","DialogActions","disableSpacing","Button","onClick","color","variant","startIcon","disabled","ConfirmDialog","isOpen","openDialog","confirmAction","itemToConfirm","handleClose","id","aria-labelledby","getProfile","state","profileReducer","profile","getProfileError","profileError","getProfileIsLoading","profileIsLoading","getIsFollowed","isFollowed","getStatus","status","getMessagesList","dialogsReducer","messages","getDialogsList","dialogs","getLastUserActivityDate","lastUserActivityDate","getDeletedMessages","deletedMessages","getSpamedMessages","spamedMessages","getNewMessagesCount","newMessagesCount","getSelectedFriend","selectedFriend","getMessagesLoading","messagesLoading","GET_DIALOGS_ASYNC","GET_MESSAGES_ASYNC","SEND_MESSAGE_ASYNC","START_CHAT_ASYNC","GET_NEW_MESSAGES_COUNT_ASYNC","DELETE_MESSAGE_ASYNC","RESTORE_MESSAGE_ASYNC","SPAM_MESSAGE_ASYNC","initialState","dialogActions","setMessagesLoading","type","setDialogs","setSelectedFriend","setMessages","setActivityDate","userId","setNewMessagesCount","count","addMessage","message","addMessageToDeleted","messageId","addMessageToSpam","restoreFromSpamDeleted","startChat","history","sendMessage","getMessages","deleteMessage","restoreMessage","spamMessage","getDialogs","requestNewMessagesCount","action","filter","selectedUser","find","dialog","Number","undefined","ProfileContainer","React","lazy","RM","home","path","exact","redirect","isAuth","component","getPath","settings","login","users","notFound","GET_STATUS_ASYNC","SET_STATUS_ASYNC","UPDATE_USER_PROFILE_ASYNC","GET_USER_PROFILE_ASYNC","GET_IS_FOLLOWED_ASYNC","LOAD_PHOTO_ASYNC","profileActions","toggleProfileLoading","setUserProfile","setUserProfileError","setPhoto","photos","updateIsFollowed","setStatus","getUserStatus","setUserStatus","updateProfileInfo","info","getUserProfile","updateCurrentUserInfo","loadPhoto","photo","getIsUserFollowed","Boolean","window","location","hostname","match","ResultCodes","ResultCodeForCaptcha","inited","notifications","appActions","enqueueSnackbar","notification","key","options","Date","getTime","Math","random","removeSnackbar","setAppIsInited","appInitialize","appReducer","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","searchText","get","then","response","data","post","delete","authAPI","email","password","rememberMe","captcha","securityAPI","profileAPI","put","photoFile","formData","FormData","append","dialogsAPI","body","getUserProfileAsync","updateProfileInfoAsync","getStatusAsync","setUserStatusAsync","loadPhotoAsync","setUserIsFollowedAsync","requestUsersAsync","toggleFollowAsync","getDialogsAsync","startChatAsync","sendMessageAsync","deleteMessagesAsync","restoreMessagesAsync","spamMessagesAsync","getMessagesAsync","getNewMessagesCountAsync","authenticateAsync","loginAsync","logoutAsync","appInitAsync","mySaga","setUserData","authActions","setCaptchaUrl","setCurrentUserInfo","acceptFollow","usersActions","acceptUnfollow","setPage","setSearchText","setUsers","setUsersTotalCount","toggleFollowInProgress","toggleIsLoading","select","previousId","call","getProfileById","updateProfile","resultCode","Success","stopSubmit","_error","getCurrentUserId","getUserIsFollowed","requestUsers","items","totalCount","updateProfileFollow","followUser","unfollowUser","requestDialogs","push","reset","error","authenticate","AUTH_ASYNC","CaptchaRequired","getCaptcha","url","logout","a","takeEvery","LOGIN_ASYNC","LOGOUT_ASYNC","FOLLOW_ASYNC","UNFOLLOW_ASYNC","REQUEST_USERS_ASYNC","rootReducer","combineReducers","usersReducer","authReducer","app","form","formReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","run","list","breakpoints","up","display","marginRight","listItem","down","borderBottom","grey","link","text","primary","alignItems","icon","spacing","lineHeight","name","fontSize","activeLink","pointerEvents","light","tooltip","withNavbarStyles","openLogoutDialog","LINKS","MOBILE_LINKS","areNewMessages","List","Hidden","xsDown","map","ListItem","Link","NavLink","to","activeClassName","underline","Tooltip","aria-label","IconButton","Badge","badgeContent","max","smUp","Typography","classNames","borderTopLeftRadius","borderTopRightRadius","menuItemTxt","menuItem","textDecoration","menuIcon","minWidth","withSubmenuStyles","anchorEl","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Divider","orientation","ListItemIcon","ListItemText","avatar","paddingLeft","paddingRight","textTransform","avatarRoot","loginLink","avatarText","avatarIcon","transform","transition","withAuthBtnStyles","currentUserInfo","useState","setAnchorEl","small","userPlaceholder","event","currentTarget","aria-controls","aria-haspopup","Avatar","src","alt","sizes","root","smDown","fullName","menuButton","head","main","height","headImg","withMobileMenuStyles","setOpen","toggleDrawer","edge","SwipeableDrawer","onOpen","anchor","role","onKeyDown","logoImg","grid","appBar","zIndex","drawer","content","flexGrow","logo","logoutBtn","logoTxt","fontWeight","rightColumn","withHeaderStyles","AppBar","position","Container","Toolbar","disableGutters","Grid","container","item","xs","sm","flexItem","connect","getCurrentUserLogin","getIsAuth","getCurrentUserInfo","withRouter","props","logoutDialogIsOpen","setLogoutDialogIsOpen","useHistory","withSuspense","WrappedComponent","fallback","Preloader","showPreloader","getAppInited","displayed","Notifier","dispatch","useDispatch","useSelector","useSnackbar","closeSnackbar","useEffect","forEach","dismissed","includes","reason","myKey","onExited","Footer","style","background","flexDirection","toolbar","mixins","App","globalError","e","this","addEventListener","removeEventListener","CssBaseline","Object","entries","route","Cmp","redirectPath","RouteComponent","Component","withAppStyles","withSnackbar","createMuiTheme","typography","fontFamily","join","useNextVariants","h2","h3","h4","subtitle1","minHeight","secondary","success","contrastThreshold","tonalOffset","contrastText","client","ApolloClient","uri","ReactDOM","render","maxSnack","autoHideDuration","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","updateObjectInArray","itemId","objPropName","objNewProps","totalUsersCount","isLoading","followInProgress","searchQuery","page","inProgress","query","follow","unfollow","followed","captchaUrl","getCaptchaUrl","preloader","top","left","right","bottom","withPreloaderStyles","CircularProgress"],"mappings":"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","file":"static/js/main.ae3b1a35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0a470749.png\";","module.exports = __webpack_public_path__ + \"static/media/user-placeholder.f4e91123.png\";","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        backgroundColor: theme.palette.common.white,\n    },\n    title: {\n        textAlign: 'center',\n        padding: '16px 24px 8px'\n    },\n    buttons: {\n        justifyContent: 'space-between',\n        padding: '8px 24px 16px'\n    },\n    btn: {\n        width: '48%'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {\n    DialogTitle,\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogProps,\n    Button, WithStyles,\n} from '@material-ui/core';\nimport withSimpleDialogStyles from \"./simpleDialogStyles\";\nimport {CheckCircleOutlineOutlinedIcon, CancelOutlinedIcon} from \"../../Icons/MeterialIcons\";\n\ntype PropsType = {\n    open: boolean,\n    title: string,\n    resetAction: () => void,\n    submitAction: any,\n    submitName?: string,\n    submitDisabled?: boolean,\n    rest?: any\n}\n\nconst SimpleDialogTemplate: FC<DialogProps & PropsType & WithStyles> = ({open, title, children, submitAction, resetAction, submitName, submitDisabled, classes, ...rest}) => {\n    return (\n        <Dialog\n            open={open}\n            onClose={resetAction}\n            fullWidth\n            maxWidth=\"xs\"\n            {...rest}\n            classes={{\n                paper: classes.paper\n            }}>\n            <DialogTitle className={classes.title}>{title}</DialogTitle>\n            <DialogContent>\n                {children}\n            </DialogContent>\n            <DialogActions className={classes.buttons} disableSpacing>\n                <Button\n                    onClick={submitAction}\n                    className={classes.btn}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<CheckCircleOutlineOutlinedIcon/>}\n                    {...(submitDisabled ? {disabled:submitDisabled} : {})}\n                >\n                   {submitName ? submitName : 'Confirm'}\n                </Button>\n                <Button\n                    onClick={resetAction}\n                    className={classes.btn}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<CancelOutlinedIcon/>}\n                >\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default withSimpleDialogStyles(SimpleDialogTemplate);","import React, {FC} from 'react';\nimport {Typography} from '@material-ui/core';\nimport {PostsData_posts} from \"../../../server/types/PostsData\";\nimport {OpenPostDialogType} from \"../../../redux/reducers/types\";\nimport SimpleDialogTemplate from './SimpleDialogTemplate';\n\ntype PropsType = {\n    isOpen: boolean,\n    openDialog: (isOpen: boolean,  type: OpenPostDialogType, selectedItem: PostsData_posts | null) => void,\n    itemToConfirm?: PostsData_posts,\n    confirmAction: any,\n}\n\nconst ConfirmDialog: FC<PropsType> = ({isOpen, openDialog, confirmAction, itemToConfirm, children}) => {\n    const handleClose = () => {\n        openDialog(false, 'confirm', null);\n    };\n\n    const confirmActionSubmit = () => {\n        itemToConfirm ? confirmAction(itemToConfirm.id) : confirmAction();\n        handleClose();\n    };\n    return (\n        <SimpleDialogTemplate\n            open={isOpen}\n            resetAction={handleClose}\n            submitAction={confirmActionSubmit}\n            aria-labelledby=\"delete-post-dialog\"\n            title=\"Are you sure?\"\n        >\n            {children ? children :\n                <Typography variant=\"body2\">\n                    {children ? children : 'If you click \\'CONFIRM\\' the element will be removed from database.'}\n                </Typography>\n            }\n\n        </SimpleDialogTemplate>\n    );\n};\n\nexport default ConfirmDialog;","import {AppStateType} from \"../redux-store\";\n\nexport const getProfile = (state: AppStateType) => {\n    return state.profileReducer.profile\n};\n\nexport const getProfileError = (state: AppStateType) => {\n    return state.profileReducer.profileError\n};\n\nexport const getProfileIsLoading = (state: AppStateType) => {\n    return state.profileReducer.profileIsLoading\n};\n\nexport const getIsFollowed = (state: AppStateType) => {\n    return state.profileReducer.isFollowed\n};\n\nexport const getStatus = (state: AppStateType) => {\n    return state.profileReducer.status\n};\n","import {AppStateType} from \"../redux-store\";\n\nexport const getMessagesList = (state: AppStateType) => {\n    return state.dialogsReducer.messages\n};\n\nexport const getDialogsList = (state: AppStateType) => {\n    return state.dialogsReducer.dialogs\n};\n\nexport const getLastUserActivityDate = (state: AppStateType) => {\n    return state.dialogsReducer.lastUserActivityDate\n};\n\nexport const getDeletedMessages = (state: AppStateType) => {\n    return state.dialogsReducer.deletedMessages\n};\n\nexport const getSpamedMessages = (state: AppStateType) => {\n    return state.dialogsReducer.spamedMessages\n};\n\nexport const getNewMessagesCount = (state: AppStateType) => {\n    return state.dialogsReducer.newMessagesCount\n};\n\nexport const getSelectedFriend = (state: AppStateType) => {\n    return state.dialogsReducer.selectedFriend\n};\n\nexport const getMessagesLoading = (state: AppStateType) => {\n    return state.dialogsReducer.messagesLoading\n};\n","import {DialogsType, MessagesType, ProfileType} from \"./types\";\nimport {InferActionsTypes} from \"../redux-store\";\n\nexport const GET_DIALOGS_ASYNC = 'dialogs/GET_DIALOGS_ASYNC';\nexport const GET_MESSAGES_ASYNC = 'dialogs/GET_MESSAGES_ASYNC';\nexport const SEND_MESSAGE_ASYNC = 'dialogs/SEND_MESSAGE_ASYNC';\nexport const START_CHAT_ASYNC = 'dialogs/START_CHAT_ASYNC';\nexport const GET_NEW_MESSAGES_COUNT_ASYNC = 'dialogs/GET_NEW_MESSAGES_COUNT_ASYNC';\nexport const DELETE_MESSAGE_ASYNC = 'dialogs/DELETE_MESSAGE_ASYNC';\nexport const RESTORE_MESSAGE_ASYNC = 'dialogs/RESTORE_MESSAGE_ASYNC';\nexport const SPAM_MESSAGE_ASYNC = 'dialogs/SPAM_MESSAGE_ASYNC';\n\nexport const SET_DIALOGS = 'dialogs/SET_DIALOGS';\nexport const SET_MESSAGES = 'dialogs/SET_MESSAGES';\nexport const SET_NEW_MESSAGES_COUNT = 'dialogs/SET_NEW_MESSAGES_COUNT';\nexport const SET_ACTIVITY_DATE = 'dialogs/SET_ACTIVITY_DATE';\nexport const ADD_MESSAGE = 'dialogs/ADD_MESSAGE';\nexport const ADD_MESSAGE_TO_DELETED = 'dialogs/ADD_MESSAGE_TO_DELETED';\nexport const RESTORE_FROM_SPAM_DELETED = 'dialogs/RESTORE_FROM_SPAM_DELETED';\nexport const ADD_MESSAGE_TO_SPAM = 'dialogs/ADD_MESSAGE_TO_SPAM';\nexport const SET_SELECTED_FRIEND = 'dialogs/SET_SELECTED_FRIEND';\nexport const SET_MESSAGES_LOADING = 'dialogs/SET_MESSAGES_LOADING';\n\nconst initialState = {\n    dialogs: [] as Array<DialogsType>,\n    messages: [] as Array<MessagesType>,\n    newMessagesCount: null as number | null,\n    lastUserActivityDate: null as string | null,\n    deletedMessages: [] as Array<string>,\n    spamedMessages: [] as Array<string>,\n    selectedFriend: null as ProfileType | null,\n    messagesLoading: false\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst dialogsReducer = (\n    state = initialState,\n    action: DialogsActionsTypes\n): InitialStateType => {\n\n    switch (action.type) {\n        case SET_DIALOGS:\n            return {...state, dialogs: action.dialogs};\n        case SET_MESSAGES:\n            return {...state, messages: action.messages};\n        case SET_MESSAGES_LOADING:\n            return {...state, messagesLoading: action.messagesLoading};\n        case SET_SELECTED_FRIEND:\n            return {...state, selectedFriend: action.selectedFriend};\n        case ADD_MESSAGE:\n            return {...state, messages: [...state.messages, action.message]};\n        case ADD_MESSAGE_TO_DELETED:\n            return {...state, deletedMessages: [...state.deletedMessages, action.messageId]};\n        case ADD_MESSAGE_TO_SPAM:\n            return {...state, spamedMessages: [...state.spamedMessages, action.messageId]};\n        case RESTORE_FROM_SPAM_DELETED:\n            return {\n                ...state,\n                deletedMessages: [...state.deletedMessages].filter(id => id !== action.messageId),\n                spamedMessages: [...state.spamedMessages].filter(id => id !== action.messageId)\n            };\n        case SET_NEW_MESSAGES_COUNT:\n            return {...state, newMessagesCount: action.count};\n        case SET_ACTIVITY_DATE:\n            let selectedUser = [...state.dialogs].find(dialog => dialog.id === Number(action.userId));\n            if (selectedUser !== undefined) {\n                return {...state, lastUserActivityDate: selectedUser.lastUserActivityDate};\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n};\n\nexport type DialogsActionsTypes = InferActionsTypes<typeof dialogActions>;\nexport const dialogActions = {\n    setMessagesLoading: (messagesLoading: boolean) => ({type: SET_MESSAGES_LOADING, messagesLoading} as const),\n    setDialogs: (dialogs: Array<DialogsType>) => ({type: SET_DIALOGS, dialogs} as const),\n    setSelectedFriend: (selectedFriend: ProfileType) => ({type: SET_SELECTED_FRIEND, selectedFriend} as const),\n    setMessages: (messages: Array<MessagesType>) => ({type: SET_MESSAGES, messages} as const),\n    setActivityDate: (userId: number) => ({type: SET_ACTIVITY_DATE, userId} as const),\n    setNewMessagesCount: (count: number) => ({type: SET_NEW_MESSAGES_COUNT, count} as const),\n    addMessage: (message: MessagesType) => ({type: ADD_MESSAGE, message} as const),\n    addMessageToDeleted: (messageId: string) => ({type: ADD_MESSAGE_TO_DELETED, messageId} as const),\n    addMessageToSpam: (messageId: string) => ({type: ADD_MESSAGE_TO_SPAM, messageId} as const),\n    restoreFromSpamDeleted: (messageId: string) => ({type: RESTORE_FROM_SPAM_DELETED, messageId} as const),\n    startChat: (userId: number, history: any) => ({type: START_CHAT_ASYNC, userId, history} as const),\n    sendMessage: (userId: number, message: string) => ({type: SEND_MESSAGE_ASYNC, userId, message} as const),\n    getMessages: (userId: number) => ({type: GET_MESSAGES_ASYNC, userId} as const),\n    deleteMessage: (messageId: string) => ({type: DELETE_MESSAGE_ASYNC, messageId} as const),\n    restoreMessage: (messageId: string) => ({type: RESTORE_MESSAGE_ASYNC, messageId} as const),\n    spamMessage: (messageId: string) => ({type: SPAM_MESSAGE_ASYNC, messageId} as const),\n    getDialogs: () => ({type: GET_DIALOGS_ASYNC} as const),\n    requestNewMessagesCount: () => ({type: GET_NEW_MESSAGES_COUNT_ASYNC} as const),\n};\n\nexport default dialogsReducer;","export {default as MailIcon} from '@material-ui/icons/Mail';\nexport {default as PeopleAltIcon} from '@material-ui/icons/PeopleAlt';\nexport {default as HomeIcon} from '@material-ui/icons/Home';\nexport {default as SettingsIcon} from '@material-ui/icons/Settings';\nexport {default as ExitToAppIcon} from '@material-ui/icons/ExitToApp';\nexport {default as PersonRoundedIcon} from '@material-ui/icons/PersonRounded';\nexport {default as EditRoundedIcon} from '@material-ui/icons/EditRounded';\nexport {default as DeleteIcon} from '@material-ui/icons/Delete';\nexport {default as EditIcon} from '@material-ui/icons/Edit';\nexport {default as FacebookIcon} from '@material-ui/icons/Facebook';\nexport {default as LanguageIcon} from '@material-ui/icons/Language';\nexport {default as TwitterIcon} from '@material-ui/icons/Twitter';\nexport {default as InstagramIcon} from '@material-ui/icons/Instagram';\nexport {default as YouTubeIcon} from '@material-ui/icons/YouTube';\nexport {default as GitHubIcon} from '@material-ui/icons/GitHub';\nexport {default as AddAPhotoIcon} from '@material-ui/icons/AddAPhoto';\nexport {default as CheckCircleOutlineOutlinedIcon} from '@material-ui/icons/CheckCircleOutlineOutlined';\nexport {default as CancelOutlinedIcon} from '@material-ui/icons/CancelOutlined';\nexport {default as MoreVertIcon} from '@material-ui/icons/MoreVert';\nexport {default as FavoriteIcon} from '@material-ui/icons/Favorite';\nexport {default as PersonAddDisabledRoundedIcon} from '@material-ui/icons/PersonAddDisabledRounded';\nexport {default as PersonAddRoundedIcon} from '@material-ui/icons/PersonAddRounded';\nexport {default as EmailRoundedIcon} from '@material-ui/icons/EmailRounded';\nexport {default as SendIcon} from '@material-ui/icons/Send';\nexport {default as NotInterestedIcon} from '@material-ui/icons/NotInterested';\nexport {default as DoneOutlineIcon} from '@material-ui/icons/DoneOutline';\nexport {default as KeyboardBackspaceIcon} from '@material-ui/icons/KeyboardBackspace';\nexport {default as InputIcon} from '@material-ui/icons/Input';\nexport {default as ExpandMoreRoundedIcon} from '@material-ui/icons/ExpandMoreRounded';\nexport {default as AccountCircleIcon} from '@material-ui/icons/AccountCircle';\nexport {default as SearchIcon} from '@material-ui/icons/Search';\nexport {default as ListAltOutlinedIcon} from '@material-ui/icons/ListAltOutlined';\nexport {default as AssignmentOutlinedIcon} from '@material-ui/icons/AssignmentOutlined';\nexport {default as MenuIcon} from '@material-ui/icons/Menu';\nexport {default as CloseRoundedIcon} from '@material-ui/icons/CloseRounded';\nexport {default as CreateOutlinedIcon} from '@material-ui/icons/CreateOutlined';","import React, {ComponentType} from \"react\";\nconst ProfileContainer = React.lazy(() => import(/* webpackChunkName: \"ProfileContainer\" */\"./components/Profile/ProfileContainer\"));\nconst MessagesContainer = React.lazy(() => import(/* webpackChunkName: \"MessagesContainer\" */\"./components/Messages/MessagesContainer\"));\nconst LoginContainer = React.lazy(() => import(/* webpackChunkName: \"LoginContainer\" */\"./components/Login/LoginContainer\"));\nconst UsersContainer = React.lazy(() => import(/* webpackChunkName: \"UsersContainer\" */\"./components/Users/UsersContainer\"));\nconst NotFound = React.lazy(() => import(/* webpackChunkName: \"Music\" */\"./components/NotFound/NotFound\"));\n\ntype RouteValueType = {\n    path: string,\n    redirect?:  (isAuth?: boolean) => string,\n    component?: ComponentType,\n    getPath?: any\n    exact?: boolean\n}\n\ntype RouteType = {\n    [key: string]: RouteValueType\n};\n\nconst RM:RouteType = {\n    home: {\n        path: '/',\n        exact: true,\n        redirect: (isAuth?: boolean) => {\n            return isAuth ? `/profile` : '/login'\n        },\n    },\n    profile: {\n        path: '/profile/:id?',\n        component: ProfileContainer,\n        exact: false,\n        getPath: (id: number | null) => {\n            return id ? `/profile/${id}` : '/profile'\n        },\n    },\n    settings: {\n        path: '/settings',\n        exact: true,\n        component: ProfileContainer,\n    },\n    dialogs: {\n        path: '/dialogs/:id?',\n        component: MessagesContainer,\n        getPath: (id: number | null) => {\n            return id ? `/dialogs/${id}` : '/dialogs'\n        }\n    },\n    login: {\n        path: '/login',\n        exact: true,\n        component: LoginContainer,\n    },\n    users: {\n        path: '/users',\n        exact: true,\n        component: UsersContainer,\n    },\n    notFound: {\n        path: '*',\n        exact: false,\n        component: NotFound,\n    },\n};\n\nexport default RM;","import {PhotosType, ProfileType} from \"./types\";\nimport {InferActionsTypes} from \"../redux-store\";\n\nexport const GET_STATUS_ASYNC = 'profile/GET_STATUS_ASYNC';\nexport const SET_STATUS_ASYNC = 'profile/SET_STATUS_ASYNC';\nexport const UPDATE_USER_PROFILE_ASYNC = 'profile/UPDATE_USER_PROFILE_ASYNC';\nexport const GET_USER_PROFILE_ASYNC = 'profile/GET_USER_PROFILE_ASYNC';\nexport const GET_IS_FOLLOWED_ASYNC = 'profile/GET_IS_FOLLOWED_ASYNC';\nexport const UPDATE_STATUS = 'profile/UPDATE_STATUS';\nexport const SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nexport const SET_USER_PROFILE_FAILED = 'profile/SET_USER_PROFILE_FAILED';\nexport const LOAD_PHOTO_ASYNC = 'profile/LOAD_PHOTO_ASYNC';\nexport const SET_PHOTO = 'profile/SET_PHOTO';\nexport const TOGGLE_PROFILE_LOADING = 'profile/TOGGLE_PROFILE_LOADING';\nexport const SET_IS_FOLLOWED = 'profile/SET_IS_FOLLOWED';\n\nconst initialState = {\n    profile: null as ProfileType | null,\n    profileError: null as string | null,\n    status: '',\n    profileIsLoading: false,\n    isFollowed: false\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: ProfileActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_PROFILE:\n            return {...state, profile: action.profile, profileError: null};\n        case TOGGLE_PROFILE_LOADING:\n            return {...state, profileIsLoading: action.profileIsLoading};\n        case SET_USER_PROFILE_FAILED:\n            return {...state, profile: null, profileError: action.profileError};\n        case UPDATE_STATUS:\n            return {...state, status: action.status};\n        case SET_PHOTO:\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\n        case SET_IS_FOLLOWED:\n            return {...state, isFollowed: action.isFollowed};\n        default:\n            return state;\n    }\n};\n\nexport type ProfileActionsTypes = InferActionsTypes<typeof profileActions>;\n\nexport const profileActions = {\n    toggleProfileLoading: (profileIsLoading: boolean) => ({type: TOGGLE_PROFILE_LOADING, profileIsLoading} as const),\n    setUserProfile: (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const),\n    setUserProfileError: (profileError: string) => ({type: SET_USER_PROFILE_FAILED, profileError} as const),\n    setPhoto: (photos: PhotosType) => ({type: SET_PHOTO, photos} as const),\n    updateIsFollowed: (isFollowed: boolean) => ({type: SET_IS_FOLLOWED, isFollowed} as const),\n    setStatus: (status: string) => ({type: UPDATE_STATUS, status} as const),\n    getUserStatus: (id: number) => ({type: GET_STATUS_ASYNC, id} as const),\n    setUserStatus: (status: string) => ({type: SET_STATUS_ASYNC, status} as const),\n    updateProfileInfo: (info: ProfileType, userId: number) => ({type: UPDATE_USER_PROFILE_ASYNC, info, userId} as const),\n    getUserProfile: (id: number, updateCurrentUserInfo: boolean = false) => ({type: GET_USER_PROFILE_ASYNC, id, updateCurrentUserInfo} as const),\n    loadPhoto: (photo: any) => ({type: LOAD_PHOTO_ASYNC, photo} as const),\n    getIsUserFollowed: (id: number) => ({type: GET_IS_FOLLOWED_ASYNC, id} as const),\n};\n\nexport default profileReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\nimport {DialogsType, MessagesType, PhotosType, ProfileType} from \"../redux/reducers/types\";\n\nconst instance = axios.create({\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"0cd66f02-e607-46e0-aed7-5f9c57c49533\",\n        // \"API-KEY\": \"307f2912-e9c0-4353-94d4-d2c9532f00e0\"\n    }\n});\n\n\nexport enum ResultCodes {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCaptcha {\n    CaptchaRequired = 10\n}\n\ntype AuthResponseType = {\n    resultCode: ResultCodes\n    messages: Array<string>,\n    data: {\n        id: number,\n        email: string,\n        login: string\n    }\n}\ntype LoginResponseType = {\n    resultCode: ResultCodes | ResultCodeForCaptcha\n    messages: Array<string>,\n    data: {\n        userId: number,\n    }\n}\n\ntype WithoutDataResponseType = {\n    resultCode: ResultCodes\n    messages: Array<string>,\n    data: {}\n}\n\nexport const usersAPI = {\n    getUsers: (currentPage: number, pageSize: number, searchText: string) => {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${searchText}`)\n            .then(response => response.data);\n    },\n\n    isUserFollowed: (id: number) => {\n        return instance.get<string>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n    followUser: (id: number) => {\n        return instance.post<WithoutDataResponseType>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n    unfollowUser: (id: number) => {\n        return instance.delete<WithoutDataResponseType>(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n};\n\n\nexport const authAPI = {\n    auth: () => {\n        return instance.get<AuthResponseType>('auth/me')\n            .then(response => response.data)\n    },\n\n    login: (email: string, password: string, rememberMe: boolean, captcha: null | string = null) => {\n        return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n\n    logout: () => {\n        return instance.delete<WithoutDataResponseType>('/auth/login')\n            .then(response => response.data)\n    }\n};\n\ntype CaptchaResponseType = {\n    url: string\n}\n\nexport const securityAPI = {\n    getCaptcha: () => {\n        return instance.get<CaptchaResponseType>('security/get-captcha-url')\n            .then(response => response.data)\n    }\n};\n\ntype LoadPhotoResponseType = {\n    data: {\n        photos: PhotosType,\n    }\n    resultCode: ResultCodes\n    messages: Array<string>,\n}\n\nexport const profileAPI = {\n    getProfile: (id: number) => {\n        return instance.get<ProfileType>(`profile/${id}`)\n            .then(response => response.data);\n    },\n\n    getStatus: (id: number) => {\n        return instance.get<string>(`profile/status/${id}`)\n            .then(response => response.data);\n    },\n\n    setStatus: (status: string) => {\n        return instance.put<WithoutDataResponseType>(`profile/status`, {status})\n            .then(response => response.data);\n    },\n\n    loadPhoto: (photoFile: any) => {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put<LoadPhotoResponseType>(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => response.data);\n    },\n\n    updateProfileInfo: (info: ProfileType) => {\n        return instance.put<WithoutDataResponseType>(`profile`, info)\n            .then(response => response.data);\n    }\n};\n\ntype SendMessageResponseType = {\n    data: {\n        message: MessagesType\n    }\n    messages: Array<string>\n    resultCode: ResultCodes\n}\n\ntype GetMessagesResponseType = {\n    items: Array<MessagesType>\n    totalCount: number\n    error: null | string\n}\n\nexport const dialogsAPI = {\n    getDialogs: () => {\n        return instance.get<Array<DialogsType>>('dialogs')\n            .then(response => response.data)\n    },\n\n    startChat: (userId: number) => {\n        return instance.put<WithoutDataResponseType>(`dialogs/${userId}`)\n            .then(response => response.data)\n    },\n\n    sendMessage: (userId: number, message: string) => {\n        return instance.post<SendMessageResponseType>(`dialogs/${userId}/messages`, {body: message})\n            .then(response => response.data)\n    },\n\n    getMessages: (userId: number) => {\n        return instance.get<GetMessagesResponseType>(`dialogs/${userId}/messages`)\n            .then(response => response.data)\n    },\n\n    spamMessage: (messageId: string) => {\n        return instance.post<WithoutDataResponseType>(`dialogs/messages/${messageId}/spam`)\n            .then(response => response.data)\n    },\n\n    deleteMessage: (messageId: string) => {\n        return instance.delete<WithoutDataResponseType>(`dialogs/messages/${messageId}`)\n            .then(response => response.data)\n    },\n\n    //from deleted and spam\n    restoreMessage: (messageId: string) => {\n        return instance.put<WithoutDataResponseType>(`dialogs/messages/${messageId}/restore`)\n            .then(response => response.data)\n    },\n\n    newMessagesCount: () => {\n        return instance.get<number>('dialogs/messages/new/count')\n            .then(response => response.data)\n    }\n};","import {InferActionsTypes} from \"../redux-store\";\n\nexport const INIT_APP_ASYNC = 'app/INIT_APP_ASYNC';\nexport const ENQUEUE_SNACKBAR = 'app/ENQUEUE_SNACKBAR';\nexport const REMOVE_SNACKBAR = 'app/REMOVE_SNACKBAR';\nconst SET_INITED = 'app/SET_INITED';\n\ntype InitialStateType = {\n    inited: boolean,\n    notifications: any[],\n};\n\nconst initialState: InitialStateType = {\n    inited: false,\n    notifications: [],\n};\n\nconst appReducer = (state = initialState, action: AppActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case SET_INITED:\n            return {\n                ...state,\n                inited: true\n            };\n        case ENQUEUE_SNACKBAR:\n            return {\n                ...state,\n                notifications: [\n                    ...state.notifications,\n                    {\n                        ...action.notification,\n                    },\n                ],\n            };\n        case REMOVE_SNACKBAR:\n            return {\n                ...state,\n                notifications: state.notifications.filter(\n                    notification => notification.key !== action.key,\n                ),\n            };\n        default:\n            return state;\n    }\n};\n\nexport type AppActionsTypes = InferActionsTypes<typeof appActions>;\nexport const appActions = {\n    enqueueSnackbar: (notification: any) => {\n        const key = notification.options && notification.options.key;\n        return {\n            type: ENQUEUE_SNACKBAR,\n            notification: {...notification, key: key || new Date().getTime() + Math.random()}\n        } as const;\n    },\n    removeSnackbar: (key: any) => ({type: REMOVE_SNACKBAR, key} as const),\n    setAppIsInited: () => ({type: SET_INITED} as const),\n    appInitialize: () => ({type: INIT_APP_ASYNC} as const),\n};\n\nexport default appReducer;","import {takeEvery, put, call, select} from 'redux-saga/effects';\nimport {authAPI, dialogsAPI, profileAPI, ResultCodeForCaptcha, ResultCodes, securityAPI, usersAPI} from \"../../api/api\";\nimport {\n    GET_USER_PROFILE_ASYNC,\n    LOAD_PHOTO_ASYNC,\n    GET_IS_FOLLOWED_ASYNC,\n    GET_STATUS_ASYNC,\n    SET_STATUS_ASYNC,\n    UPDATE_USER_PROFILE_ASYNC,\n    profileActions\n} from \"../reducers/profile-reducer\";\nimport {AUTH_ASYNC, authActions, LOGIN_ASYNC, LOGOUT_ASYNC,} from \"../reducers/auth-reducer\";\nimport {appActions, INIT_APP_ASYNC,} from \"../reducers/app-reducer\";\nimport {getCurrentUserId} from \"../reducers/auth-selectors\";\nimport {getProfile} from \"../reducers/profile-selectors\";\nimport {\n    FOLLOW_ASYNC,\n    REQUEST_USERS_ASYNC,\n    UNFOLLOW_ASYNC,\n    usersActions,\n} from \"../reducers/users-reducer\";\nimport {ProfileType} from \"../reducers/types\";\nimport {reset, stopSubmit} from \"redux-form\";\nimport {\n    DELETE_MESSAGE_ASYNC,\n    GET_DIALOGS_ASYNC,\n    GET_MESSAGES_ASYNC,\n    GET_NEW_MESSAGES_COUNT_ASYNC,\n    RESTORE_MESSAGE_ASYNC,\n    SEND_MESSAGE_ASYNC,\n    SPAM_MESSAGE_ASYNC,\n    START_CHAT_ASYNC,\n    dialogActions\n} from \"../reducers/dialogs-reducer\";\n\nconst {enqueueSnackbar} = appActions;\nconst {setUserData, setCaptchaUrl, setCurrentUserInfo} = authActions;\nconst {setUserProfile, setUserProfileError, toggleProfileLoading, setPhoto, getIsUserFollowed, updateIsFollowed, getUserProfile, setStatus} = profileActions;\nconst {\n    acceptFollow,\n    acceptUnfollow,\n    setPage,\n    setSearchText,\n    setUsers,\n    setUsersTotalCount,\n    toggleFollowInProgress,\n    toggleIsLoading\n} = usersActions;\nconst {\n    requestNewMessagesCount,\n    addMessage,\n    addMessageToDeleted,\n    addMessageToSpam,\n    restoreFromSpamDeleted,\n    setActivityDate,\n    setDialogs,\n    setMessages,\n    setMessagesLoading,\n    setNewMessagesCount,\n    setSelectedFriend\n} = dialogActions;\n\n//PROFILE\ntype GetUserProfileType = ReturnType<typeof profileActions.getUserProfile>;\n\nfunction* getUserProfileAsync({id, updateCurrentUserInfo}: GetUserProfileType) {\n    try {\n        const state = yield select();\n        const previousId = getProfile(state)?.userId;\n\n        if (previousId !== id) {\n            yield put(toggleProfileLoading(true));\n        }\n        const data = yield call(getProfileById, id);\n        if (updateCurrentUserInfo) {\n            yield put(setCurrentUserInfo(data));\n        }\n        yield put(setUserProfile(data));\n        if (previousId !== id) {\n            yield put(toggleProfileLoading(false));\n        }\n    } catch (e) {\n        yield put(setUserProfileError(e.message));\n    }\n}\n\ntype UpdateProfileInfoType = ReturnType<typeof profileActions.updateProfileInfo>;\n\nfunction* updateProfileInfoAsync({info, userId}: UpdateProfileInfoType) {\n    try {\n        const {resultCode, messages} = yield call(updateProfile, info);\n        if (resultCode === ResultCodes.Success) {\n            yield put(getUserProfile(userId, true));\n            yield put(enqueueSnackbar({message: 'Profile successfully updated!', options: {variant: 'success'}}))\n        } else {\n            yield put(stopSubmit(\"settings\", {_error: messages}));\n        }\n    } catch (e) {\n        yield put(setUserProfileError(e.message));\n    }\n}\n\ntype GetStatusType = ReturnType<typeof profileActions.getUserStatus>;\n\nfunction* getStatusAsync({id}: GetStatusType) {\n    try {\n        const data = yield call(getUserStatus, id);\n        yield put(setStatus(data));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype SetUserStatusType = ReturnType<typeof profileActions.setUserStatus>;\n\nfunction* setUserStatusAsync({status}: SetUserStatusType) {\n    try {\n        const {resultCode} = yield call(setUserStatus, status);\n        if (resultCode === ResultCodes.Success) {\n            yield put(setStatus(status));\n            yield put(enqueueSnackbar({message: 'Status updated!', options: {variant: 'success'}}))\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype loadPhotoType = ReturnType<typeof profileActions.loadPhoto>;\n\nfunction* loadPhotoAsync({photo}: loadPhotoType) {\n    try {\n        const {data, resultCode, messages} = yield call(loadPhoto, photo);\n        if (resultCode === ResultCodes.Success) {\n            const state = yield select();\n            yield put(setPhoto(data.photos));\n            yield put({type: GET_USER_PROFILE_ASYNC, id: getCurrentUserId(state), updateCurrentUserInfo: true});\n        } else {\n            yield put(enqueueSnackbar({message: messages, options: {variant: 'error'}}))\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//USERS\ntype setUserIsFollowedType = ReturnType<typeof profileActions.getIsUserFollowed>;\n\nfunction* setUserIsFollowedAsync({id}: setUserIsFollowedType) {\n    try {\n        const isFollowed = yield call(getUserIsFollowed, id);\n        yield put(updateIsFollowed(isFollowed));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype RequestUsersType = ReturnType<typeof usersActions.requestUsers>;\n\nfunction* requestUsersAsync({currentPage, pageSize, searchText}: RequestUsersType) {\n    try {\n        yield put(setSearchText(searchText));\n        yield put(setPage(currentPage));\n        yield put(toggleIsLoading(true));\n        const {items, totalCount} = yield call(requestUsers, currentPage, pageSize, searchText);\n        yield put(toggleIsLoading(false));\n        yield put(setUsers(items));\n        yield put(setUsersTotalCount(totalCount));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype FollowActionType = ReturnType<typeof usersActions.follow | typeof usersActions.unfollow>;\n\nfunction* toggleFollowAsync({action, id, updateProfileFollow}: FollowActionType) {\n    try {\n        yield put(toggleFollowInProgress(true, id));\n        const {resultCode, messages} = action === 'follow' ? yield call(followUser, id) : yield call(unfollowUser, id);\n        if (resultCode === ResultCodes.Success) {\n            action === 'follow' ? yield put(acceptFollow(id)) : yield put(acceptUnfollow(id));\n            if (updateProfileFollow) {\n                yield put(getIsUserFollowed(id));\n            }\n        } else {\n            yield put(enqueueSnackbar({message: messages, options: {variant: 'error'}}))\n        }\n        yield put(toggleFollowInProgress(false, id));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//DIALOGS\nfunction* getDialogsAsync() {\n    try {\n        const response = yield call(requestDialogs);\n        yield put(setDialogs(response));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype StartChatAsyncType = ReturnType<typeof dialogActions.startChat>;\nfunction* startChatAsync({userId, history}: StartChatAsyncType) {\n    try {\n        const {resultCode} = yield call(startChat, userId);\n        if (resultCode === ResultCodes.Success) {\n            history.push(`/dialogs/${userId}`)\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype SendMessageType = ReturnType<typeof dialogActions.sendMessage>;\n\nfunction* sendMessageAsync({userId, message}: SendMessageType) {\n    try {\n        const {data, resultCode} = yield call(sendMessage, userId, message);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessage(data.message));\n            yield put(reset('message'));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype DeleteMessagesType = ReturnType<typeof dialogActions.deleteMessage>;\n\nfunction* deleteMessagesAsync({messageId}: DeleteMessagesType) {\n    try {\n        const {resultCode} = yield call(deleteMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessageToDeleted(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype RestoreMessagesType = ReturnType<typeof dialogActions.restoreMessage>;\n\nfunction* restoreMessagesAsync({messageId}: RestoreMessagesType) {\n    try {\n        const {resultCode} = yield call(restoreMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(restoreFromSpamDeleted(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype SpamMessagesType = ReturnType<typeof dialogActions.spamMessage>;\n\nfunction* spamMessagesAsync({messageId}: SpamMessagesType) {\n    try {\n        const {resultCode} = yield call(spamMessage, messageId);\n        if (resultCode === ResultCodes.Success) {\n            yield put(addMessageToSpam(messageId));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype GetMessagesType = ReturnType<typeof dialogActions.getMessages>;\n\nfunction* getMessagesAsync({userId}: GetMessagesType) {\n    try {\n        yield put(setMessagesLoading(true));\n        const {error, items} = yield call(getMessages, userId);\n        const data = yield call(getProfileById, userId);\n        if (!error) {\n            yield put(setMessages(items));\n            yield put(setActivityDate(userId));\n            yield put(setSelectedFriend(data));\n        }\n        yield put(setMessagesLoading(false));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* getNewMessagesCountAsync() {\n    try {\n        const data = yield call(newMessagesCount);\n        yield put(setNewMessagesCount(data));\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n//AUTH\nfunction* authenticateAsync() {\n    try {\n        const {data, resultCode} = yield call(authenticate);\n        if (resultCode === ResultCodes.Success) {\n            const {id, login, email} = data;\n            yield put(setUserData(id, login, email, true));\n            yield put(getUserProfile(id, true));\n            yield put(requestNewMessagesCount());\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype LoginType = ReturnType<typeof authActions.login>;\n\nfunction* loginAsync({email, password, rememberMe, captcha}: LoginType) {\n    try {\n        const {resultCode, messages} = yield call(login, email, password, rememberMe, captcha);\n        if (resultCode === ResultCodes.Success) {\n            yield put({type: AUTH_ASYNC});\n        } else {\n            if (resultCode === ResultCodeForCaptcha.CaptchaRequired) {\n                const {url} = yield call(getCaptcha);\n                yield put(setCaptchaUrl(url));\n            }\n            yield put(stopSubmit(\"login\", {_error: messages}));\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\ntype LogoutType = ReturnType<typeof authActions.logout>;\n\nfunction* logoutAsync({history}: LogoutType) {\n    try {\n        const {resultCode} = yield call(logout);\n        if (resultCode === ResultCodes.Success) {\n            yield put(setUserData(null, null, null, false));\n            history.push('/login')\n        }\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\nfunction* appInitAsync() {\n    try {\n        yield put({type: AUTH_ASYNC});\n        yield put(appActions.setAppIsInited());\n    } catch (e) {\n        yield put(enqueueSnackbar({message: e.message, options: {variant: 'error'}}))\n    }\n}\n\n// API REQUESTS\nasync function authenticate() {\n    return await authAPI.auth();\n}\n\nasync function login(email: string, password: string, rememberMe: boolean, captcha: string | null) {\n    return await authAPI.login(email, password, rememberMe, captcha)\n}\n\nasync function logout() {\n    return await authAPI.logout();\n}\n\nasync function getCaptcha() {\n    return await securityAPI.getCaptcha();\n}\n\nasync function getUserStatus(id: number) {\n    return await profileAPI.getStatus(id);\n}\n\nasync function loadPhoto(photo: any) {\n    return await profileAPI.loadPhoto(photo);\n}\n\nasync function setUserStatus(status: string) {\n    return await profileAPI.setStatus(status)\n}\n\nasync function getProfileById(id: number) {\n    return await profileAPI.getProfile(id);\n}\n\nasync function updateProfile(info: ProfileType) {\n    return await profileAPI.updateProfileInfo(info);\n}\n\nasync function requestUsers(currentPage: number, pageSize: number, searchText: string) {\n    return await usersAPI.getUsers(currentPage, pageSize, searchText)\n}\n\nasync function getUserIsFollowed(id: number) {\n    return await usersAPI.isUserFollowed(id);\n}\n\nasync function followUser(id: number) {\n    return await usersAPI.followUser(id)\n}\n\nasync function unfollowUser(id: number) {\n    return await usersAPI.unfollowUser(id)\n}\n\nasync function requestDialogs() {\n    return await dialogsAPI.getDialogs();\n}\n\nasync function startChat(userId: number) {\n    return await dialogsAPI.startChat(userId);\n}\n\nasync function sendMessage(userId: number, message: string) {\n    return await dialogsAPI.sendMessage(userId, message);\n}\n\nasync function getMessages(userId: number) {\n    return await dialogsAPI.getMessages(userId);\n}\n\nasync function deleteMessage(messageId: string) {\n    return await dialogsAPI.deleteMessage(messageId)\n}\n\nasync function restoreMessage(messageId: string) {\n    return await dialogsAPI.restoreMessage(messageId)\n}\n\nasync function spamMessage(messageId: string) {\n    return await dialogsAPI.spamMessage(messageId);\n}\n\nasync function newMessagesCount() {\n    return await dialogsAPI.newMessagesCount()\n}\n\n//SAGA\nfunction* mySaga() {\n    yield takeEvery(INIT_APP_ASYNC, appInitAsync);\n    yield takeEvery(AUTH_ASYNC, authenticateAsync);\n    yield takeEvery(LOGIN_ASYNC, loginAsync);\n    yield takeEvery(LOGOUT_ASYNC, logoutAsync);\n    yield takeEvery(GET_USER_PROFILE_ASYNC, getUserProfileAsync);\n    yield takeEvery(LOAD_PHOTO_ASYNC, loadPhotoAsync);\n    yield takeEvery(GET_IS_FOLLOWED_ASYNC, setUserIsFollowedAsync);\n    yield takeEvery(FOLLOW_ASYNC, toggleFollowAsync);\n    yield takeEvery(UNFOLLOW_ASYNC, toggleFollowAsync);\n    yield takeEvery(REQUEST_USERS_ASYNC, requestUsersAsync);\n    yield takeEvery(GET_STATUS_ASYNC, getStatusAsync);\n    yield takeEvery(SET_STATUS_ASYNC, setUserStatusAsync);\n    yield takeEvery(UPDATE_USER_PROFILE_ASYNC, updateProfileInfoAsync);\n    yield takeEvery(GET_DIALOGS_ASYNC, getDialogsAsync);\n    yield takeEvery(START_CHAT_ASYNC, startChatAsync);\n    yield takeEvery(SEND_MESSAGE_ASYNC, sendMessageAsync);\n    yield takeEvery(GET_MESSAGES_ASYNC, getMessagesAsync);\n    yield takeEvery(DELETE_MESSAGE_ASYNC, deleteMessagesAsync);\n    yield takeEvery(RESTORE_MESSAGE_ASYNC, restoreMessagesAsync);\n    yield takeEvery(SPAM_MESSAGE_ASYNC, spamMessagesAsync);\n    yield takeEvery(GET_NEW_MESSAGES_COUNT_ASYNC, getNewMessagesCountAsync);\n}\n\nexport default mySaga;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profile-reducer\";\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\nimport authReducer from \"./reducers/auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./reducers/app-reducer\";\nimport usersReducer from \"./reducers/users-reducer\";\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from \"./sagas/saga\";\n\nconst rootReducer = combineReducers({\n    profileReducer,\n    dialogsReducer,\n    usersReducer,\n    authReducer,\n    app: appReducer,\n    form: formReducer\n});\n\ntype RootReducerType = typeof rootReducer;\nexport type AppStateType =  ReturnType<RootReducerType>;\nconst sagaMiddleware = createSagaMiddleware();\n\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never;\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesTypes<T>>;\n\n// @ts-ignore\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(\n        thunkMiddleware,\n        sagaMiddleware\n    )\n));\n\nsagaMiddleware.run(mySaga);\n\nexport default store;","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    list: {\n        padding: 0,\n        [theme.breakpoints.up('sm')]: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginRight: 20,\n        },\n    },\n    listItem: {\n        padding: '0 8px',\n        width: 'auto',\n        [theme.breakpoints.down('xs')]: {\n            borderBottom: `1px solid ${theme.palette.grey[200]}`,\n        },\n    },\n    link: {\n        color: theme.palette.text.primary,\n        alignItems: 'center',\n        display: 'flex',\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            padding: '8px 0',\n            color: theme.palette.grey[600]\n        },\n    },\n    icon: {\n        padding: theme.spacing(1),\n        color: theme.palette.common.white,\n        lineHeight: 0,\n        [theme.breakpoints.down('xs')]: {\n            color: theme.palette.grey[500],\n            marginRight: 5\n        },\n    },\n    name: {\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '1.2rem'\n        },\n    },\n    activeLink: {\n        pointerEvents: 'none',\n        \"& .MuiIconButton-root\": {\n            backgroundColor: theme.palette.primary.light\n        },\n        '& $icon, & $name': {\n            [theme.breakpoints.down('xs')]: {\n                color: theme.palette.primary.light,\n            },\n        }\n    },\n    tooltip: {\n        backgroundColor: theme.palette.primary.light,\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport RM from \"../../RouterManager\";\nimport classNames from \"classnames\";\nimport {MailIcon, PeopleAltIcon, HomeIcon, SettingsIcon, ExitToAppIcon} from \"../Icons/MeterialIcons\";\nimport {\n    List,\n    ListItem,\n    Link,\n    IconButton,\n    Tooltip,\n    Badge, Hidden, Typography, WithStyles,\n} from \"@material-ui/core\";\nimport withNavbarStyles from \"./navbarStyles\";\n\ntype PropsType = {\n    newMessagesCount: null | number,\n    userId: number | null,\n    openLogoutDialog: (open: boolean) => void,\n    isAuth: boolean\n};\n\nconst Navbar: FC<PropsType & WithStyles> = ({newMessagesCount, userId, openLogoutDialog, isAuth, classes}) => {\n    const LINKS = [\n        {\n            id: 1,\n            text: 'Profile',\n            url: RM.profile.getPath(userId),\n            icon: <HomeIcon/>\n        }, {\n            id: 2,\n            text: 'Dialogs',\n            url: RM.dialogs.getPath(null),\n            icon: <MailIcon/>\n        }, {\n            id: 3,\n            text: 'Users',\n            url: RM.users.path,\n            icon: <PeopleAltIcon/>\n        }\n    ];\n\n    const MOBILE_LINKS = [\n        ...LINKS,\n        {\n            id: 4,\n            text: 'Settings',\n            url: RM.settings.path,\n            icon: <SettingsIcon/>\n        },\n        {\n            id: 5,\n            text: 'Logout',\n            url: null,\n            icon: <ExitToAppIcon/>\n        }\n    ];\n\n    let areNewMessages = newMessagesCount && newMessagesCount > 0;\n\n    return (\n        <List className={classes.list}>\n            <Hidden xsDown>\n                {LINKS.map(({id, text, url, icon}) => (\n                    <ListItem key={id} className={classes.listItem}>\n                        <Link component={NavLink} to={url} activeClassName={classes.activeLink} className={classes.link}\n                              underline=\"none\" color=\"textSecondary\">\n                            <Tooltip title={text} aria-label={text} classes={{tooltip: classes.tooltip}}>\n                                <IconButton aria-label={text} className={classes.icon}>\n                                    {url === RM.dialogs.getPath(null) && areNewMessages ?\n                                        <Badge badgeContent={newMessagesCount} max={99} color=\"secondary\">\n                                            {icon}\n                                        </Badge> : icon\n                                    }\n                                </IconButton>\n                            </Tooltip>\n                        </Link>\n                    </ListItem>\n                ))}\n            </Hidden>\n\n            <Hidden smUp>\n                {MOBILE_LINKS.map(({id, text, url, icon}) => {\n                        if (id === 5 && !isAuth) return null;\n                        return (\n                            <ListItem key={id} className={classes.listItem}>\n                                <Link component={url ? NavLink : 'span'}\n                                      {...url ? {\n                                          to: url,\n                                          activeClassName: classes.activeLink\n                                      } : ''}\n                                      {...id === 5 ? {onClick: () => openLogoutDialog(true)} : ''}\n                                      className={classes.link}\n                                      underline=\"none\"\n                                      color=\"textSecondary\"\n                                >\n                                    <Typography variant=\"body1\" component=\"span\"\n                                                className={classNames('MuiListItemIcon-root', classes.icon)}>\n                                        {url === RM.dialogs.getPath(null) && areNewMessages ?\n                                            <Badge color=\"secondary\" variant=\"dot\">\n                                                {icon}\n                                            </Badge> : icon\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"body1\" component=\"span\" className={classes.name}>\n                                        {text}\n                                    </Typography>\n                                </Link>\n                            </ListItem>\n                        )\n                    }\n                )}\n            </Hidden>\n        </List>\n    )\n};\n\n\nexport default withNavbarStyles(Navbar);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    paper: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n    },\n    list: {\n        padding: 0,\n        backgroundColor: theme.palette.common.white\n    },\n    menuItemTxt: {\n        lineHeight: 1\n    },\n    menuItem: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            color:  theme.palette.common.white,\n\n            '& .MuiLink-root, & .MuiListItemIcon-root': {\n                color:  theme.palette.common.white,\n                textDecoration: 'none'\n            }\n        }\n    },\n    menuIcon: {\n      minWidth: 35\n    },\n    link: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            color:  theme.palette.common.white,\n\n            '& .MuiLink-root, & .MuiListItemIcon-root': {\n                color:  theme.palette.common.white,\n                textDecoration: 'none'\n            }\n        }\n    }\n}));\n\n\nexport default withStyles(styles, {withTheme: true})","import React, {FC} from 'react';\nimport {\n    Divider,\n    ListItemIcon,\n    ListItemText,\n    Menu,\n    MenuItem,\n    Typography,\n    WithStyles\n} from '@material-ui/core';\nimport {NavLink} from \"react-router-dom\";\nimport withSubmenuStyles from './submenuStyles'\nimport RM from \"../../RouterManager\";\nimport classNames from \"classnames\";\nimport {EditRoundedIcon, PersonRoundedIcon, ExitToAppIcon} from \"../Icons/MeterialIcons\";\n\ntype PropsType = {\n    userId: number | null,\n    handleClose: () => void\n    anchorEl: null | HTMLElement,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst Submenu: FC<PropsType & WithStyles> = ({userId, handleClose, anchorEl, classes, openLogoutDialog}) => {\n    return (\n        <Menu\n            id=\"customized-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            elevation={10}\n            getContentAnchorEl={null}\n            classes={{\n                paper: classes.paper,\n                list: classes.list\n            }}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <MenuItem component={NavLink} to={RM.profile.getPath(userId)} className={classes.menuItem} onClick={() => handleClose()}>\n                    <span className={classNames('MuiListItemIcon-root', classes.menuIcon)}>\n                        <PersonRoundedIcon fontSize=\"small\"/>\n                    </span>\n                <Typography variant=\"body1\" component=\"span\" className={classes.menuItemTxt}>Profile</Typography>\n            </MenuItem>\n            <Divider orientation=\"horizontal\" light={true}/>\n            <MenuItem component={NavLink} to={RM.settings.path} className={classes.menuItem} onClick={() => handleClose()}>\n                     <span className={classNames('MuiListItemIcon-root', classes.menuIcon)}>\n                        <EditRoundedIcon fontSize=\"small\"/>\n                    </span>\n                <Typography variant=\"body1\" component=\"span\" className={classes.menuItemTxt}>Edit Profile</Typography>\n            </MenuItem>\n            <Divider orientation=\"horizontal\" light={true}/>\n\n            <MenuItem className={classes.menuItem} onClick={() => {openLogoutDialog(true); handleClose()}}>\n                <ListItemIcon className={classes.menuIcon}>\n                    <ExitToAppIcon fontSize=\"small\"/>\n                </ListItemIcon>\n                <ListItemText classes={{primary: classes.menuItemTxt}} primary=\"Logout\"/>\n            </MenuItem>\n        </Menu>\n    )\n};\n\nexport default withSubmenuStyles(Submenu);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    avatar: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 20,\n        paddingRight: 20,\n        textTransform: 'none',\n    },\n    avatarRoot: {\n        marginRight: 10\n    },\n    loginLink: {\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: theme.palette.common.white\n    },\n\n    avatarText: {\n        padding: '0 5px'\n    },\n\n    avatarIcon: {\n        '&.active': {\n            transform: 'rotate(180deg)',\n            transition: '0.1s linear'\n        }\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {Avatar, Button, Hidden, Link, Typography, WithStyles} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport userPlaceholder from \"../../assets/images/user-placeholder.png\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport Submenu from \"./Submenu\";\nimport RM from \"../../RouterManager\";\nimport withAuthBtnStyles from \"./authBtnStyles\";\nimport {ExpandMoreRoundedIcon} from \"../Icons/MeterialIcons\";\n\ntype PropsType = {\n    login: string | null,\n    isAuth: boolean,\n    currentUserInfo: ProfileType | null\n    userId: number | null,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst AuthBtn: FC<PropsType & WithStyles> = ({isAuth, login, currentUserInfo, userId, openLogoutDialog, classes}) => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const avatar = currentUserInfo  && currentUserInfo.photos.small ? currentUserInfo.photos.small : userPlaceholder;\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {\n                isAuth &&\n                <>\n                    <Button\n                        className={classes.avatar}\n                        color=\"inherit\"\n                        onClick={handleClick}\n                        aria-controls=\"customized-menu\"\n                        aria-haspopup=\"true\"\n                    >\n                        <Avatar src={avatar} alt={login ? login : 'avatar'} sizes=\"40\" classes={{root: classes.avatarRoot}}/>\n                        <Hidden smDown>\n                            <Typography variant=\"body2\" className={classes.avatarText}>\n                                {currentUserInfo && currentUserInfo.fullName ? currentUserInfo.fullName : login}\n                            </Typography>\n                        </Hidden>\n                        <ExpandMoreRoundedIcon fontSize=\"small\" className={`${classes.avatarIcon} ${anchorEl ? 'active': ''}`}/>\n                    </Button>\n                    <Submenu openLogoutDialog={openLogoutDialog} userId={userId} handleClose={handleClose} anchorEl={anchorEl}/>\n                </>\n            }\n\n            {\n                !isAuth &&\n                <Link component={NavLink} to={RM.login.path} className={classes.loginLink}>\n                    Login\n                </Link>\n            }\n\n        </>\n    )\n};\n\nexport default withAuthBtnStyles(AuthBtn);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    list: {\n        width: 250,\n    },\n    menuButton: {\n        marginRight: 0,\n        padding: theme.spacing(1)\n    },\n    paper: {\n        backgroundColor: theme.palette.common.white\n    },\n    head: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        lineHeight: 1,\n        backgroundColor: theme.palette.primary.main,\n        height: 49,\n    },\n    headImg: {\n        height: 30\n    },\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {SwipeableDrawer, IconButton, WithStyles} from '@material-ui/core';\nimport {NavLink} from \"react-router-dom\";\nimport RM from \"../../RouterManager\";\nimport logoImg from \"../../assets/images/logo.png\";\nimport withMobileMenuStyles from \"./mobileMenuStyles\";\nimport {CloseRoundedIcon, MenuIcon} from \"../Icons/MeterialIcons\";\n\nconst MobileMenu:FC<WithStyles> = ({children, classes}) => {\n    const [open, setOpen] = React.useState(false);\n\n    const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent,) => {\n        if (event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return;\n        }\n        setOpen(open)\n    };\n\n    return (\n        <>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer(true)}\n                edge=\"end\"\n                className={classes.menuButton}\n            >\n                {open ? <CloseRoundedIcon fontSize=\"large\"/> : <MenuIcon fontSize=\"large\"/>}\n            </IconButton>\n\n            <SwipeableDrawer\n                open={open}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n                anchor=\"left\"\n                classes={{\n                    paper: classes.paper\n                }}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                >\n                    <NavLink to={RM.home.path} className={classes.head}>\n                        <img src={logoImg} alt=\"\" className={classes.headImg}/>\n                    </NavLink>\n                    {children}\n                </div>\n            </SwipeableDrawer>\n        </>\n    )\n};\n\nexport default withMobileMenuStyles(MobileMenu);","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    grid: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.white,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    logo: {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        lineHeight: 1\n    },\n    logoImg: {\n        height: 30,\n        [theme.breakpoints.up('sm')]: {\n            height: 35,\n        },\n    },\n    logoutBtn: {\n        padding: theme.spacing(1),\n    },\n    logoTxt: {\n        padding: theme.spacing(1),\n        color: theme.palette.common.white,\n        fontWeight: 300\n    },\n    rightColumn: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        height: '100%'\n    },\n    avatar: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 20,\n        paddingRight: 20,\n        textTransform: 'none'\n    },\n    avatarText: {\n        padding: '0 5px'\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport logoImg from '../../assets/images/logo.png';\nimport {\n    AppBar,\n    Toolbar,\n    Grid,\n    Container,\n    Divider, Hidden, WithStyles\n} from '@material-ui/core';\nimport Navbar from \"./Navbar\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport AuthBtn from \"./AuthBtn\";\nimport RM from \"../../RouterManager\";\nimport MobileMenu from \"./MobileMenu\";\nimport withHeaderStyles from \"./headerStyles\";\n\ntype PropsType = {\n    userId: number | null,\n    login: string | null,\n    isAuth: boolean,\n    newMessagesCount: number | null\n    currentUserInfo: ProfileType | null,\n    openLogoutDialog: (open: boolean) => void\n}\n\nconst Header: FC<PropsType & WithStyles> = ({userId, login, isAuth, newMessagesCount, currentUserInfo, openLogoutDialog, classes}) => {\n    return (\n        <AppBar position=\"fixed\" component=\"header\" className={classes.appBar}>\n            <Container maxWidth=\"lg\">\n                <Toolbar variant=\"dense\" disableGutters>\n                    <Grid container className={classes.grid} spacing={0}>\n                        <Grid item xs={6} sm={4}>\n                            <div className={classes.logo}>\n                                <NavLink to={RM.home.path} >\n                                        <img src={logoImg} alt=\"\" className={classes.logoImg}/>\n                                </NavLink>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6} sm={8}>\n                            <div className={classes.rightColumn}>\n                                <Hidden xsDown>\n                                    <Navbar\n                                        isAuth={isAuth}\n                                        newMessagesCount={newMessagesCount}\n                                        userId={currentUserInfo ? currentUserInfo.userId : null}\n                                        openLogoutDialog={openLogoutDialog}\n                                      />\n                                    <Divider\n                                        orientation=\"vertical\"\n                                        flexItem\n                                        light={true}/>\n                                    <AuthBtn login={login} openLogoutDialog={openLogoutDialog} isAuth={isAuth}\n                                             currentUserInfo={currentUserInfo} userId={userId}/>\n                                    <Divider orientation=\"vertical\" flexItem light={true}/>\n                                </Hidden>\n\n                                <Hidden smUp>\n                                    <MobileMenu>\n                                        <Navbar\n                                            isAuth={isAuth}\n                                            openLogoutDialog={openLogoutDialog}\n                                            newMessagesCount={newMessagesCount}\n                                            userId={currentUserInfo ? currentUserInfo.userId : null}\n                                        />\n                                    </MobileMenu>\n                                </Hidden>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    )\n};\n\nexport default withHeaderStyles(Header);","import React, {FC, useState} from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {authActions} from \"../../redux/reducers/auth-reducer\";\nimport {compose} from \"redux\";\nimport {withRouter, RouteComponentProps, useHistory} from \"react-router-dom\";\nimport {\n    getCurrentUserInfo,\n    getCurrentUserId,\n    getCurrentUserLogin,\n    getIsAuth\n} from \"../../redux/reducers/auth-selectors\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getNewMessagesCount} from \"../../redux/reducers/dialogs-selectors\";\nimport {ProfileType} from \"../../redux/reducers/types\";\nimport ConfirmDialog from \"../Profile/Dialogs/ConfirmDialog\";\n\ntype MapStatePropsType = {\n    userId: number | null,\n    login: string | null,\n    isAuth: boolean,\n    newMessagesCount: number | null,\n    currentUserInfo: ProfileType | null\n}\n\ntype MapDispatchPropsType = {\n    logout: (history: any) => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps\n\nconst HeaderContainer: FC<PropsType> = ({logout, ...props}) => {\n    const [logoutDialogIsOpen, setLogoutDialogIsOpen] = useState(false);\n    let history = useHistory();\n\n    const openLogoutDialog = (open: boolean) => {\n        setLogoutDialogIsOpen(open);\n    };\n\n     const logoutAction = () => {\n        logout(history);\n    };\n\n    return (\n        <>\n            <Header {...props} openLogoutDialog={openLogoutDialog}/>\n            <ConfirmDialog\n                isOpen={logoutDialogIsOpen}\n                openDialog={openLogoutDialog}\n                confirmAction={logoutAction}>\n                {true}\n            </ConfirmDialog>\n        </>\n    )\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        userId: getCurrentUserId(state),\n        login: getCurrentUserLogin(state),\n        isAuth: getIsAuth(state),\n        newMessagesCount: getNewMessagesCount(state),\n        currentUserInfo: getCurrentUserInfo(state)\n    }\n};\n\nconst {logout} = authActions;\n\nexport default compose(\n    connect<MapStatePropsType, MapDispatchPropsType, RouteComponentProps, AppStateType>(mapStateToProps, {logout}),\n    withRouter\n)(HeaderContainer) as FC;\n","import React, {Suspense} from \"react\";\nimport Preloader from \"../Preloader/Preloader\";\n\nconst withSuspense = (WrappedComponent) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader showPreloader={true}/>}>\n               <WrappedComponent {...props}/>\n           </Suspense>\n        )\n    }\n};\n\nexport default withSuspense;","import {AppStateType} from \"../redux-store\";\n\nexport const getAppInited = (state: AppStateType) => {\n    return state.app.inited\n};","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useSnackbar} from 'notistack';\nimport {appActions} from \"../../redux/reducers/app-reducer\";\n\nlet displayed = [];\n\nconst Notifier = () => {\n    const dispatch = useDispatch();\n    const notifications = useSelector(store => store.app.notifications || []);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    const storeDisplayed = (id) => {\n        displayed = [...displayed, id];\n    };\n\n    const removeDisplayed = (id) => {\n        displayed = [...displayed.filter(key => id !== key)];\n    };\n\n    React.useEffect(() => {\n        notifications.forEach(({key, message, options = {}, dismissed = false}) => {\n            if (dismissed) {\n                // dismiss snackbar using notistack\n                closeSnackbar(key);\n                return;\n            }\n\n            // do nothing if snackbar is already displayed\n            if (displayed.includes(key)) return;\n\n            // display snackbar using notistack\n            enqueueSnackbar(message, {\n                key,\n                ...options,\n                onClose: (event, reason, myKey) => {\n                    if (options.onClose) {\n                        options.onClose(event, reason, myKey);\n                    }\n                },\n                onExited: (event, myKey) => {\n                    // removen this snackbar from redux store\n                    dispatch(appActions.removeSnackbar(myKey));\n                    removeDisplayed(myKey);\n                },\n            });\n\n            // keep track of snackbars that we've displayed\n            storeDisplayed(key);\n        });\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n    return null;\n};\n\nexport default Notifier;\n","import React from 'react';\nimport {Container} from \"@material-ui/core\";\n\nconst Footer = () => {\n  return <footer className=\"footer\" style={{background: '#3d4977'}}>\n    <Container maxWidth=\"lg\">\n      <div style={{color: '#fff', padding: '5px 0', fontSize: 12}}>\n            Copyright © 2020 Andreeva Alina\n      </div>\n    </Container>\n  </footer>\n};\n\nexport default Footer;\n","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport default withStyles(styles, {withTheme: true})","import React, {Component} from 'react';\nimport {Switch, Route, withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {appActions} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport withSuspense from \"./components/HOC/Suspense\";\nimport {getAppInited} from \"./redux/reducers/app-selectors\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {WithStyles, CssBaseline, Container} from \"@material-ui/core\";\nimport Notifier from \"./components/Notifier/Notifier\";\nimport {withSnackbar, WithSnackbarProps} from 'notistack';\nimport RM from \"./RouterManager\";\nimport Footer from \"./components/Footer/Footer\";\nimport {getIsAuth} from \"./redux/reducers/auth-selectors\";\nimport withAppStyles from './appStyles'\n\ntype MapStatePropsType = {\n    inited: boolean,\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    appInitialize: () => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & WithStyles & WithSnackbarProps;\n\nclass App extends Component<PropsType> {\n    componentDidMount() {\n        this.props.appInitialize();\n        window.addEventListener(\"unhandledrejection\", this.globalError);\n    }\n\n    globalError = (e: any) => {\n        this.props.enqueueSnackbar(`${e.reason}`, {variant: 'error'});\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.globalError);\n    }\n\n    render() {\n        const {classes, inited} = this.props;\n        if (!inited) {\n            return <Preloader showPreloader={true}/>\n        }\n        return (\n            <>\n                <Notifier/>\n                <CssBaseline/>\n                <HeaderContainer/>\n                <Container maxWidth=\"lg\" component=\"main\" className={classes.content}>\n                    <div className={classes.toolbar}/>\n                    <Switch>\n                        {Object.entries(RM).map(([key, route]) => {\n                            const {path, exact=false, redirect=null, component: Cmp} = route;\n                            const redirectPath = redirect ? redirect(this.props.isAuth) : '';\n                            const RouteComponent = redirect ? <Redirect to={redirectPath}/> : withSuspense(Cmp);\n                            return (\n                                <Route\n                                    key={key}\n                                    path={path}\n                                    exact={exact}\n                                >\n                                    {RouteComponent}\n                                </Route>\n                            )\n                        })}\n                    </Switch>\n                </Container>\n                <Footer/>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        inited: getAppInited(state),\n        isAuth: getIsAuth(state)\n    }\n};\n\nexport default compose(\n    withAppStyles,\n    withSnackbar,\n    connect<MapStatePropsType, MapDispatchPropsType, WithSnackbarProps, AppStateType>(mapStateToProps, {appInitialize: appActions.appInitialize}),\n    withRouter\n)(App) as React.ComponentType<any>;\n\n\n\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        useNextVariants: true,\n        color: '#333',\n        h2: {\n            fontSize: '3rem'\n        },\n        h3: {\n            fontSize: '2.5rem'\n        },\n        h4: {\n            fontSize: '1.75rem'\n        },\n        subtitle1: {\n            fontWeight: 500\n        }\n\n    },\n    mixins: {\n        toolbar: {\n            minHeight: 48\n        }\n    },\n    palette: {\n        type: 'light',\n        primary: {\n            main: '#3d4977'\n        },\n        secondary: {\n            main: '#ab003c',\n        },\n        grey: grey,\n        success: {\n            main: '#00B294',\n        },\n        background: '#f5f5f5',\n        error: {\n            main: '#E81123'\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        contrastText: '#fff',\n        text: {\n            primary: '#333',\n        },\n\n    },\n});","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport ApolloClient from 'apollo-boost';\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from './theme'\nimport {ApolloProvider as ApolloHooksProvider} from \"@apollo/react-hooks\";\nimport {SnackbarProvider} from 'notistack';\n\nconst client = new ApolloClient({\n    uri: '/graphql'\n});\n\n\nReactDOM.render(\n    <Router>\n        <ApolloHooksProvider client={client}>\n            <Provider store={store}>\n                <SnackbarProvider maxSnack={3} anchorOrigin={{vertical: 'bottom', horizontal: 'right',}} autoHideDuration={2000}>\n                    <ThemeProvider theme={theme}>\n                        <App/>\n                    </ThemeProvider>\n                </SnackbarProvider>\n            </Provider>\n        </ApolloHooksProvider>\n    </Router>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export const updateObjectInArray = (items: Array<any>, itemId: number,  objPropName: string, objNewProps: any ) => {\n    return items.map(item => {\n        if (item[objPropName] === itemId) {\n            return {...item, ...objNewProps}\n        }\n        return item;\n    })\n};","import {updateObjectInArray} from \"../../utils/helpers\";\nimport {UserType} from \"./types\";\nimport {InferActionsTypes} from \"../redux-store\";\n\nexport const FOLLOW_ASYNC = 'users/FOLLOW_ASYNC';\nexport const UNFOLLOW_ASYNC = 'users/UNFOLLOW_ASYNC';\nexport const REQUEST_USERS_ASYNC = 'users/REQUEST_USERS_ASYNC';\nexport const FOLLOW_ACCEPT = 'users/FOLLOW_ACCEPT';\nexport const UNFOLLOW_ACCEPT = 'users/UNFOLLOW_ACCEPT';\nexport const SET_USERS = 'users/SET_USERS';\nexport const SET_PAGE = 'users/SET_PAGE';\nexport const SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\nexport const TOGGLE_IS_LOADING = 'users/TOGGLE_IS_LOADING';\nexport const TOGGLE_FOLLOW_IN_PROGRESS = 'users/TOGGLE_FOLLOW_IN_PROGRESS';\nexport const SET_SEARCH_TEXT = 'users/SET_SEARCH_TEXT';\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 12 as number,\n    totalUsersCount: 20 as number,\n    currentPage: 1 as number,\n    isLoading: true,\n    followInProgress: [] as Array<number>,\n    searchQuery: null as string | null,\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst usersReducer = (state = initialState, action: UsersActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW_ACCEPT:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            };\n        case UNFOLLOW_ACCEPT:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            };\n        case SET_USERS:\n            return {...state, users: action.users};\n        case SET_PAGE:\n            return {...state, currentPage: action.page};\n        case SET_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.count};\n        case TOGGLE_IS_LOADING:\n            return {...state, isLoading: action.isLoading};\n        case SET_SEARCH_TEXT:\n            return {...state, searchQuery: action.query};\n        case TOGGLE_FOLLOW_IN_PROGRESS:\n            return {\n                ...state,\n                followInProgress: action.inProgress ?\n                    [...state.followInProgress, action.userId] :\n                    state.followInProgress.filter(id => id !== action.userId)\n            };\n        default:\n            return state;\n    }\n};\n\nexport type UsersActionsTypes = InferActionsTypes<typeof usersActions>;\n\nexport const usersActions = {\n   setUsers: (users: Array<UserType>) => ({type: SET_USERS, users} as const),\n   setPage: (page: number) => ({type: SET_PAGE, page} as const),\n   setUsersTotalCount: (count: number) => ({type: SET_TOTAL_COUNT, count} as const),\n   toggleIsLoading: (isLoading: boolean) => ({type: TOGGLE_IS_LOADING, isLoading} as const),\n   toggleFollowInProgress: (inProgress: boolean, userId: number) => ({type: TOGGLE_FOLLOW_IN_PROGRESS, inProgress, userId} as const),\n   setSearchText: (query: string) => ({type: SET_SEARCH_TEXT, query} as const),\n   requestUsers: (currentPage: number, pageSize: number, searchText: string) => ({type: REQUEST_USERS_ASYNC, currentPage, pageSize, searchText} as const),\n   follow: (id: number, updateProfileFollow: boolean) => ({type: FOLLOW_ASYNC, action: 'follow', id, updateProfileFollow} as const),\n   unfollow: (id: number, updateProfileFollow: boolean) => ({type: UNFOLLOW_ASYNC, action: 'unfollow', id, updateProfileFollow} as const),\n   acceptFollow: (userId: number) => ({type: FOLLOW_ACCEPT, userId} as const),\n   acceptUnfollow: (userId: number) => ({type: UNFOLLOW_ACCEPT, userId} as const),\n};\n\nexport default usersReducer;","import {ProfileType} from \"./types\";\nimport {InferActionsTypes} from \"../redux-store\";\n\nexport const AUTH_ASYNC = 'auth/AUTH_ASYNC';\nexport const LOGIN_ASYNC = 'auth/LOGIN_ASYNC';\nexport const LOGOUT_ASYNC = 'auth/LOGOUT_ASYNC';\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\nconst SET_CURRENT_USER_INFO = 'auth/SET_CURRENT_USER_INFO';\n\nconst initialState = {\n    userId: null as number | null,\n    login: null as string | null,\n    email: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null,\n    currentUserInfo: null as ProfileType | null\n};\n\ntype InitialStateType = typeof initialState;\n\nconst authReducer = (state = initialState, action: AuthActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            const {userId, login, email, isAuth} = action;\n            return {...state, userId, login, email, isAuth};\n        case SET_CURRENT_USER_INFO:\n            const {currentUserInfo} = action;\n            return {...state, currentUserInfo};\n        case SET_CAPTCHA_URL:\n            const {captchaUrl} = action;\n            return {...state, captchaUrl};\n        default:\n            return state;\n    }\n};\n\nexport type AuthActionsTypes = InferActionsTypes<typeof authActions>;\nexport const authActions = {\n    setUserData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\n        type: SET_USER_DATA, userId, login, email, isAuth\n    } as const),\n    setCaptchaUrl: (captchaUrl: string) => ({type: SET_CAPTCHA_URL, captchaUrl} as const),\n    setCurrentUserInfo: (currentUserInfo: ProfileType | null) => ({type: SET_CURRENT_USER_INFO, currentUserInfo} as const),\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | null) => ({type: LOGIN_ASYNC, email, password, rememberMe, captcha} as const),\n    logout: (history: any) => ({type: LOGOUT_ASYNC, history}  as const),\n};\nexport default authReducer;","import {AppStateType} from \"../redux-store\";\n\nexport const getCurrentUserId = (state: AppStateType) => {\n    return state.authReducer.userId\n};\n\nexport const getCurrentUserLogin = (state: AppStateType) => {\n    return state.authReducer.login\n};\n\nexport const getIsAuth = (state: AppStateType) => {\n    return state.authReducer.isAuth\n};\n\nexport const getCurrentUserInfo = (state: AppStateType) => {\n    return state.authReducer.currentUserInfo\n};\n\nexport const getCaptchaUrl = (state: AppStateType) => {\n    return state.authReducer.captchaUrl\n};","import {withStyles, createStyles, Theme} from '@material-ui/core/styles';\n\nconst styles = createStyles((theme: Theme) => ({\n    preloader: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(255,255,255, 0.7)\",\n        zIndex: 2,\n        bottom: 0\n    }\n}));\n\nexport default withStyles(styles, {withTheme: true})\n","import React, {FC, ReactNode} from 'react';\nimport {CircularProgress, WithStyles} from \"@material-ui/core\";\nimport withPreloaderStyles from \"./preloaderStyles\";\n\ntype PropsType = {\n    showPreloader: boolean,\n    children?: ReactNode\n}\n\nconst Preloader: FC<PropsType & WithStyles> = ({showPreloader, classes}) => {\n    if (!showPreloader) {\n        return null\n    }\n    return (\n        <div className={classes.preloader}>\n            {showPreloader &&\n                <CircularProgress color=\"secondary\"/>\n            }\n        </div>\n    )\n};\n\nexport default withPreloaderStyles(Preloader);"],"sourceRoot":""}